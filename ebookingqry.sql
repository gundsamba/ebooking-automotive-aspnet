USE ebookingdb

DROP TABLE TBL_USER_ROLE;
CREATE TABLE TBL_USER_ROLE(
	ID numeric(18,0) IDENTITY(1,1),
	[USER_ID] numeric(18,0),
	ROLE_ID numeric(18,0)
);
DROP TABLE TBL_TEETH;
CREATE TABLE TBL_TEETH(
	ID varchar(2),
	NAME nvarchar(50)
);
DROP TABLE TBL_ROOM;
CREATE TABLE TBL_ROOM(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(50),
	CHAIRNUM numeric(2,0)
);
DROP TABLE TBL_SETUP;
CREATE TABLE TBL_SETUP(
	CLINIC_ID numeric(18,0),
	KEYCODE varchar(50),
	NAME nvarchar(100),
	VALUE nvarchar(100)
);
DROP TABLE TBL_SERVICE;
CREATE TABLE TBL_SERVICE (
	ID NUMERIC(18) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CODE varchar(10),
	NAME nvarchar(255),
	[DESCRIPTION] nvarchar(255),
	PRICE numeric(8,0),
	SERVICE_TYPE_ID numeric(18,0)
);
DROP TABLE TBL_SERVICE_TYPE;
CREATE TABLE TBL_SERVICE_TYPE (
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_PATIENT;
CREATE TABLE TBL_PATIENT(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CODE varchar(10),
	NAME nvarchar(255),
	[TYPE] numeric(1,0),
	TEL varchar(15),
	TEL2 varchar(15),
	EMAIL varchar(100),
	[ADDRESS] nvarchar(255),
	MARK_ID numeric(18,0),
	PRODUCEDYEAR numeric(4,0),
	AUTONO nvarchar(8),
	VINNO nvarchar(17),
	FUELTYPE numeric(1,0),
	TRANSMISSIONTYPE numeric(1,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_AUTOMARK;
CREATE TABLE TBL_AUTOMARK(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(100),
	CLINIC_ID numeric(18,0)
);
DROP TABLE TBL_STAFF_POSITION;
CREATE TABLE TBL_STAFF_POSITION(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(50)
);
DROP TABLE TBL_STAFF;
CREATE TABLE TBL_STAFF(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CODE varchar(5),
	IDCARD nvarchar(10),
	FNAME nvarchar(100),
	LNAME nvarchar(100),
	MNAME nvarchar(100),
	BIRTHDATE date,
	GENDER numeric(1,0),
	TEL varchar(15),
	TEL2 varchar(15),
	[ADDRESS] nvarchar(255),
	EMAIL varchar(100),
	MEMO nvarchar(255),
	PICTURE nvarchar(255),
	[PASSWORD] nvarchar(50),
	STAFF_POSITION_ID numeric(18,0),
	ISACTIVE numeric(1)
);
DROP TABLE TBL_APPOINTMENT_TYPE;
CREATE TABLE TBL_APPOINTMENT_TYPE(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(100),
	COLORCLASS varchar(50)
);
DROP TABLE TBL_APPOINTMENT;
CREATE TABLE TBL_APPOINTMENT(
	ID numeric(18,0) IDENTITY(1,1),
	NUM varchar(9),
	CLINIC_ID numeric(18,0),
	ROOM_ID numeric(18,0),
	CHAIRNUM numeric(2,0),
	PATIENT_ID numeric(18,0),
	DT varchar(10),
	STARTTIME varchar(5),
	ENDTIME varchar(5),
	APPOINTMENT_TYPE_ID numeric(18,0),
	APPOINTMENTTYPE numeric(1,0),
	REQUESTMEMO nvarchar(1000),
	DISCOUNT numeric(8,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
alter table TBL_APPOINTMENT 
alter column CHAIRNUM numeric(2,0);

DROP TABLE TBL_REQUESTTYPE
CREATE TABLE TBL_REQUESTTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(100),
	CLINIC_ID numeric(18,0)
);
DROP TABLE TBL_APPOINTMENT_REQUESTTYPE
CREATE TABLE TBL_APPOINTMENT_REQUESTTYPE(
	APPOINTMENT_ID numeric(18,0),
	REQUESTTYPE_ID numeric(18,0)
);
DROP TABLE TBL_DIAGNOSTICTYPE;
CREATE TABLE TBL_DIAGNOSTICTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(100),
	PRICE numeric(8,0),
	CLINIC_ID numeric(18,0)
);
DROP TABLE TBL_APPOINTMENT_DIAGNOSTICTYPE
CREATE TABLE TBL_APPOINTMENT_DIAGNOSTICTYPE(
	APPOINTMENT_ID numeric(18,0),
	DIAGNOSTICTYPE_ID numeric(18,0),
	NAME nvarchar(255),
	PRICE numeric(8,0),
	CNT smallint
);
DROP TABLE TBL_APPOINTMENT_DIAGNOSTIC;
CREATE TABLE TBL_APPOINTMENT_DIAGNOSTIC(
	APPOINTMENT_ID numeric(18,0),
	[DESCRIPTION] nvarchar(2000),
	SENIORMECHANICAL_STAFFID numeric(18,0),
	SERVICECONSULTANT_STAFFID numeric(18,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);


DROP TABLE TBL_REPAIRTYPE;
CREATE TABLE TBL_REPAIRTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(100),
	ISPRICE numeric(1,0),
	CLINIC_ID numeric(18,0)
);
DROP TABLE TBL_APPOINTMENT_SERVICE;
CREATE TABLE TBL_APPOINTMENT_SERVICE(
	ID numeric(18,0) IDENTITY(1,1),
	APPOINTMENT_ID numeric(18,0),
	SERVICE_TYPE_NAME nvarchar(255),
	SERVICE_CODE nvarchar(10),
	[SERVICE_NAME] nvarchar(255),
	[SERVICE_DESCRIPTION] nvarchar(255),
	[DESCRIPTION] nvarchar(255),
	SERVICE_PRICE numeric(8,0),
	CNT smallint
);
DROP TABLE TBL_APPOINTMENT_REPAIR;
CREATE TABLE TBL_APPOINTMENT_REPAIR(
	APPOINTMENT_ID numeric(18,0),
	REPAIRTYPE_ID numeric(18,0),
	MECHANICAL_STAFFID numeric(18,0),
	SENIORMECHANICAL_STAFFID numeric(18,0),
	SERVICECONSULTANT_STAFFID numeric(18,0),
	ISADDITIONALREPAIR numeric(1,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_APPOINTMENT_PART;
CREATE TABLE TBL_APPOINTMENT_PART(
	ID numeric(18,0) IDENTITY(1,1),
	APPOINTMENT_ID numeric(18,0),
	PART_TYPE_NAME nvarchar(255),
	PART_CODE nvarchar(10),
	[PART_NAME] nvarchar(255),
	[PART_DESCRIPTION] nvarchar(255),
	[DESCRIPTION] nvarchar(255),
	PART_PRICE numeric(8,0),
	CNT smallint
);
DROP TABLE TBL_PART;
CREATE TABLE TBL_PART (
	ID NUMERIC(18) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CODE varchar(10),
	NAME nvarchar(255),
	[DESCRIPTION] nvarchar(255),
	PRICE numeric(8,0),
	PART_TYPE_ID numeric(18,0)
);
DROP TABLE TBL_PART_TYPE;
CREATE TABLE TBL_PART_TYPE (
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_CLINIC;
CREATE TABLE TBL_CLINIC(
	ID numeric(18,0) IDENTITY(1,1),
	CODE nvarchar(4),
	NAME nvarchar(255),
	ADDR nvarchar(255),
	TEL numeric(10),
	TEL2 numeric(10),
	EMAIL nvarchar(100),
	WEB nvarchar(100),
	FB nvarchar(100),
	LOGO nvarchar(50)
);
DROP TABLE TBL_USER;
CREATE TABLE TBL_USER(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	USERNAME nvarchar(6),
	[PASSWORD] varbinary(MAX),
	EMAIL nvarchar(100),
	USER_CREATED_DATE datetime,
	PASSWORD_UPDATED_DATE datetime 
);


DROP TABLE TBL_ROOMTITLE
CREATE TABLE TBL_ROOMTITLE(
	ROOM_ID numeric(18,0),
	CHAIR numeric(3,0),
	TITLE nvarchar(100) 
);
DROP TABLE TBL_ROLE
CREATE TABLE TBL_ROLE(
	ID numeric(18,0),
	TITLE nvarchar(100)
);

DROP TABLE TBL_TASK_STAT_TYPE
CREATE TABLE TBL_TASK_STAT_TYPE(
	ID numeric(18,0) IDENTITY(1,1),
	NAME nvarchar(255)
);

DROP TABLE TBL_TASK_STAT_TYPE
CREATE TABLE TBL_TASK_STAT_TYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	[NO] numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_TASK_STAT
CREATE TABLE TBL_TASK_STAT(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	TASK_STAT_TYPE_ID numeric(18,0),
	[NO] numeric(18,0),
	NAME nvarchar(255),
	STAFFNAME nvarchar(100),
	MNTTYPE_ID numeric(18,0)
);
DROP TABLE TBL_MNTTYPE
CREATE TABLE TBL_MNTTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(100)
);
DROP TABLE TBL_TASK_STAT_VAL
CREATE TABLE TBL_TASK_STAT_VAL(
	ID numeric(18,0) IDENTITY(1,1),
	TASK_STAT_ID numeric(18,0),
	YR numeric(4,0),
	MNTH numeric(2,0),
	PLANCRY numeric(18,0),
	PERFCRY numeric(18,0),
	LAST_UPDATE datetime,
	MEMO nvarchar(750)
);

DROP TABLE TBL_TASK_MISSIONTYPE
CREATE TABLE TBL_TASK_MISSIONTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(100)
);
DROP TABLE TBL_TASK_MISSION
CREATE TABLE TBL_TASK_MISSION(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	MISSIONTYPE_ID numeric(18,0),
	TASK_STAT_TYPE_ID numeric(18,0),
	[NO] numeric(18,0),
	NAME nvarchar(500),
	DT varchar(10),
	MEMO nvarchar(1000),
	CREATEDDATE varchar(10),
	CREATEDSTAFFID numeric(18,0),
	CREATEDUSERID numeric(18,0),
	TASK_MISSIONEVALTYPE_ID numeric(18,0),
	[FILENAME] nvarchar(100)
);
DROP TABLE TBL_TASK_MISSION_STAFF
CREATE TABLE TBL_TASK_MISSION_STAFF(
	TASK_MISSION_ID numeric(18,0),
	STAFF_ID numeric(18,0)
);
DROP TABLE TBL_TASK_MISSION_VIEWUSER
CREATE TABLE TBL_TASK_MISSION_VIEWUSER(
	TASK_MISSION_ID numeric(18,0),
	[USER_ID] numeric(18,0)
);
DROP TABLE TBL_TASK_MISSIONEVALTYPE
CREATE TABLE TBL_TASK_MISSIONEVALTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(100),
	COLOR nvarchar(100)
);

DROP TABLE TBL_TASK_NEWS
CREATE TABLE TBL_TASK_NEWS(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	TITLE nvarchar(500),
	NAME nvarchar(1500),
	CREATEDDATE varchar(10),
	CREATEDUSERID numeric(18,0)
);

DROP TABLE TBL_DEPARTMENT_TYPE
CREATE TABLE TBL_DEPARTMENT_TYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(100)
);
DROP TABLE TBL_DEPARTMENT
CREATE TABLE TBL_DEPARTMENT(
	ID numeric(18,0) IDENTITY(1,1),
	DEPARTMENT_TYPE_ID numeric(18,0), 
	FATHER_ID numeric(18,0),
	NO numeric(10,0),
	NAME nvarchar(250),
	INITNAME nvarchar(250)
);

DROP TABLE TBL_PART_DEMAND
CREATE TABLE TBL_PART_DEMAND(
	PART_ID numeric(18,0), 
	DT varchar(10),
	CNT numeric(5,0)
);


--***** car sales *****--
DROP TABLE TBL_SELLCARS;
CREATE TABLE TBL_SELLCARS(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	MARK_ID numeric(18,0),
	PRODUCEDYEAR numeric(4,0),
	VINNO nvarchar(17),
	FUELTYPE_ID numeric(1,0),
	TRANSMISSIONTYPE_ID numeric(1,0),
	ZAALTTYPE_ID numeric(1,0),
	SPECTYPE_ID numeric(18,0),
	EXTCOLOR_ID numeric(18,0),
	INTCOLOR_ID numeric(18,0),
	GETDT varchar(10),
	PRICE numeric(12,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_FUELTYPE;
CREATE TABLE TBL_FUELTYPE(
	ID numeric(18,0),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_TRANSMISSIONTYPE;
CREATE TABLE TBL_TRANSMISSIONTYPE(
	ID numeric(18,0),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
); 
DROP TABLE TBL_ZAALTTYPE;
CREATE TABLE TBL_ZAALTTYPE(
	ID numeric(18,0),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_SPECTYPE;
CREATE TABLE TBL_SPECTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	MARK_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_CARCOLOR;
CREATE TABLE TBL_CARCOLOR(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CARCOLORTYPE_ID numeric(18,0),
	CODE nvarchar(10),
	NAME nvarchar(255),
	HTMLCODE varchar(50)
);
DROP TABLE TBL_CARCOLORTYPE;
CREATE TABLE TBL_CARCOLORTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_SOLDCARCUSTOMER;
CREATE TABLE TBL_SOLDCARCUSTOMER(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	RD nvarchar(25),
	NAME nvarchar(255),
	CUSTOMERTYPE_ID numeric(18,0),
	TEL varchar(15),
	TEL2 varchar(15),
	EMAIL varchar(100),
	[ADDRESS] nvarchar(255),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_CUSTOMERTYPE;
CREATE TABLE TBL_CUSTOMERTYPE(
	ID numeric(18,0),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_SOLDCARCUSTOMER_SELLCARS;
CREATE TABLE TBL_SOLDCARCUSTOMER_SELLCARS(
	ID numeric(18,0) IDENTITY(1,1),
	SOLDCARCUSTOMER_ID numeric(18,0),
	SELLCARS_ID numeric(18,0),
	AGGREEMENTNO nvarchar(50),
	SELLCARSPAYMENTTYPE_ID numeric(18,0),
	PAYDT varchar(10),
	AGREEMENTATTACH nvarchar(100),
	ISRESOLD numeric(1,0),
	ISSUBMIT numeric(1,0), 
	SOLDCAR_STAFFID numeric(18,0),
	SOLDCARPRICE numeric(12,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_SELLCARSPAYMENTTYPE;
CREATE TABLE TBL_SELLCARSPAYMENTTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255)
);
DROP TABLE TBL_SOLDCARCUSTOMER_ORDER;
CREATE TABLE TBL_SOLDCARCUSTOMER_ORDER(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	CUSTOMERNAME nvarchar(255),
	CUSTOMERTYPE_ID numeric(18,0),
	CUSTOMERTEL varchar(15),
	CUSTOMERTEL2 varchar(15),
	CUSTOMEREMAIL varchar(100),
	CUSTOMERADDRESS nvarchar(255),
	MARK_ID numeric(18,0),
	PRODUCEDYEAR numeric(4,0),
	FUELTYPE_ID numeric(1,0),
	TRANSMISSIONTYPE_ID numeric(1,0),
	ZAALTTYPE_ID numeric(1,0),
	SPECTYPE_ID numeric(18,0),
	EXTCOLOR_ID numeric(18,0),
	INTCOLOR_ID numeric(18,0),
	GETDT varchar(10),
	PRICE numeric(12,0),
	SELLCARSORDERTYPE_ID numeric(18,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime
);
DROP TABLE TBL_SELLCARSORDERTYPE;
CREATE TABLE TBL_SELLCARSORDERTYPE(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(255), 
	BGCOLOR nvarchar(255)
);



SELECT * FROM TBL_SELLCARS
SELECT * FROM TBL_SOLDCARCUSTOMER_ORDER
SELECT * FROM TBL_SOLDCARCUSTOMER
SELECT * FROM TBL_SELLCARSORDERTYPE
SELECT * FROM TBL_SPECTYPE
SELECT * FROM TBL_SOLDCARCUSTOMER_SELLCARS
SELECT * FROM TBL_AUTOMARK
SELECT * FROM TBL_CARCOLORTYPE
SELECT * FROM TBL_FUELTYPE

SELECT 
    ROW_NUMBER() OVER(ORDER BY a.GETDT DESC) AS RW
	, a.ID
    , b.AUTOMARK_TYPE_ID
	, a.MARK_ID
	, c.NAME + ' - '+b.NAME as MARK_NAME
	, a.PRODUCEDYEAR
	, a.VINNO
	, a.FUELTYPE_ID
	, d.NAME as FUELTYPE_NAME
	, a.TRANSMISSIONTYPE_ID
	, f.NAME as TRANSMISSIONTYPE_NAME
	, a.ZAALTTYPE_ID
	, g.NAME as ZAALTTYPE_NAME
	, a.SPECTYPE_ID
	, h.NAME as SPECTYPE_NAME
	, a.EXTCOLOR_ID
	, i.CODE as EXTCOLORCODE
	, i.NAME as EXTCOLORNAME
	, i.HTMLCODE as EXTCOLORHTMLCODE
	, a.INTCOLOR_ID
	, j.CODE as INTCOLORCODE
	, j.NAME as INTCOLORNAME
	, j.HTMLCODE as INTCOLORHTMLCODE
	, a.GETDT
	, a.PRICE
	, CASE WHEN k.SELLCARS_ID is not null THEN 1 ELSE 0 END as ISSELLCARS
FROM TBL_SELLCARS a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID AND a.CLINIC_ID=b.CLINIC_ID
INNER JOIN TBL_AUTOMARK_TYPE c ON b.AUTOMARK_TYPE_ID=c.ID AND b.CLINIC_ID=c.CLINIC_ID
INNER JOIN TBL_FUELTYPE d ON a.FUELTYPE_ID=d.ID AND a.CLINIC_ID=d.CLINIC_ID
INNER JOIN TBL_TRANSMISSIONTYPE f ON a.TRANSMISSIONTYPE_ID=f.ID AND a.CLINIC_ID=f.CLINIC_ID
INNER JOIN TBL_ZAALTTYPE g ON a.ZAALTTYPE_ID=g.ID AND a.CLINIC_ID=g.CLINIC_ID
INNER JOIN TBL_SPECTYPE h ON a.SPECTYPE_ID=h.ID AND a.CLINIC_ID=h.CLINIC_ID
INNER JOIN TBL_CARCOLOR i ON a.EXTCOLOR_ID=i.ID AND a.CLINIC_ID=i.CLINIC_ID
INNER JOIN TBL_CARCOLOR j ON a.INTCOLOR_ID=j.ID AND a.CLINIC_ID=j.CLINIC_ID
LEFT JOIN TBL_SOLDCARCUSTOMER_SELLCARS k ON a.ID=k.SELLCARS_ID
WHERE a.CLINIC_ID=1 AND CONVERT(datetime, a.GETDT) > GETDATE() AND (k.SELLCARS_ID is null OR k.ISSUBMIT<>1)
ORDER BY a.GETDT ASC


SELECT 
	a.ID, 
	a.SELLCARS_ID, 
	g.NAME as AUTOMARK_TYPE_NAME,
	f.NAME as AUTOMARK_NAME, 
	d.NAME as SPECTYPE_NAME, 
	c.PRODUCEDYEAR, 
	c.VINNO, 
	i.NAME as FUELTYPE_NAME, 
	j.NAME as TRANSMISSIONTYPE_NAME, 
	k.NAME as ZAALTTYPE_NAME, 
	l.CODE as EXTCOLOR_CODE, 
	l.NAME as EXTCOLOR_NAME, 
	l.HTMLCODE as EXTCOLOR_HTMLCODE, 
	m.CODE as INTCOLOR_CODE, 
	m.NAME as INTCOLOR_NAME, 
	m.HTMLCODE as INTCOLOR_HTMLCODE, 
	c.GETDT, 
	c.PRICE, 
    N'Үүсгэсэн: ' + CONVERT(VARCHAR(19),a.CREATED_DATE, 120) + N'lt;br/gt;Сүүлд засварласан: ' + CONVERT(VARCHAR(19),ISNULL(a.UPDATED_DATE,a.CREATED_DATE), 120) as MODIFIEDCAR, 
	b.RD as CUSTOMERRD, 
	b.NAME as CUSTOMERNAME, 
	CASE WHEN b.TEL2 is null THEN b.TEL ELSE b.TEL+', '+b.TEL2 END as CUSTOMERTEL, 
	b.EMAIL as CUSTOMEREMAIL, 
	b.ADDRESS as CUSTOMERADDRESS, 
	n.NAME as CUSTOMERTYPENAME
FROM TBL_SOLDCARCUSTOMER_SELLCARS a
INNER JOIN TBL_SOLDCARCUSTOMER b ON a.SOLDCARCUSTOMER_ID=b.ID
INNER JOIN TBL_SELLCARS c ON a.SELLCARS_ID=c.ID
INNER JOIN TBL_SPECTYPE d ON c.SPECTYPE_ID=d.ID
INNER JOIN TBL_AUTOMARK f ON d.MARK_ID=f.ID
INNER JOIN TBL_AUTOMARK_TYPE g ON f.AUTOMARK_TYPE_ID=g.ID
INNER JOIN TBL_SELLCARSPAYMENTTYPE h ON a.SELLCARSPAYMENTTYPE_ID=h.ID
INNER JOIN TBL_FUELTYPE i ON c.FUELTYPE_ID=i.ID
INNER JOIN TBL_TRANSMISSIONTYPE j ON c.TRANSMISSIONTYPE_ID=j.ID
INNER JOIN TBL_ZAALTTYPE k ON c.ZAALTTYPE_ID=k.ID
INNER JOIN TBL_CARCOLOR l ON c.EXTCOLOR_ID=l.ID
INNER JOIN TBL_CARCOLOR m ON c.INTCOLOR_ID=m.ID
INNER JOIN TBL_CUSTOMERTYPE n ON b.CUSTOMERTYPE_ID=n.ID
WHERE a.ID=2

SELECT 
	a.ID, 
	a.SOLDCARCUSTOMER_ID, 
	b.RD as CUSTOMERRD,
	b.NAME as CUSTOMERNAME, 
	b.TEL as CUSTOMERTEL, 
	b.TEL2 as CUSTOMERTEL2, 
	a.SELLCARS_ID, 
	g.NAME as AUTOMARK_TYPE_NAME,
	f.NAME as AUTOMARK_NAME, 
	d.NAME as SPECTYPE_NAME, 
	c.VINNO, 
	a.AGGREEMENTNO, 
	a.SELLCARSPAYMENTTYPE_ID, 
	h.NAME as SELLCARSPAYMENTTYPE_NAME, 
	a.PAYDT, 
	a.ISRESOLD, 
	a.AGREEMENTATTACH
FROM TBL_SOLDCARCUSTOMER_SELLCARS a
INNER JOIN TBL_SOLDCARCUSTOMER b ON a.SOLDCARCUSTOMER_ID=b.ID
INNER JOIN TBL_SELLCARS c ON a.SELLCARS_ID=c.ID
INNER JOIN TBL_SPECTYPE d ON c.SPECTYPE_ID=d.ID
INNER JOIN TBL_AUTOMARK f ON d.MARK_ID=f.ID
INNER JOIN TBL_AUTOMARK_TYPE g ON f.AUTOMARK_TYPE_ID=g.ID
INNER JOIN TBL_SELLCARSPAYMENTTYPE h ON a.SELLCARSPAYMENTTYPE_ID=h.ID
WHERE c.CLINIC_ID=1 AND YEAR(CONVERT(datetime, a.PAYDT))=2016


SELECT  CAST(ID as varchar) as ID, NAME+' /'+CODE+'/' as NAME FROM TBL_CARCOLOR WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND CARCOLORTYPE_ID=2 ORDER BY NAME

SELECT a.MARK_ID, c.NAME+' - '+b.NAME as MARK_NAME, a.ID, a.NAME
FROM TBL_SPECTYPE a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID AND a.CLINIC_ID=b.CLINIC_ID
INNER JOIN TBL_AUTOMARK_TYPE c ON b.AUTOMARK_TYPE_ID=c.ID AND b.CLINIC_ID=c.CLINIC_ID
WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1)
ORDER BY c.NAME, b.NAME, a.NAME

SELECT b.AUTOMARK_TYPE_ID, c.NAME as AUTOMARK_TYPE_NAME, a.MARK_ID, b.NAME as MARK_NAME
FROM (
	SELECT MARK_ID, CLINIC_ID FROM TBL_SELLCARS WHERE CLINIC_ID=1 GROUP BY MARK_ID, CLINIC_ID
) a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID AND a.CLINIC_ID=b.CLINIC_ID
INNER JOIN TBL_AUTOMARK_TYPE c ON b.AUTOMARK_TYPE_ID=c.ID AND b.CLINIC_ID=c.CLINIC_ID
ORDER BY c.NAME, b.NAME

SELECT 
	a.ID
	, a.MARK_ID
	, c.NAME + ' - '+b.NAME as MARK_NAME
	, a.PRODUCEDYEAR
	, a.VINNO
	, a.FUELTYPE_ID
	, d.NAME as FUELTYPE_NAME
	, a.TRANSMISSIONTYPE_ID
	, f.NAME as TRANSMISSIONTYPE_NAME
	, a.ZAALTTYPE_ID
	, g.NAME as ZAALTTYPE_NAME
	, a.SPECTYPE_ID
	, h.NAME as SPECTYPE_NAME
	, a.EXTCOLOR_ID
	, i.CODE as EXTCOLORCODE
	, i.NAME as EXTCOLORNAME
	, i.HTMLCODE as EXTCOLORHTMLCODE
	, a.INTCOLOR_ID
	, j.CODE as INTCOLORCODE
	, j.NAME as INTCOLORNAME
	, j.HTMLCODE as INTCOLORHTMLCODE
	, a.GETDT
	, a.PRICE
FROM TBL_SELLCARS a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID AND a.CLINIC_ID=b.CLINIC_ID
INNER JOIN TBL_AUTOMARK_TYPE c ON b.AUTOMARK_TYPE_ID=c.ID AND b.CLINIC_ID=c.CLINIC_ID
INNER JOIN TBL_FUELTYPE d ON a.FUELTYPE_ID=d.ID AND a.CLINIC_ID=d.CLINIC_ID
INNER JOIN TBL_TRANSMISSIONTYPE f ON a.TRANSMISSIONTYPE_ID=f.ID AND a.CLINIC_ID=f.CLINIC_ID
INNER JOIN TBL_ZAALTTYPE g ON a.ZAALTTYPE_ID=g.ID AND a.CLINIC_ID=g.CLINIC_ID
INNER JOIN TBL_SPECTYPE h ON a.SPECTYPE_ID=h.ID AND a.CLINIC_ID=h.CLINIC_ID
INNER JOIN TBL_CARCOLOR i ON a.EXTCOLOR_ID=i.ID AND a.CLINIC_ID=i.CLINIC_ID
INNER JOIN TBL_CARCOLOR j ON a.INTCOLOR_ID=j.ID AND a.CLINIC_ID=j.CLINIC_ID
LEFT JOIN TBL_SOLDCARCUSTOMER_SELLCARS k ON a.ID=k.SELLCARS_ID
WHERE a.CLINIC_ID=1 AND CONVERT(datetime, a.GETDT) <= GETDATE() AND k.SELLCARS_ID is null
ORDER BY a.GETDT DESC


SELECT * FROM TBL_SELLCARS
SELECT * FROM TBL_SPECTYPE
SELECT * FROM TBL_CARCOLOR
SELECT * FROM TBL_CARCOLORTYPE
SELECT * FROM TBL_SELLCARSPAYMENTTYPE



---------------------------SPs-----------------------------
DROP PROC CheckLogin;
CREATE PROC CheckLogin--------------------------------------------------LOGIN CHECK
(
	@username nvarchar(50),
	@password nvarchar(MAX)
)
AS
BEGIN
	DECLARE @pass varchar(max)
	DECLARE @usernamecnt numeric
	DECLARE @emailcnt numeric
	DECLARE @userid numeric
	SELECT @usernamecnt=COUNT(1) FROM TBL_USER WHERE USERNAME=@username
	SELECT @emailcnt=COUNT(1) FROM TBL_USER WHERE EMAIL=@username
	IF(@usernamecnt=0 AND @emailcnt=0)
	BEGIN
		SELECT 0
	END
	ELSE
	BEGIN
		IF(@usernamecnt<>0)
		BEGIN
			SELECT @pass=convert(varchar(max),DecryptByPassPhrase('nirvana', [password])) FROM TBL_USER WHERE USERNAME=@username
			IF(@pass=@password)
			BEGIN
				SELECT @userid=ID FROM TBL_USER WHERE USERNAME=@username
				SELECT '1~'+CAST(@userid as varchar)
			END 
			ELSE
			BEGIN
				SELECT 0
			END			
		END
		ELSE
		BEGIN
			SELECT @pass=convert(varchar(max),DecryptByPassPhrase('nirvana', [password])) FROM TBL_USER WHERE EMAIL=@username
			IF(@pass=@password)
			BEGIN
				SELECT @userid=ID FROM TBL_USER WHERE EMAIL=@username
				SELECT '1~'+CAST(@userid as varchar)
			END 
			ELSE
			BEGIN
				SELECT 0
			END
		END
	END
END;
DROP PROC PassEnc;
CREATE PROC PassEnc-------------------------------------------ENCRYPT PASSWORD
(
	@Pass VARCHAR(MAX),
	@EncPass VARBINARY(MAX) OUTPUT
)
AS
BEGIN	
	SELECT @EncPass= EncryptByPassPhrase('nirvana', @Pass )
END

DROP PROC PassDec;
CREATE PROC PassDec-------------------------------------------DECRYPT PASSWORD
(
	@pass varbinary(MAX),
	@DecPass VARCHAR(MAX) OUTPUT
)
AS
BEGIN
	SELECT @DecPass=convert(varchar(MAX),DecryptByPassPhrase('nirvana', @pass))
END;

SELECT * FROM TBL_APPOINTMENT

DROP PROC INS_APPOINTMENT;
CREATE PROC INS_APPOINTMENT
(
	@CLINIC_ID numeric(18,0),
	@ROOM_ID numeric(18,0),
	@CHAIRNUM numeric(2,0),
	@PATIENT_ID numeric(18,0),
	@DT varchar(10),
	@STARTTIME varchar(5),
	@ENDTIME varchar(5),
	@APPOINTMENTTYPE numeric(1,0),
	@REQUESTMEMO nvarchar(100),
	@REQUESTTYPELISTID varchar(100),
	@MILEAGE numeric(18,0),
	@ISWASHING numeric(1,0),
	@ISGETPART numeric(1,0),
	@SUBMIT_STAFFID numeric(18,0),
	@STAFFID numeric(18,0)
)
AS
BEGIN
	DECLARE @VALMAXID numeric
	INSERT INTO TBL_APPOINTMENT (NUM, CLINIC_ID, ROOM_ID, CHAIRNUM, PATIENT_ID, DT, STARTTIME, ENDTIME, APPOINTMENT_TYPE_ID, APPOINTMENTTYPE, REQUESTMEMO, CREATED_STAFFID, CREATED_DATE, MILEAGE, ISWASHING, ISGETPART, SUBMIT_STAFFID)
	VALUES (dbo.FUNC_GETAPPOINTMENTNUM(@CLINIC_ID,@DT), @CLINIC_ID, @ROOM_ID, @CHAIRNUM, @PATIENT_ID, @DT, @STARTTIME, @ENDTIME, 1, @APPOINTMENTTYPE, @REQUESTMEMO, @STAFFID, GETDATE(), @MILEAGE, @ISWASHING, @ISGETPART, @SUBMIT_STAFFID)
	SELECT @VALMAXID=MAX(ID) FROM TBL_APPOINTMENT
	INSERT INTO TBL_APPOINTMENT_REQUESTTYPE (APPOINTMENT_ID, REQUESTTYPE_ID) SELECT @VALMAXID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@REQUESTTYPELISTID)
END;

DROP PROC INSUPD_APPDIAGNOSTIC;
CREATE PROC INSUPD_APPDIAGNOSTIC
(
	@APPOINTMENT_ID numeric(18,0),
	@DIAGNOSTICLISTID varchar(100),
	@DIAGNOSTIC_NAME nvarchar(2000),
	@SENIORMECHANICAL_STAFFID numeric(18,0),
	@MECHANICAL_STAFFID numeric(18,0),
	@SERVICECONSULTANT_STAFFID numeric(18,0),
	@STAFFID numeric(18,0)
)
AS
BEGIN
	DELETE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE WHERE APPOINTMENT_ID=@APPOINTMENT_ID
	INSERT INTO TBL_APPOINTMENT_DIAGNOSTICTYPE (APPOINTMENT_ID, DIAGNOSTICTYPE_ID, NAME, PRICE, CNT) SELECT @APPOINTMENT_ID, a.DIAGNOSTICTYPE_ID, b.NAME as DIAGNOSTICTYPE_NAME, b.PRICE as DIAGNOSTICTYPE_PIRCE, 1 FROM ( SELECT CAST(DATA as numeric) as DIAGNOSTICTYPE_ID FROM dbo.FUNC_SPLIT(',',@DIAGNOSTICLISTID) ) a INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID
	IF((SELECT COUNT(1) FROM TBL_APPOINTMENT_DIAGNOSTIC WHERE APPOINTMENT_ID=@APPOINTMENT_ID) <> 0)
	BEGIN
		UPDATE TBL_APPOINTMENT_DIAGNOSTIC SET DESCRIPTION=@DIAGNOSTIC_NAME, SENIORMECHANICAL_STAFFID=@SENIORMECHANICAL_STAFFID, MECHANICAL_STAFFID=@MECHANICAL_STAFFID, SERVICECONSULTANT_STAFFID=@SERVICECONSULTANT_STAFFID
		WHERE APPOINTMENT_ID=@APPOINTMENT_ID
	END
	ELSE
	BEGIN
		INSERT INTO TBL_APPOINTMENT_DIAGNOSTIC (APPOINTMENT_ID, DESCRIPTION, SENIORMECHANICAL_STAFFID, MECHANICAL_STAFFID, SERVICECONSULTANT_STAFFID, CREATED_STAFFID, CREATED_DATE)
		VALUES (@APPOINTMENT_ID, @DIAGNOSTIC_NAME, @SENIORMECHANICAL_STAFFID, @MECHANICAL_STAFFID, @SERVICECONSULTANT_STAFFID, @STAFFID, GETDATE())
	END
END;

DROP PROCEDURE UserChangePassword
CREATE PROCEDURE UserChangePassword
  @pGuid        numeric(18),
  @pOldPassword nvarchar(20),
  @pNewPassword nvarchar(20)
AS
BEGIN
	SET NOCOUNT ON;

	UPDATE TBL_USER
	SET [PASSWORD] = EncryptByPassPhrase('nirvana', @pNewPassword )
	WHERE ID = @pGuid AND [PASSWORD] = EncryptByPassPhrase('nirvana', @pOldPassword )

	  IF @@ROWCOUNT = 0
		RETURN -1;

	  RETURN 0;
END;

DROP PROC INSUPT_USER;
CREATE PROC INSUPT_USER
(
	@ISINS numeric(1,0),
	@CLINIC_ID numeric(18,0),
	@USERNAME nvarchar(6),
	@PASSWORD nvarchar(100),
	@EMAIL nvarchar(100),
	@USERDESCRIPTION nvarchar(100),
	@ROLELISTID varchar(100)
)
AS
BEGIN
	IF(@ISINS = 1)
	BEGIN
		DECLARE @VALMAXID numeric
		INSERT INTO TBL_USER (CLINIC_ID, USERNAME, PASSWORD, EMAIL, USER_CREATED_DATE, PASSWORD_UPDATED_DATE, USERDESCRIPTION)
		VALUES (@CLINIC_ID, @USERNAME, EncryptByPassPhrase('nirvana', @PASSWORD ), @EMAIL, GETDATE(), GETDATE(), @USERDESCRIPTION)
		SELECT @VALMAXID=MAX(ID) FROM TBL_USER WHERE CLINIC_ID=@CLINIC_ID
		INSERT INTO TBL_USER_ROLE ([USER_ID], ROLE_ID) SELECT @VALMAXID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@ROLELISTID)
	END
	ELSE
	BEGIN
		UPDATE TBL_USER SET PASSWORD=EncryptByPassPhrase('nirvana', @PASSWORD ), EMAIL=@EMAIL, USER_CREATED_DATE=GETDATE(), PASSWORD_UPDATED_DATE=GETDATE(), USERDESCRIPTION=@USERDESCRIPTION WHERE USERNAME=@USERNAME
		DELETE FROM TBL_USER_ROLE WHERE [USER_ID]=(SELECT ID FROM TBL_USER WHERE USERNAME=@USERNAME)
		INSERT INTO TBL_USER_ROLE ([USER_ID], ROLE_ID) SELECT (SELECT ID FROM TBL_USER WHERE USERNAME=@USERNAME), CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@ROLELISTID)
	END
END;


DROP PROC INS_TASKMISSION;
CREATE PROC INS_TASKMISSION
(
	@CLINIC_ID numeric(18,0),
	@MISSIONTYPE_ID numeric(18,0),
	@TASK_STAT_TYPE_ID numeric(18,0),
	@NO numeric(18,0),
	@NAME nvarchar(500),
	@DT varchar(10),
	@MEMO nvarchar(1000),
	@CREATEDSTAFFID numeric(18,0),
	@CREATEDUSERID numeric(18,0),
	@STAFFLIST varchar(100),
	@USERLIST varchar(100),
	@FILENAME nvarchar(100)
)
AS
BEGIN
	DECLARE @VALMAXID numeric
	INSERT INTO TBL_TASK_MISSION (CLINIC_ID, MISSIONTYPE_ID, TASK_STAT_TYPE_ID, NO, NAME, DT, MEMO, CREATEDDATE, CREATEDSTAFFID, CREATEDUSERID, [FILENAME])
	VALUES (@CLINIC_ID, @MISSIONTYPE_ID, @TASK_STAT_TYPE_ID, @NO, @NAME, @DT, @MEMO, CONVERT(nvarchar(10), getdate(), 121), @CREATEDSTAFFID, @CREATEDUSERID, @FILENAME)
	SELECT @VALMAXID=MAX(ID) FROM TBL_TASK_MISSION
	INSERT INTO TBL_TASK_MISSION_STAFF(TASK_MISSION_ID, STAFF_ID) SELECT @VALMAXID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@STAFFLIST)
	INSERT INTO TBL_TASK_MISSION_VIEWUSER(TASK_MISSION_ID, [USER_ID]) SELECT @VALMAXID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@USERLIST)
END;

DROP PROC UPT_TASKMISSION;
CREATE PROC UPT_TASKMISSION
(
	@ID numeric(18,0),
	@MISSIONTYPE_ID numeric(18,0),
	@TASK_STAT_TYPE_ID numeric(18,0),
	@NO numeric(18,0),
	@NAME nvarchar(500),
	@DT varchar(10),
	@MEMO nvarchar(1000),
	@CREATEDSTAFFID numeric(18,0),
	@CREATEDUSERID numeric(18,0),
	@STAFFLIST varchar(100),
	@USERLIST varchar(100),
	@FILENAME nvarchar(100)
)
AS
BEGIN
	UPDATE TBL_TASK_MISSION SET MISSIONTYPE_ID=@MISSIONTYPE_ID, TASK_STAT_TYPE_ID=@TASK_STAT_TYPE_ID, NO=@NO, NAME=@NAME, DT=@DT, MEMO=@MEMO, CREATEDSTAFFID=@CREATEDSTAFFID, CREATEDUSERID=@CREATEDUSERID, [FILENAME]=@FILENAME WHERE ID=@ID;
	DELETE FROM TBL_TASK_MISSION_STAFF WHERE TASK_MISSION_ID=@ID;
	DELETE FROM TBL_TASK_MISSION_VIEWUSER WHERE TASK_MISSION_ID=@ID;
	INSERT INTO TBL_TASK_MISSION_STAFF(TASK_MISSION_ID, STAFF_ID) SELECT @ID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@STAFFLIST)
	INSERT INTO TBL_TASK_MISSION_VIEWUSER(TASK_MISSION_ID, [USER_ID]) SELECT @ID, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',',@USERLIST)
END;

DROP PROC INS_DEALERSELL;
CREATE PROC INS_DEALERSELL
(
	@CLINIC_ID numeric(18,0), 
	@SOLDCARCUSTOMER_ID numeric(18,0), 
	@SOLDCARCUSTOMER_RD nvarchar(25),
	@SOLDCARCUSTOMER_NAME nvarchar(255), 
	@SOLDCARCUSTOMER_CUSTOMERTYPE_ID numeric(18,0), 
	@SOLDCARCUSTOMER_TEL varchar(15), 
	@SOLDCARCUSTOMER_TEL2 varchar(15), 
	@SOLDCARCUSTOMER_EMAIL varchar(100), 
	@SOLDCARCUSTOMER_ADDRESS nvarchar(255),
	@SELLCARS_ID numeric(18,0), 
	@AGGREEMENTNO nvarchar(50),
	@SELLCARSPAYMENTTYPE_ID numeric(18,0), 
	@PAYDT varchar(10), 
	@AGREEMENTATTACH nvarchar(100), 
	@ISRESOLD numeric(1,0),
	@USERID numeric(18,0), 
	@SOLDCARCUSTOMER_SELLCARS_ID numeric(18,0),
	@ISSUBMIT numeric(1,0),
	@SOLDCAR_STAFFID numeric(18,0)
)
AS
BEGIN
	IF(@SOLDCARCUSTOMER_ID is null)
	BEGIN
		DECLARE @VALMAXID numeric
		INSERT INTO TBL_SOLDCARCUSTOMER (CLINIC_ID, RD, NAME, CUSTOMERTYPE_ID, TEL, TEL2, EMAIL, ADDRESS, CREATED_STAFFID, CREATED_DATE)
		VALUES (@CLINIC_ID, @SOLDCARCUSTOMER_RD, @SOLDCARCUSTOMER_NAME, @SOLDCARCUSTOMER_CUSTOMERTYPE_ID, @SOLDCARCUSTOMER_TEL, @SOLDCARCUSTOMER_TEL2, @SOLDCARCUSTOMER_EMAIL, @SOLDCARCUSTOMER_ADDRESS, @USERID, GETDATE())
		SELECT @VALMAXID=MAX(ID) FROM TBL_SOLDCARCUSTOMER WHERE CLINIC_ID=@CLINIC_ID
		IF(@SOLDCARCUSTOMER_SELLCARS_ID is null)
		BEGIN
			INSERT INTO TBL_SOLDCARCUSTOMER_SELLCARS (SOLDCARCUSTOMER_ID, SELLCARS_ID, AGGREEMENTNO, SELLCARSPAYMENTTYPE_ID, PAYDT, AGREEMENTATTACH, ISRESOLD, ISSUBMIT, SOLDCAR_STAFFID, SOLDCARPRICE, CREATED_STAFFID, CREATED_DATE) 
			VALUES (@VALMAXID, @SELLCARS_ID, @AGGREEMENTNO, @SELLCARSPAYMENTTYPE_ID, @PAYDT, @AGREEMENTATTACH, @ISRESOLD, @ISSUBMIT, @SOLDCAR_STAFFID, (SELECT PRICE FROM TBL_SELLCARS WHERE ID=@SELLCARS_ID), @USERID, GETDATE())
		END
		ELSE 
		BEGIN
			UPDATE TBL_SOLDCARCUSTOMER_SELLCARS SET SOLDCARCUSTOMER_ID=@VALMAXID, SELLCARS_ID=@SELLCARS_ID, AGGREEMENTNO=@AGGREEMENTNO, SELLCARSPAYMENTTYPE_ID=@SELLCARSPAYMENTTYPE_ID, PAYDT=@PAYDT, AGREEMENTATTACH=@AGREEMENTATTACH, ISRESOLD=@ISRESOLD, ISSUBMIT=@ISSUBMIT, SOLDCAR_STAFFID=@SOLDCAR_STAFFID, SOLDCARPRICE=(SELECT PRICE FROM TBL_SELLCARS WHERE ID=@SELLCARS_ID), UPDATED_STAFFID=@USERID, UPDATED_DATE=GETDATE() WHERE ID=@SOLDCARCUSTOMER_SELLCARS_ID
		END
	END
	ELSE
	BEGIN
		UPDATE TBL_SOLDCARCUSTOMER SET NAME=@SOLDCARCUSTOMER_NAME, CUSTOMERTYPE_ID=@SOLDCARCUSTOMER_CUSTOMERTYPE_ID, TEL=@SOLDCARCUSTOMER_TEL, TEL2=@SOLDCARCUSTOMER_TEL2, EMAIL=@SOLDCARCUSTOMER_EMAIL, ADDRESS=@SOLDCARCUSTOMER_ADDRESS, UPDATED_STAFFID=@USERID, UPDATED_DATE=GETDATE() WHERE ID=@SOLDCARCUSTOMER_ID;
		IF(@SOLDCARCUSTOMER_SELLCARS_ID is null)
		BEGIN
			INSERT INTO TBL_SOLDCARCUSTOMER_SELLCARS (SOLDCARCUSTOMER_ID, SELLCARS_ID, AGGREEMENTNO, SELLCARSPAYMENTTYPE_ID, PAYDT, AGREEMENTATTACH, ISRESOLD, ISSUBMIT, SOLDCAR_STAFFID, SOLDCARPRICE, CREATED_STAFFID, CREATED_DATE) 
			VALUES (@VALMAXID, @SELLCARS_ID, @AGGREEMENTNO, @SELLCARSPAYMENTTYPE_ID, @PAYDT, @AGREEMENTATTACH, @ISRESOLD, @ISSUBMIT, @SOLDCAR_STAFFID, (SELECT PRICE FROM TBL_SELLCARS WHERE ID=@SELLCARS_ID), @USERID, GETDATE())
		END
		ELSE 
		BEGIN
			UPDATE TBL_SOLDCARCUSTOMER_SELLCARS SET SOLDCARCUSTOMER_ID=@VALMAXID, SELLCARS_ID=@SELLCARS_ID, AGGREEMENTNO=@AGGREEMENTNO, SELLCARSPAYMENTTYPE_ID=@SELLCARSPAYMENTTYPE_ID, PAYDT=@PAYDT, AGREEMENTATTACH=@AGREEMENTATTACH, ISRESOLD=@ISRESOLD, ISSUBMIT=@ISSUBMIT, SOLDCAR_STAFFID=@SOLDCAR_STAFFID, SOLDCARPRICE=(SELECT PRICE FROM TBL_SELLCARS WHERE ID=@SELLCARS_ID), UPDATED_STAFFID=@USERID, UPDATED_DATE=GETDATE() WHERE ID=@SOLDCARCUSTOMER_SELLCARS_ID
		END
	END
END;

SELECT * FROM TBL_SOLDCARCUSTOMER 
SELECT * FROM TBL_SOLDCARCUSTOMER_SELLCARS

DELETE FROM TBL_SOLDCARCUSTOMER
DELETE FROM TBL_SOLDCARCUSTOMER_SELLCARS

EXEC UserChangePassword 1, N'770101', N'gundee'

SELECT EncryptByPassPhrase('nirvana', 'gundee' )

---------------------------Functions-----------------------
DROP FUNCTION FUNC_GETSERVICECODE;
CREATE FUNCTION dbo.FUNC_GETSERVICECODE(@ServiceTypeID numeric, @ClinicID numeric)
RETURNS varchar(5) 
AS 
BEGIN
    DECLARE @valnum int;
	SET @valnum=0;
	DECLARE @valcnt int;
	DECLARE @valchar varchar;
	DECLARE @valnumm varchar(4);
	DECLARE @valreturn varchar(5);
	SELECT @valcnt=COUNT(1) FROM TBL_SERVICE WHERE SERVICE_TYPE_ID=@ServiceTypeID AND CLINIC_ID=@ClinicID;
	IF(@valcnt <> 0)
	BEGIN
		SELECT @valnum=CAST(RIGHT(MAX(CODE),4) as int) FROM TBL_SERVICE WHERE SERVICE_TYPE_ID=@ServiceTypeID AND CLINIC_ID=@ClinicID;
	END	
	SELECT @valchar=CHARNAME FROM TBL_SERVICE_TYPE WHERE ID=@ServiceTypeID;
	SET @valnum=@valnum+1;
	SELECT @valnumm=RIGHT('0000'+CAST(@valnum as varchar),4);
	SET @valreturn=@valchar+@valnumm;    
    RETURN @valreturn;
END;

DROP FUNCTION FUNC_GETPATIENTCODE;
CREATE FUNCTION dbo.FUNC_GETPATIENTCODE(@ClinicID numeric)
RETURNS varchar(10) 
AS 
BEGIN
    DECLARE @valnum int;
	SET @valnum=0;
	DECLARE @valcnt int;
	DECLARE @valreturn varchar(10);
	SELECT @valcnt=COUNT(1) FROM TBL_PATIENT WHERE CLINIC_ID=@ClinicID AND STUFF(CODE,8,3,'')='P'+STUFF(CAST(YEAR(GETDATE()) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(GETDATE()) as varchar),2)+RIGHT('0'+CAST(DAY(GETDATE()) as varchar),2);
	IF(@valcnt <> 0)
	BEGIN
		SELECT @valnum=CAST(STUFF(MAX(CODE),1,7,'') as int) FROM TBL_PATIENT WHERE CLINIC_ID=@ClinicID AND STUFF(CODE,8,3,'')='P'+STUFF(CAST(YEAR(GETDATE()) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(GETDATE()) as varchar),2)+RIGHT('0'+CAST(DAY(GETDATE()) as varchar),2);
	END
	SET @valnum=@valnum+1;
	SET @valreturn='P'+STUFF(CAST(YEAR(GETDATE()) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(GETDATE()) as varchar),2)+RIGHT('0'+CAST(DAY(GETDATE()) as varchar),2) + RIGHT('000'+CAST(@valnum as varchar),3);    
    RETURN @valreturn;
END;

DROP FUNCTION FUNC_GETSTAFFCODE;
CREATE FUNCTION dbo.FUNC_GETSTAFFCODE(@ClinicID numeric)
RETURNS varchar(5) 
AS 
BEGIN
    DECLARE @valnum int;
	SET @valnum=0;
	DECLARE @valcnt int;
	DECLARE @valnumm varchar(4);
	DECLARE @valreturn varchar(5);
	SELECT @valcnt=COUNT(1) FROM TBL_STAFF WHERE CLINIC_ID=@ClinicID;
	IF(@valcnt <> 0)
	BEGIN
		SELECT @valnum=CAST(RIGHT(MAX(CODE),4) as int) FROM TBL_STAFF WHERE CLINIC_ID=@ClinicID;
	END	
	SET @valnum=@valnum+1;
	SELECT @valnumm=RIGHT('0000'+CAST(@valnum as varchar),4);
	SET @valreturn='S'+@valnumm;    
    RETURN @valreturn;
END;

DROP FUNCTION FUNC_GETAPPOINTMENTNUM;
CREATE FUNCTION dbo.FUNC_GETAPPOINTMENTNUM(@ClinicID numeric, @dt date)
RETURNS varchar(9) 
AS 
BEGIN
    --   DECLARE @valnum int;
	--SET @valnum=0;
	--DECLARE @valcnt int;
	--DECLARE @valreturn varchar(9);
	--SELECT @valcnt=COUNT(1) FROM TBL_APPOINTMENT WHERE CLINIC_ID=@ClinicID AND STUFF(NUM,6,3,'')=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2);
	--IF(@valcnt <> 0)
	--BEGIN
	--	SELECT @valnum=CAST(STUFF(MAX(NUM),1,7,'') as int) FROM TBL_APPOINTMENT WHERE CLINIC_ID=@ClinicID AND STUFF(NUM,6,3,'')=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2);
	--END
	--SET @valnum=@valnum+1;
	--SET @valreturn=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2) + RIGHT('000'+CAST(@valnum as varchar),3);    
 --   RETURN @valreturn;

	DECLARE @valnum int;
	SET @valnum=0;
	DECLARE @valcnt int;
	DECLARE @valreturn varchar(9);
	SELECT @valcnt=COUNT(1) FROM TBL_APPOINTMENT WHERE CLINIC_ID=@ClinicID AND LEFT(NUM,6)=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2);
	IF(@valcnt <> 0)
	BEGIN
		SELECT @valnum=CAST(STUFF(MAX(NUM),1,7,'') as int) FROM TBL_APPOINTMENT WHERE CLINIC_ID=@ClinicID AND LEFT(NUM,6)=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2);
	END
	SET @valnum=@valnum+1;
	SET @valreturn=STUFF(CAST(YEAR(@dt) as varchar),1,2,'')+RIGHT('0'+CAST(MONTH(@dt) as varchar),2)+RIGHT('0'+CAST(DAY(@dt) as varchar),2) + RIGHT('000'+CAST(@valnum as varchar),3);    
    RETURN @valreturn;
END;

DROP FUNCTION FUNC_SPLIT;
CREATE FUNCTION dbo.FUNC_SPLIT(@sep char(1), @s varchar(512))     
RETURNS table
AS
RETURN (
	WITH Pieces(start, stop) AS (
		SELECT 1, CHARINDEX(@sep, @s)
		UNION ALL
		SELECT stop + 1, CHARINDEX(@sep, @s, stop + 1)
		FROM Pieces
		WHERE stop > 0
	)
	SELECT SUBSTRING(@s, start, CASE WHEN stop > 0 THEN stop-start ELSE 512 END) AS data
	FROM Pieces
)

DROP FUNCTION FUNC_GETUSERNUM;
CREATE FUNCTION dbo.FUNC_GETUSERNUM(@ClinicID numeric)
RETURNS varchar(6) 
AS 
BEGIN
    DECLARE @valnum int;
	SET @valnum=0;
	DECLARE @valreturn varchar(6);
	SELECT @valnum=CAST(RIGHT(CAST(MAX(CAST(USERNAME as numeric)) as VARCHAR),2) as INT) FROM TBL_USER WHERE CLINIC_ID=@ClinicID;
	SET @valnum=@valnum+1;
	SET @valreturn=(SELECT CODE FROM TBL_CLINIC WHERE ID=@ClinicID) + RIGHT('0'+CAST(@valnum as varchar),2);    
    RETURN @valreturn;
END;

SELECT * FROM TBL_USER
SELECT * FROM TBL_CLINIC

SELECT STUFF(123456,1,4,'')
SELECT RIGHT('01',2)

SELECT * FROM dbo.FUNC_SPLIT(',','11,33,55')



-----INSERT------
INSERT INTO TBL_CLINIC (CODE, NAME) VALUES ('7701', N'Таван Богд Моторс'); 
INSERT INTO TBL_USER (CLINIC_ID, USER_ROLE_ID, USERNAME, [PASSWORD],EMAIL, USER_CREATED_DATE, PASSWORD_UPDATED_DATE) VALUES (1, 1, N'770101', EncryptByPassPhrase('nirvana', '770101' ), null, GETDATE(), GETDATE());
INSERT INTO TBL_USER (CLINIC_ID, USER_ROLE_ID, USERNAME, [PASSWORD],EMAIL, USER_CREATED_DATE, PASSWORD_UPDATED_DATE) VALUES (1, 2, N'770102', EncryptByPassPhrase('nirvana', '770102' ), null, GETDATE(), GETDATE());

------------------------DEFAULT INSERTS---------------------
INSERT INTO TBL_SERVICE_TYPE (NAME, CHARNAME) VALUES (N'Том хүний эмчилгээ','A');
INSERT INTO TBL_SERVICE_TYPE (NAME, CHARNAME) VALUES (N'Хүүхдийн эмчилгээ','C');
INSERT INTO TBL_APPOINTMENT_TYPE (NAME, COLORCLASS) VALUES (N'Захиалганд байгаа', 'bg-color-blueDark');
INSERT INTO TBL_APPOINTMENT_TYPE (NAME, COLORCLASS) VALUES (N'Хүлээлгэнд байгаа', 'bg-color-pink');
INSERT INTO TBL_APPOINTMENT_TYPE (NAME, COLORCLASS) VALUES (N'Үйлчлүүлж байна', 'bg-color-orange');
INSERT INTO TBL_APPOINTMENT_TYPE (NAME, COLORCLASS) VALUES (N'Үйлчлүүлж дууссан', 'bg-color-greenLight');
INSERT INTO TBL_APPOINTMENT_TYPE (NAME, COLORCLASS) VALUES (N'Цуцалсан', 'bg-color-red');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('1', N'Third molar /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('2', N'Second molar /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('3', N'First molar /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('4', N'Second bicuspid /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('5', N'First bicuspid /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('6', N'Cuspid /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('7', N'Lateral incisor /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('8', N'Central incisor /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('9', N'Central incisor /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('10', N'Lateral incisor /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('11', N'Cuspid /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('12', N'First bicuspid /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('13', N'Second bicuspid /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('14', N'First molar /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('15', N'Second molar /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('16', N'Third molar /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('17', N'Third molar /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('18', N'Second molar /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('19', N'First molar /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('20', N'Second bicuspid /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('21', N'First bicuspid /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('22', N'Cuspid /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('23', N'Lateral incisor /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('24', N'Central incisor /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('25', N'Central incisor /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('26', N'Lateral incisor /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('27', N'Cuspid /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('28', N'First bicuspid /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('29', N'Second bicuspid /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('30', N'First molar /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('31', N'Second molar /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('32', N'Third molar /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('A', N'Second molar /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('B', N'First molar /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('C', N'Canine (cuspid) /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('D', N'Laterial incisor /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('E', N'Central incisor /Баруун дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('F', N'Central incisor /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('G', N'Laterial incisor /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('H', N'Canine (cuspid) /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('I', N'First molar /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('J', N'Second molar /Зүүн дээд/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('K', N'Second molar /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('L', N'First molar /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('M', N'Canine (cuspid) /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('N', N'Laterial incisor /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('O', N'Central incisor /Зүүн доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('P', N'Central incisor /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('Q', N'Laterial incisor /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('R', N'Canine (cuspid) /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('S', N'First molar /Баруун доод/');
INSERT INTO TBL_TEETH (ID, NAME) VALUES ('T', N'Second molar /Баруун доод/');
--CLINIC INSERT HIIGDEHED AUTO SETUP INSERT HIIGDENE
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (1,'calendarstarttime', N'Эхлэх цаг', N'09:00');
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (1,'calendarendtime', N'Дуусах цаг', N'18:00');
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (1,'calendarinterval', N'Цагийн давтамж', N'20');
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (2,'calendarstarttime', N'Эхлэх цаг', N'09:00');
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (2,'calendarendtime', N'Дуусах цаг', N'18:00');
INSERT INTO TBL_SETUP (CLINIC_ID, KEYCODE, NAME, VALUE) VALUES (2,'calendarinterval', N'Цагийн давтамж', N'20');
--SELECT * FROM TBL_SETUP
INSERT INTO TBL_USER_ROLE (NAME) VALUES (N'Удирдлага');
INSERT INTO TBL_USER_ROLE (NAME) VALUES (N'Ресепшн');



INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0001',N'Үзлэг хийж,зөвөлгөө өгөх',NULL,10000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0002',N'Цоорлоос урьдчилан сэргийлэх ломбо /1 шүд /',NULL,30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0003',N'Шүдний чулуу авах,өнгөлгөө хийх,фторт түрхлэг түрхэх',N'Нэг шүд',2500,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0004',N'Шүдний чулуу авах,өнгөлгөө хийх,фторт түрхлэг түрхэх',N'Бүх шүд',60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0005',N'Шүдний чулуу авах,өнгөлгөө хийх,фторт түрхлэг түрхэх',N'Хэсэгчилсэн шүд',35000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0006',N'Өнгөц цоорол',N'Америк',48000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0007',N'Өнгөц цоорол',N'Япон',48000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0008',N'Өнгөц цоорол',N'Солонгос',36000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0009',N'Өнгөц цоорол',N'Глассиономер /япон/',30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0010',N'Дунд цоорол',N'Америк',60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0011',N'Дунд цоорол',N'Япон',60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0012',N'Дунд цоорол',N'Солонгос',48000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0013',N'Дунд цоорол',N'Глассиономер /япон/',36000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0014',N'Гүн цоорол',N'Америк',65000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0015',N'Гүн цоорол',N'Япон',65000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0016',N'Гүн цоорол',N'Солонгос',60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0017',N'Гүн цоорол',N'Глассиономер /япон/',0,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0018',N'Мэдээ алдуултан дор суваг эмчилж ломбодох',N'1 сурвалжтай',72000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0019',N'Мэдээ алдуултан дор суваг эмчилж ломбодох',N'2 сурвалжтай',77000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0020',N'Мишъяк тариатай түр ломбо',N'1 сурвалжтай',36000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0021',N'Мишъяк тариатай түр ломбо',N'Олон сурвалжтай',48000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0022',N'Шүдний суваг ломбодох',N'1 сурвалжтай',24000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0023',N'Шүдний суваг ломбодох',N'2 сурвалжтай',42000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0024',N'Шүдний суваг ломбодох',N'3 сурвалжтай',59000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0025',N'Отток тариатай',N'1 сурвалжтай',15000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0026',N'Отток тариатай',N'Олон сурвалжтай',19000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0027',N'Сувгийн эм түр ломбо',N'1 сурвалжтай',18000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0028',N'Сувгийн эм түр ломбо',N'Олон сурвалжтай',24000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0029',N'Сувгийн ломбо',N'1 сурвалжтай',30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0030',N'Сувгийн ломбо',N'Олон сурвалжтай',55000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0031',N'Давтан эмчилгээ',NULL,15000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0032',N'Мэдээ алдуулалт',NULL,5000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0033',N'Шүд авах',N'Суларсан шүд',30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0034',N'Шүд авах',N'Байнгын шүд',40000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0035',N'Шүд авах',N'Хүнрэлтэй шүд',60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0036',N'Шүд авах',N'Агт араа авах',80000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0037',N'Шүд авах',N'Саатсан хүндрэлтэй агт араа авах',120000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0038',N'Идээ буглаа нээж эмчлэх',NULL,80000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0039',N'Түүшин яс тэгшлэх / нэг талдаа/',NULL,60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0040',N'Мэс ажилбар хийх/ үү,ургацаг,уйланхай авах, хатиг мундас нээх/',NULL,120000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0041',N'Сурвалжийн орой тайрах мэс ажилбар',NULL,100000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0042',N'Чих цоолох',NULL,20000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0043',N'Сэтэрхий чих оёх /1чих/',NULL,150000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0044',N'Хугарсан болон хөдөлгөөнтэй шүдэнд чиг тавих',NULL,250000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0045',N'Имплант суулгах',NULL,0,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0046',N'Шүдний зай бөглөх',N'/1 шүд/',30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0047',N'Шаантаг хэлбэрийн согог',NULL,30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0048',N'Шүд пааландах',NULL,60000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0049',N'Голонцортой шүд',N'Металл',100000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0050',N'Голонцортой шүд',N'Керамик',150000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0051',N'Хадаасаар тогтворыг сэргээх',NULL,30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0052',N'Шүд цайруулах',N'Office bleaching',250000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0053',N'Шүд цайруулах',N'Home bleaching',300000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0054',N'Шүд цайруулах',N'Go',30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0055',N'Цайруулах оо',NULL,30000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0056',N'Нүүрэвч /veneer/ 1 шүд',NULL,200000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0057',N'Сувгийн цайруулагч',NULL,120000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0058',N'Авагддаггүй аппарат',NULL,1300000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0059',N'Брекет наах 1 шүд',NULL,5000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0060',N'Нум солих /дээд,доод/',NULL,20000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0061',N'Резин солих',NULL,10000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0062',N'Татагч резин',NULL,5000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0063',N'Бэхжүүлжэгч аппарат',NULL,150000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0064',N'Авагддаг аппарат',NULL,300000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0065',N'Шүдэнд шигтгээ суулгах',NULL,20000,1);
INSERT INTO TBL_SERVICE (CLINIC_ID, CODE, NAME, DESCRIPTION, PRICE, SERVICE_TYPE_ID) VALUES (1,'A0066',N'Шүдний хэт мэдрэгшилтийг арилгах',NULL,20000,1);







-----SELECT--------
----SET BIRTHDAY
DECLARE @i int = 1
DECLARE @FromDate DATETIME = DATEADD(DAY, -2, '1950-01-01')
DECLARE @ToDate   DATETIME = DATEADD(DAY, -1, '2010-09-01')
DECLARE @Seconds BIGINT = DATEDIFF(MINUTE, @FromDate, @ToDate)
DECLARE @Random BIGINT
DECLARE @Milliseconds INT
WHILE @i < 418
BEGIN
	SET @Random = ROUND(((@Seconds-1) * RAND()), 0)
	SET @Milliseconds = ROUND((999 * RAND()), 0)
	UPDATE TBL_PATIENT SET BIRTHDATE=CONVERT(VARCHAR(10),DATEADD(MILLISECOND, @Milliseconds, DATEADD(MINUTE, @Random, @FromDate)),120) WHERE ID=@i
	SET @i=@i+1
END

SELECT * FROM TBL_STAFF
SELECT ROUND(((5 - 1 -1) * RAND() + 1), 0)
SELECT * FROM TBL_PATIENT

----SET DOCTOR
DECLARE @ii INT =1
WHILE @ii < 418
BEGIN
	UPDATE TBL_PATIENT SET CURRENTDOCTOR=ROUND(((5 - 1 -1) * RAND() + 1), 0) WHERE ID=@ii
	SET @ii=@ii+1
END

----SET APPOINTMENT
DECLARE @ROOMID INT
DECLARE @CHAIRNUM INT
DECLARE @PATIENTNUM INT
DECLARE @PATIENTNAME nvarchar(100)
DECLARE @PATIENTTEL varchar(10)
DECLARE @STAFFNUM INT
DECLARE @DT varchar(10)
DECLARE @APPNUM varchar(9)
DECLARE @BEGINTIME varchar(2)
DECLARE @BEGINMINUTE varchar(2)
DECLARE @ENDTIME varchar(2)
DECLARE @ENDMINUTE varchar(2)
DECLARE @ii INT =1
WHILE @ii < 1500
BEGIN
	SELECT @ROOMID=ROUND(((3 - 1 -1) * RAND() + 1), 0)
	IF @ROOMID = 1
	BEGIN
		SELECT @CHAIRNUM=ROUND(((3 - 1 -1) * RAND() + 1), 0)
	END
	ELSE
	BEGIN
		SELECT @CHAIRNUM=ROUND(((4 - 1 -1) * RAND() + 1), 0)
	END
	SELECT @PATIENTNUM=ROUND(((417 - 1 -1) * RAND() + 1), 0)
	SELECT @PATIENTNAME=FNAME FROM TBL_PATIENT WHERE ID=@PATIENTNUM
	SELECT @PATIENTTEL=TEL FROM TBL_PATIENT WHERE ID=@PATIENTNUM
	SELECT @STAFFNUM=ROUND(((6 - 2 -1) * RAND() + 2), 0)
	DECLARE @FromDate DATETIME = DATEADD(DAY, -1, '2014-12-02')
	DECLARE @ToDate   DATETIME = DATEADD(DAY, -1, '2015-03-13')
	DECLARE @Seconds BIGINT = DATEDIFF(MINUTE, @FromDate, @ToDate)
	DECLARE @Random BIGINT = ROUND(((@Seconds-1) * RAND()), 0)
	DECLARE @Milliseconds INT = ROUND((999 * RAND()), 0)
	SELECT @DT=CONVERT(VARCHAR(10),DATEADD(MILLISECOND, @Milliseconds, DATEADD(MINUTE, @Random, @FromDate)),120)
	SELECT @APPNUM=dbo.FUNC_GETAPPOINTMENTNUM(1,@DT)
	SELECT @BEGINTIME=RIGHT('0'+CAST(ROUND(((18 - 9 -1) * RAND() + 9), 0) as varchar),2)
	SELECT @BEGINMINUTE=a.NAME FROM ( SELECT 1 as ID, '00' as NAME UNION ALL SELECT 2 as ID, '20' as NAME UNION ALL SELECT 3 as ID, '40' as NAME ) a WHERE a.ID=ROUND(((4 - 1 -1) * RAND() + 1), 0)
	IF @BEGINMINUTE='00'
	BEGIN
		SELECT @ENDTIME=@BEGINTIME
		SELECT @ENDMINUTE='40'
	END
	ELSE
	BEGIN
		IF @BEGINMINUTE='20'
		BEGIN
			SELECT @ENDTIME=RIGHT('0'+CAST(CAST(@BEGINTIME as INT)+1 as varchar),2)
			SELECT @ENDMINUTE='00'
		END
		ELSE
		BEGIN
			SELECT @ENDTIME=RIGHT('0'+CAST(CAST(@BEGINTIME as INT)+1 as varchar),2)
			SELECT @ENDMINUTE='20'
		END
	END
	INSERT INTO TBL_APPOINTMENT (NUM, CLINIC_ID, ROOM_ID, CHAIRNUM, PATIENT_NAME, PATIENT_TEL, PATIENT_ID, STAFF_ID, DT, STARTTIME, ENDTIME, APPOINTMENT_TYPE_ID, DISCOUNT) 
	VALUES (@APPNUM, 1, @ROOMID, @CHAIRNUM, @PATIENTNAME, @PATIENTTEL, @PATIENTNUM, @STAFFNUM, @DT, @BEGINTIME+':'+@BEGINMINUTE, @ENDTIME+':'+@ENDMINUTE, 4, NULL)
	SET @ii=@ii+1
END

SELECT * FROM TBL_SERVICE
SELECT * FROM TBL_TEETH
------SET APPOINTMENT SERVICE
DECLARE @APPID INT
DECLARE @TEETHID varchar(2)
DECLARE @SERVICEID INT
DECLARE @SERVICECODE varchar(5)
DECLARE @SERVICENAME nvarchar(255)
DECLARE @SERVICEDESC nvarchar(255)
DECLARE @SERVICECNT INT
DECLARE @SERVICEPRICE NUMERIC(8)
DECLARE @ii INT =1
WHILE @ii < 4000
BEGIN
SELECT @APPID=ROUND(((1501 - 1 -1) * RAND() + 1), 0)
SELECT @TEETHID=a.ID FROM (
	SELECT ROW_NUMBER() OVER(ORDER BY ID) AS RW, ID, NAME 
	FROM TBL_TEETH
) a WHERE RW=ROUND(((53 - 1 -1) * RAND() + 1), 0)
SELECT @SERVICEID = ROUND(((67 - 1 -1) * RAND() + 1), 0)
SELECT @SERVICECODE = CODE FROM TBL_SERVICE WHERE ID=@SERVICEID
SELECT @SERVICENAME = NAME FROM TBL_SERVICE WHERE ID=@SERVICEID
SELECT @SERVICEDESC = DESCRIPTION FROM TBL_SERVICE WHERE ID=@SERVICEID
SELECT @SERVICECNT = ROUND(((8 - 1 -1) * RAND() + 1), 0)
SELECT @SERVICEPRICE = PRICE FROM TBL_SERVICE WHERE ID=@SERVICEID
INSERT INTO TBL_APPOINTMENT_SERVICE ( APPOINTMENT_ID, TEETH_ID, SERVICE_CODE, SERVICE_NAME, SERVICE_DESCRIPTION, CNT, PRICE)
VALUES (@APPID, @TEETHID, @SERVICECODE, @SERVICENAME, @SERVICEDESC, @SERVICECNT, @SERVICECNT*@SERVICEPRICE)
	SET @ii=@ii+1
END




SELECT ID, NAME, CHAIRNUM FROM TBL_ROOM WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1)

SELECT a.ID, a.PATIENT_NAME+' '+a.PATIENT_TEL, CONVERT(varchar(10),DATEADD(wk, DATEDIFF(wk,0,GETDATE()), (a.CHAIRNUM-1)), 120) as DT, a.STARTTIME, a.ENDTIME, a.STAFF_ID, b.CODE+' '+LEFT(b.LNAME,1)+'.'+b.FNAME as STAFF_NAME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_TEL, a.PATIENT_ID, CASE WHEN a.PATIENT_ID IS NOT NULL THEN 'fa-user' ELSE '' END as ISPATIENT, a.DT 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.DT='2015-03-01' AND a.ROOM_ID=1


SELECT * FROM TBL_APPOINTMENT WHERE DT='2015-03-01' AND ROOM_ID=1

UPDATE TBL_APPOINTMENT SET CHAIRNUM=7 WHERE ID=125


SELECT a.ID, a.PATIENT_NAME, CONVERT(varchar(10),DATEADD(wk, DATEDIFF(wk,0,GETDATE()), (a.CHAIRNUM-1)), 120) as DT, a.STARTTIME, a.ENDTIME, a.STAFF_ID, b.CODE+' '+LEFT(b.LNAME,1)+'.'+b.FNAME as STAFF_NAME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_TEL, a.PATIENT_ID, CASE WHEN a.PATIENT_ID IS NOT NULL THEN 'fa-user' ELSE '' END as ISPATIENT, a.DT 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.DT='2015-03-13' AND a.ROOM_ID=1


SELECT a.ID, a.CODE, a.IDCARD, a.FNAME, a.LNAME, a.MNAME, CONVERT(char(10), a.BIRTHDATE,126) as BRITHDATE, CASE WHEN a.GENDER=1 THEN N'Эр' ELSE N'Эм' END AS GENDER, a.TEL, a.TEL2, a.ADDRESS, a.EMAIL, ISNULL(a.PICTURE,'male.jpg') as PICTURE, b.NAME as POSITIONNAME, CASE WHEN a.ISACTIVE=1 THEN '<span class=\"label label-success\">ACTIVE</span>' ELSE '<span class=\"label label-default\">OFF</span>' END 
FROM TBL_STAFF a 
INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
WHERE a.CLINIC_ID=1 
ORDER BY CODE


SELECT * FROM TBL_APPOINTMENT WHERE PATIENT_ID=417
SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_ROOM
SELECT * FROM TBL_STAFF
SELECT * FROM TBL_STAFF_POSITION


UPDATE TBL_APPOINTMENT SET DT=CONVERT(varchar(10), cast(DT as date),120) 

SELECT CONVERT(varchar(10), cast('2/5/2015' as date),120) 

SELECT * FROM TBL_ROOM

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_AUTOMARK

SELECT a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], a.TEL, a.TEL2, a.EMAIL, a.ADDRESS, b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, a.VINNO, CASE WHEN a.FUELTYPE=1 THEN N'Бензин' ELSE N'Дизель' END as FUELTYPE, CASE WHEN a.TRANSMISSIONTYPE=1 THEN N'Автомат' ELSE N'Механик' END as TRANSMISSIONTYPE
FROM TBL_PATIENT a 
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
WHERE a.CLINIC_ID=1
ORDER BY a.CODE

SELECT ISNULL(CODE,'')+'~'+ISNULL(NAME,'')+'~'+ISNULL(TYPE,'')+'~'+ISNULL(TEL,'')+'~'+ISNULL(TEL2,'')+'~'+ISNULL(EMAIL,'')+'~'+ISNULL(ADDRESS,'')+'~'+CAST(MARK_ID as varchar)+'~'+CAST(PRODUCEDYEAR as varchar)+'~'+ISNULL(AUTONO,'')+'~'+ISNULL(VINNO,'')+'~'+CAST(FUELTYPE as varchar)+'~'+CAST(TRANSMISSIONTYPE as varchar) 
FROM TBL_PATIENT 
WHERE ID=1

SELECT a.ID, a.AUTONO, a.NAME, b.NAME as MARK_NAME, a.PRODUCEDYEAR
FROM TBL_PATIENT a 
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
WHERE a.CLINIC_ID=1
ORDER BY a.CODE



SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_APPOINTMENT 
SELECT * FROM TBL_ROOM

SELECT COUNT(1) FROM TBL_PATIENT WHERE AUTONO=N'0666 UNT'

SELECT ID, CODE, NAME, TYPE, TEL, TEL2, EMAIL, ADDRESS, MARK_ID, PRODUCEDYEAR, AUTONO, VINNO, FUELTYPE, TRANSMISSIONTYPE
FROM TBL_PATIENT 
WHERE ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=1)

SELECT COUNT(1) FROM TBL_PATIENT WHERE CLINIC_ID=1 AND ID<>1 AND (AUTONO=N'0666 UNT' OR VINNO=N'01234567891234567')


--timelineDay
SELECT a.ID, a.CHAIRNUM, b.AUTONO, b.TEL, a.DT, a.STARTTIME, a.ENDTIME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_ID 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE 
	a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND 
	a.DT BETWEEN '2015-06-02' AND '2015-06-02'
	AND a.ROOM_ID=1

--agendaWeek
SELECT a.ID, a.CHAIRNUM, b.AUTONO, b.TEL, a.DT, a.STARTTIME, a.ENDTIME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_ID 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE 
	a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND 
	a.DT BETWEEN '2015-05-31' AND '2015-06-06'
	AND a.ROOM_ID=1

--month
SELECT a.DT, c.NAME, c.COLORCLASS, COUNT(a.ID) as CNT
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE 
	a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND 
	a.DT BETWEEN '2015-05-31' AND '2015-07-11'
	AND a.ROOM_ID=1
GROUP BY a.DT, c.NAME, c.COLORCLASS

SELECT * FROM TBL_APPOINTMENT_TYPE

SELECT * FROM TBL_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE

SELECT b.LISTDATA, a.DESCRIPTION, a.SENIORMECHANICAL_STAFFID, a.SERVICECONSULTANT_STAFFID
FROM TBL_APPOINTMENT_DIAGNOSTIC a
INNER JOIN(
	select APPOINTMENT_ID,
	stuff(
	(
		select ','+ CAST(DIAGNOSTICTYPE_ID as varchar)
		from TBL_APPOINTMENT_DIAGNOSTICTYPE 
		where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('')

	),1,1,'') as LISTDATA
	from ( 
		SELECT DISTINCT APPOINTMENT_ID FROM TBL_APPOINTMENT_DIAGNOSTICTYPE WHERE APPOINTMENT_ID=1
	 )t
) b ON a.APPOINTMENT_ID=b.APPOINTMENT_ID
WHERE a.APPOINTMENT_ID=1

SELECT * FROM TBL_SERVICE_TYPE
SELECT NAME FROM TBL_SERVICE_TYPE WHERE ID=(SELECT SERVICE_TYPE_ID FROM TBL_SERVICE WHERE ID=1)

(SELECT CODE FROM TBL_SERVICE WHERE ID=1)

SELECT * FROM TBL_APPOINTMENT_SERVICE

SELECT ID, SERVICE_CODE, SERVICE_NAME, CNT, DESCRIPTION
FROM TBL_APPOINTMENT_SERVICE
WHERE APPOINTMENT_ID=1
ORDER BY SERVICE_CODE

SELECT * FROM TBL_APPOINTMENT_REPAIR

SELECT REPAIRTYPE_ID, MECHANICAL_STAFFID, SENIORMECHANICAL_STAFFID, SERVICECONSULTANT_STAFFID, ISADDITIONALREPAIR
FROM TBL_APPOINTMENT_REPAIR
WHERE APPOINTMENT_ID=1

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE

SELECT b.LISTDATA+'~'+a.REQUESTMEMO
FROM TBL_APPOINTMENT a 
INNER JOIN( 
	select APPOINTMENT_ID, stuff( ( select ','+ CAST(REQUESTTYPE_ID as varchar) from TBL_APPOINTMENT_REQUESTTYPE where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA from ( SELECT DISTINCT APPOINTMENT_ID FROM TBL_APPOINTMENT_REQUESTTYPE WHERE APPOINTMENT_ID=1 )t 
) b ON a.ID=b.APPOINTMENT_ID 
WHERE a.ID=1


SELECT ID, CODE, NAME, TYPE, TEL, TEL2, EMAIL, ADDRESS, MARK_ID, PRODUCEDYEAR, AUTONO, VINNO, FUELTYPE, TRANSMISSIONTYPE FROM TBL_PATIENT WHERE ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)

SELECT ISNULL(CAST(ID as VARCHAR),'')+'~'+ISNULL(CODE,'')+'~'+ISNULL(NAME,'')+'~'+CAST(TYPE as VARCHAR)+'~'+ISNULL(TEL,'')+'~'+ISNULL(TEL2,'')+'~'+ISNULL(EMAIL,'')+'~'+ISNULL(ADDRESS,'')+'~'+CAST(MARK_ID as VARCHAR)+'~'+CAST(PRODUCEDYEAR as VARCHAR)+'~'+ISNULL(AUTONO,'')+'~'+ISNULL(VINNO,'')+'~'+ISNULL(CAST(FUELTYPE as VARCHAR),'')+'~'+ISNULL(CAST(TRANSMISSIONTYPE as VARCHAR),'') FROM TBL_PATIENT WHERE ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)

SELECT ISNULL(CAST(b.LISTDATA as VARCHAR),'')+'~'+ISNULL(CAST(a.DESCRIPTION as VARCHAR),'')+'~'+ISNULL(CAST(a.SENIORMECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(a.SERVICECONSULTANT_STAFFID as VARCHAR),'') FROM TBL_APPOINTMENT_DIAGNOSTIC a INNER JOIN( select APPOINTMENT_ID, stuff( ( select ','+ CAST(DIAGNOSTICTYPE_ID as varchar) from TBL_APPOINTMENT_DIAGNOSTICTYPE where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA from ( SELECT DISTINCT APPOINTMENT_ID FROM TBL_APPOINTMENT_DIAGNOSTICTYPE WHERE APPOINTMENT_ID=1 )t ) b ON a.APPOINTMENT_ID=b.APPOINTMENT_ID WHERE a.APPOINTMENT_ID=1

SELECT ISNULL(CAST(REPAIRTYPE_ID as VARCHAR),'')+'~'+ISNULL(CAST(MECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(SENIORMECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(SERVICECONSULTANT_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(ISADDITIONALREPAIR as VARCHAR),'') FROM TBL_APPOINTMENT_REPAIR WHERE APPOINTMENT_ID=1


	SELECT * FROM TBL_APPOINTMENT
	SELECT * FROM TBL_APPOINTMENT_SERVICE



SELECT * FROM TBL_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE

SELECT SERVICE_CODE, SERVICE_NAME, SERVICE_DESCRIPTION, CNT, SERVICE_PRICE, CNT*SERVICE_PRICE as TOTALPRICE
FROM TBL_APPOINTMENT_SERVICE 
WHERE APPOINTMENT_ID=1
ORDER BY ID

SELECT * FROM TBL_SERVICE_TYPE
SELECT * FROM TBL_SERVICE


SELECT a.DIAGNOSTICTYPE_ID, b.NAME as DIAGNOSTICTYPE_NAME, b.PRICE as DIAGNOSTICTYPE_PRICE
FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID
WHERE a.APPOINTMENT_ID=3


SELECT a.ID, a.CNT, a.SERVICE_CODE, a.SERVICE_NAME, a.DESCRIPTION, a.SERVICE_PRICE, (a.CNT*a.SERVICE_PRICE) as TOTALPRICE
FROM TBL_APPOINTMENT_SERVICE a
WHERE a.APPOINTMENT_ID=3
ORDER BY a.SERVICE_CODE

SELECT * FROM TBL_REQUESTTYPE

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_AUTOMARK

SELECT a.CODE, a.NAME, CASE WHEN a.TYPE=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as TYPE, a.TEL, a.TEL2, a.EMAIL, a.ADDRESS, b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, a.VINNO, CASE WHEN a.FUELTYPE=1 THEN N'Бензин' ELSE N'Дизель' END as FUELTYPE, CASE WHEN a.TRANSMISSIONTYPE=1 THEN N'Автомат' ELSE N'Механик' END as TRANSMISSIONTYPE
FROM TBL_PATIENT a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
WHERE a.ID=1


SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_ROOM
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC

SELECT a.ID, a.DT+' '+a.STARTTIME+'-'+a.ENDTIME as DT, c.NAME+N' - Хаалга '+CAST(a.CHAIRNUM as varchar)+N' | Захиалгын# '+a.NUM as head, d.TEETH_ID, d.SERVICE_CODE+' '+d.SERVICE_NAME as SERVICE,  ISNULL(d.CNT,0) as CNT,  ISNULL(d.PRICE,0) as PRICE, ISNULL(d.CNT*d.PRICE,0) as TOTALPRICE, ISNULL(a.MEMO,'') as MEMO 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_ROOM c ON a.ROOM_ID=c.ID 
LEFT JOIN TBL_APPOINTMENT_SERVICE d ON a.ID=d.APPOINTMENT_ID 
WHERE a.PATIENT_ID=1 ORDER BY a.DT DESC, a.STARTTIME DESC

SELECT 
	a.ID,
	a.DT, a.STARTTIME, a.ENDTIME, 
	b.NAME as ROOM_NAME, 
	a.CHAIRNUM, 
	a.NUM as APPNO, 
	c.LISTDATA as REQUESTTYPELIST,
	a.REQUESTMEMO,
	ISNULL(d.DIAGNOSTICSUMPRICE,0) as DIAGNOSTICSUMPRICE,
	f.LISTDATA as DIAGNOSTICTYPELIST,
	g.DESCRIPTION as DIAGNOSTICDESCRIPTION,
	LEFT(h.LNAME,1)+'.'+h.FNAME as DIAGNOSTICSENIORMECHANICAL_STAFFNAME,
	LEFT(i.LNAME,1)+'.'+i.FNAME as DIAGNOSTICSERVICECONSULTANT_STAFFNAME,
	ISNULL(j.SERVICESUMPRICE,0) as SERVICESUMPRICE,
	p.NAME as REPAIRTYPENAME,
	LEFT(q.LNAME,1)+'.'+q.FNAME as REPAIRMECHANICAL_STAFFNAME,
	LEFT(r.LNAME,1)+'.'+r.FNAME as REPAIRSENIORMECHANICAL_STAFFNAME,
	LEFT(s.LNAME,1)+'.'+s.FNAME as REPAIRSERVICECONSULTANT_STAFFNAME,
	k.LISTDATA as SERVICELIST,
	ISNULL(l.PARTSUMPRICE,0) as PARTSUMPRICE,
	m.LISTDATA as PARTLIST,
	ISNULL(n.SUMPRICE,0) as SUMPRICE
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_ROOM b ON a.ROOM_ID=b.ID
INNER JOIN (
	select 
		APPOINTMENT_ID, 
		( select '<span class="label bg-color-blueDark">'+ b.NAME+'</span>' from TBL_APPOINTMENT_REQUESTTYPE a INNER JOIN TBL_REQUESTTYPE b ON a.REQUESTTYPE_ID=b.ID where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_REQUESTTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
) c ON a.ID=c.APPOINTMENT_ID
LEFT JOIN (
	SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as DIAGNOSTICSUMPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
) d ON a.ID=d.APPOINTMENT_ID
LEFT JOIN (
	select 
		APPOINTMENT_ID, 
		( select '<span class="label bg-color-blueDark">'+ b.NAME+N' <i>/₮'+REPLACE(CONVERT(varchar, CAST(b.PRICE AS money), 1),'.00','')+'/</i></span>' from TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
) f ON a.ID=f.APPOINTMENT_ID
LEFT JOIN TBL_APPOINTMENT_DIAGNOSTIC g ON a.ID=g.APPOINTMENT_ID
LEFT JOIN TBL_STAFF h ON g.SENIORMECHANICAL_STAFFID=h.ID
LEFT JOIN TBL_STAFF i ON g.SERVICECONSULTANT_STAFFID = i.ID
LEFT JOIN (
	SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SERVICESUMPRICE FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
) j ON a.ID=j.APPOINTMENT_ID
LEFT JOIN (
	select 
		APPOINTMENT_ID, 
		( select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.SERVICE_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.SERVICE_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' from TBL_APPOINTMENT_SERVICE a where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
) k ON a.ID=k.APPOINTMENT_ID
LEFT JOIN (
	SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as PARTSUMPRICE FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=4 GROUP BY a.APPOINTMENT_ID
) l ON a.ID=l.APPOINTMENT_ID
LEFT JOIN (
	select 
		APPOINTMENT_ID, 
		( select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.PART_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.PART_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' from TBL_APPOINTMENT_PART a where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=4 
	)t 
) m ON a.ID=m.APPOINTMENT_ID
LEFT JOIN (
	SELECT a.APPOINTMENT_ID, SUM(a.SUMPRICE) as SUMPRICE
	FROM (
	SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as SUMPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
	UNION ALL
	SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SUMPRICE FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
	UNION
	SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as SUMPRICE FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=4 GROUP BY a.APPOINTMENT_ID
	) a
	GROUP BY a.APPOINTMENT_ID
) n ON a.ID=n.APPOINTMENT_ID
LEFT JOIN TBL_APPOINTMENT_REPAIR o ON a.ID=o.APPOINTMENT_ID
LEFT JOIN TBL_REPAIRTYPE p ON o.REPAIRTYPE_ID=p.ID
LEFT JOIN TBL_STAFF q ON o.MECHANICAL_STAFFID = q.ID
LEFT JOIN TBL_STAFF r ON o.SENIORMECHANICAL_STAFFID = r.ID
LEFT JOIN TBL_STAFF s ON o.SERVICECONSULTANT_STAFFID = s.ID
WHERE a.PATIENT_ID=1
ORDER BY a.DT DESC, a.STARTTIME DESC, a.ENDTIME DESC

--request
	select 
		APPOINTMENT_ID, 
		( select '<span class="label bg-color-blueDark">'+ b.NAME+'</span>' from TBL_APPOINTMENT_REQUESTTYPE a INNER JOIN TBL_REQUESTTYPE b ON a.REQUESTTYPE_ID=b.ID where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_REQUESTTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
--diagnostic
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE
	select 
		APPOINTMENT_ID, 
		( select '<span class="label bg-color-blueDark">'+ b.NAME+N' <i>/₮'+CAST(b.PRICE as varchar)+'/</i></span>' from TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
--diagnostic total price
SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as DIAGNOSTICSUMPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
--service
SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_APPOINTMENT_REPAIR
	select 
		APPOINTMENT_ID, 
		( select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+CAST(a.SERVICE_PRICE as varchar)+'</td><td class="text-right">'+CAST((a.SERVICE_PRICE*a.CNT) as varchar)+'</td></tr>' from TBL_APPOINTMENT_SERVICE a where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 
	)t 
--service total price
SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SERVICESUMPRICE FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
--part
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_REPAIRTYPE


--part
SELECT * FROM TBL_APPOINTMENT_PART
	select 
		APPOINTMENT_ID, 
		( select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+CAST(a.PART_PRICE as varchar)+'</td><td class="text-right">'+CAST((a.PART_PRICE*a.CNT) as varchar)+'</td></tr>' from TBL_APPOINTMENT_PART a where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=4 
	)t 
-- part total price
SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as PARTSUMPRICE FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=4 GROUP BY a.APPOINTMENT_ID

--total pay price
SELECT a.APPOINTMENT_ID, SUM(a.SUMPRICE) as SUMPRICE
FROM (
SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as SUMPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
UNION ALL
SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SUMPRICE FROM TBL_APPOINTMENT_SERVICE a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
UNION
SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as SUMPRICE FROM TBL_APPOINTMENT_PART a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID WHERE b.PATIENT_ID=1 GROUP BY a.APPOINTMENT_ID
) a
GROUP BY a.APPOINTMENT_ID


SELECT REPLACE(CONVERT(varchar, CAST(987654321 AS money), 1),'.00','')

	select 
		APPOINTMENT_ID, 
		stuff( ( select ','+ CAST(REQUESTTYPE_ID as varchar) from TBL_APPOINTMENT_REQUESTTYPE where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA 
	from ( 
		SELECT DISTINCT APPOINTMENT_ID FROM TBL_APPOINTMENT_REQUESTTYPE WHERE APPOINTMENT_ID=1 
	)t 


	SELECT * FROM TBL_PATIENT
	SELECT * FROM TBL_USER
	SELECT * FROM TBL_USER_ROLE
	SELECT * FROM TBL_STAFF
	SELECT * FROM TBL_APPOINTMENT

--yerunhii tailan
SELECT ROW_NUMBER() OVER(ORDER BY b.NUM) AS RW, g.NAME, g.COLORCLASS, b.NUM, b.DT, b.STARTTIME+'-'+b.ENDTIME as TM,c.NAME as ROOM_NAME, b.CHAIRNUM, d.CODE as PATIENT_CODE, d.AUTONO, a.DIAGNOSTICLIST, a.SERVICELIST, a.PARTLIST, ISNULL(a.PRICESUM,0) as PRICESUM 
FROM ( 
	SELECT a.APPOINTMENT_ID, a.PRICESUM, a.DIAGNOSTICLIST, a.SERVICELIST, STUFF( ISNULL( ( SELECT ', ' + x.PART_CODE FROM TBL_APPOINTMENT_PART x WHERE x.APPOINTMENT_ID = a.APPOINTMENT_ID GROUP BY x.PART_CODE ORDER BY x.PART_CODE ASC FOR XML PATH (''), TYPE).value('.','NVARCHAR(max)'), '' ), 1, 2, '' ) as PARTLIST 
	FROM (
		SELECT a.APPOINTMENT_ID, a.PRICESUM, a.DIAGNOSTICLIST, STUFF( ISNULL( ( SELECT ', ' + x.SERVICE_CODE FROM TBL_APPOINTMENT_SERVICE x WHERE x.APPOINTMENT_ID = a.APPOINTMENT_ID GROUP BY x.SERVICE_CODE ORDER BY x.SERVICE_CODE ASC FOR XML PATH (''), TYPE).value('.','NVARCHAR(max)'), '' ), 1, 2, '' ) as SERVICELIST 
		FROM ( 
			SELECT a.ID as APPOINTMENT_ID, a.PRICESUM, STUFF( ISNULL( ( SELECT ', ' + y.NAME FROM TBL_APPOINTMENT_DIAGNOSTICTYPE x INNER JOIN TBL_DIAGNOSTICTYPE y ON x.DIAGNOSTICTYPE_ID=y.ID WHERE x.APPOINTMENT_ID = a.ID GROUP BY y.NAME ORDER BY y.NAME DESC FOR XML PATH (''), TYPE).value('.','NVARCHAR(max)'), '' ), 1, 2, '' ) as DIAGNOSTICLIST 
			FROM ( 
				SELECT a.ID, SUM(a.PRICESUM) as PRICESUM
				FROM (
					SELECT a.ID, ISNULL(SUM(c.PRICE),0) as PRICESUM 
					FROM TBL_APPOINTMENT a 
					LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID 
					LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
					WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-06-20' AND '2015-06-20' 
					GROUP BY a.ID 
					UNION ALL
					SELECT a.ID, ISNULL(SUM(b.SERVICE_PRICE*b.CNT),0) as PRICESUM 
					FROM TBL_APPOINTMENT a 
					LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
					WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-06-20' AND '2015-06-20' 
					GROUP BY a.ID 
					UNION ALL
					SELECT a.ID, ISNULL(SUM(b.PART_PRICE*b.CNT),0) as PRICESUM 
					FROM TBL_APPOINTMENT a 
					LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID 
					WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-06-20' AND '2015-06-20' 
					GROUP BY a.ID 
				) a
				GROUP BY a.ID
			) a 
			GROUP BY a.ID, a.PRICESUM 
		) a 
		GROUP BY a.APPOINTMENT_ID, a.PRICESUM, a.DIAGNOSTICLIST 
	) a
	GROUP BY a.APPOINTMENT_ID, a.PRICESUM, a.DIAGNOSTICLIST, a.SERVICELIST
) a 
INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
INNER JOIN TBL_ROOM c ON b.ROOM_ID=c.ID 
INNER JOIN TBL_PATIENT d ON b.PATIENT_ID=d.ID 
INNER JOIN TBL_APPOINTMENT_TYPE g ON b.APPOINTMENT_TYPE_ID=g.ID


SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_SETUP
--urgugchiin sul zogsolt
SELECT ROW_NUMBER() OVER(ORDER BY a.USEDTIME DESC) AS RW, a.ROOM_NAME, a.CHAIRNUM, a.USETIME, a.USEDTIME, a.USETIME-a.USEDTIME as FREETIME 
FROM ( 
	SELECT b.NAME as ROOM_NAME, a.CHAIRNUM, (SELECT DATEDIFF(DAY,CONVERT(datetime,'2015-06-20 00:00:00',120),CONVERT(datetime,'2015-06-21 00:00:00',120)+1)*DATEDIFF(MINUTE,CONVERT(datetime, '2015-01-01 '+(SELECT VALUE FROM TBL_SETUP WHERE CLINIC_ID=1 AND KEYCODE='calendarstarttime')+':00',20), CONVERT(datetime, '2015-01-01 '+(SELECT VALUE FROM TBL_SETUP WHERE CLINIC_ID=1 AND KEYCODE='calendarendtime')+':00',20))) as USETIME, DATEDIFF(MINUTE, a.DT+' '+a.STARTTIME, a.DT+' '+a.ENDTIME) as USEDTIME 
	FROM TBL_APPOINTMENT a 
	INNER JOIN TBL_ROOM b ON a.ROOM_ID=b.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-06-20' AND '2015-06-21' AND a.ROOM_ID=1
	GROUP BY b.NAME, a.CHAIRNUM, a.DT, a.STARTTIME, a.ENDTIME
	UNION ALL
	WITH t AS (
		SELECT 1 x
		UNION ALL
		SELECT x+1
		FROM t
		WHERE x<18
	) SELECT x FROM t 
) a 
ORDER BY a.USEDTIME DESC

SELECT DATEDIFF(DAY,CONVERT(datetime,'2015-06-20 00:00:00',120),CONVERT(datetime,'2015-06-21 00:00:00',120)+1)*DATEDIFF(MINUTE,CONVERT(datetime, '2015-01-01 '+(SELECT VALUE FROM TBL_SETUP WHERE CLINIC_ID=1 AND KEYCODE='calendarstarttime')+':00',20), CONVERT(datetime, '2015-01-01 '+(SELECT VALUE FROM TBL_SETUP WHERE CLINIC_ID=1 AND KEYCODE='calendarendtime')+':00',20))

SELECT DATEDIFF(DAY,CONVERT(datetime,'2015-06-20 00:00:00',120),CONVERT(datetime,'2015-06-20 00:00:00',120)+1)

SELECT * FROM TBL_ROOM

SELECT '' as ID, N'Бүгд' as NAME
UNION ALL
SELECT CAST(ID as varchar) as ID, NAME+' ('+CAST(CHAIRNUM as varchar)+')' as NAME FROM TBL_ROOM WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1)

with t as (
	select 1 x
	union all 
	select x + 1
	from t
	where x < 10
)
select x
from t


--orlogiin statistik tailan udur
declare @start datetime = '2015-05-20' 
declare @end   datetime = '2015-06-20' 
;with amonth(day) as ( 
	select @start as day 
	union all 
	select day + 1 
	from amonth 
	where day < @end 
) 
select CONVERT(VARCHAR(6),amonth.day,107) as EPOCHDT, SUM(ISNULL(b.SUMPRICE,0)) as SUMPRICE 
from amonth 
left join ( 
	SELECT a.DT, SUM(ISNULL(c.PRICE,0)) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID 
	LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
	UNION ALL
	SELECT a.DT, SUM((ISNULL(b.SERVICE_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
	UNION ALL
	SELECT a.DT, SUM((ISNULL(b.PART_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID 
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
) b ON amonth.day=b.DT 
group by amonth.day

--orlogiin statistik tailan sar
declare @start datetime = '2015-05-01' 
declare @end   datetime = CONVERT(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,'2015-06-01')+1,1)),120) 
;with cte as ( 
	SELECT dt = DATEADD(DAY, -(DAY(@start) - 1), @start) 
	union all 
	SELECT DATEADD(MONTH, 1, dt) FROM cte WHERE dt < DATEADD(MONTH, -1, @end) 
) 
SELECT CONVERT(varchar(6),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,CONVERT(varchar(10),cte.dt,120))+1,0)),107) as EPOCHDT, SUM(ISNULL(b.SUMPRICE,0)) as SUMPRICE 
FROM cte 
LEFT JOIN ( 
	SELECT a.DT+'-01' as DTT, SUM(a.SUMPRICE) as SUMPRICE 
	FROM ( 
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM(ISNULL(c.PRICE,0)) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID 
		LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
		UNION ALL
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM(ISNULL(b.SERVICE_PRICE,0)*ISNULL(b.CNT,0)) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
		UNION ALL
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM((ISNULL(b.PART_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID 
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
	) a 
	GROUP BY a.DT 
) b ON cte.dt=b.DTT GROUP BY cte.dt


--orlogiin statistik tailand udur chart
declare @start datetime = '2015-05-20' 
declare @end   datetime = '2015-06-20' 
;with amonth(day) as ( 
	select @start as day 
	union all 
	select day + 1 from amonth where day < @end 
) 
select cast(Datediff(s, '1970-01-01', CONVERT(VARCHAR(10),amonth.day,120)) AS bigint)*1000 as EPOCHDT, SUM(ISNULL(b.SUMPRICE,0)) as SUMPRICE 
from amonth 
left join ( 
	SELECT a.DT, SUM(ISNULL(c.PRICE,0)) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID 
	LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
	UNION ALL
	SELECT a.DT, SUM((ISNULL(b.SERVICE_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
	UNION ALL
	SELECT a.DT, SUM((ISNULL(b.PART_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
	FROM TBL_APPOINTMENT a 
	LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID 
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
	GROUP BY a.DT 
) b ON amonth.day=b.DT 
group by amonth.day

--orlogiin statistik tailan sar chart
declare @start datetime = '2015-05-01' 
declare @end   datetime = CONVERT(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,'2015-06-01')+1,1)),120) 
;with cte as ( 
	SELECT dt = DATEADD(DAY, -(DAY(@start) - 1), @start) 
	union all 
	SELECT DATEADD(MONTH, 1, dt) FROM cte WHERE dt < DATEADD(MONTH, -1, @end) 
) 
SELECT cast(Datediff(s, '1970-01-01', CONVERT(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,CONVERT(varchar(10),cte.dt,120))+1,0)),120)) AS bigint)*1000 as EPOCHDT, SUM(ISNULL(b.SUMPRICE,0)) as SUMPRICE 
FROM cte 
LEFT JOIN ( 
	SELECT a.DT+'-01' as DTT, SUM(a.SUMPRICE) as SUMPRICE 
	FROM ( 
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM(ISNULL(c.PRICE,0)) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID 
		LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
		UNION ALL
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM(ISNULL(b.SERVICE_PRICE,0)*ISNULL(b.CNT,0)) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
		UNION ALL
		SELECT CAST(YEAR(a.DT) as varchar)+'-'+RIGHT('0'+CAST(MONTH(a.DT) as varchar),2) as DT, SUM((ISNULL(b.PART_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
		FROM TBL_APPOINTMENT a 
		LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID 
		WHERE a.CLINIC_ID=1 AND a.DT BETWEEN @start AND @end 
		GROUP BY a.DT 
	) a 
	GROUP BY a.DT 
) b ON cte.dt=b.DTT 
GROUP BY cte.dt

SELECT * FROM (
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 
	WHERE a.CLINIC_ID=1 AND a.AUTONO=N'5707 UNT'
) a
WHERE RW>=1 AND RW<=100

SELECT COUNT(1) FROM TBL_PATIENT WHERE CLINIC_ID=1


SELECT * FROM TBL_PATIENT

SELECT * FROM TBL_APPOINTMENT

--Tailan NEW 1.
SELECT ROW_NUMBER() OVER(ORDER BY a.CNT DESC, a.MARK_NAME ASC) AS RW, a.MARK_NAME, a.CNT
FROM (
	SELECT a.MARK_ID, b.NAME as MARK_NAME, COUNT(a.MARK_ID) as CNT
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
	WHERE a.CLINIC_ID=1
	GROUP BY a.MARK_ID, b.NAME
) a
--Tailan NEW 2.
SELECT ROW_NUMBER() OVER(ORDER BY a.SUMCNT DESC, a.PART_CODE ASC) AS RW, a.PART_TYPE_NAME, a.PART_CODE, a.PART_NAME, a.PART_DESCRIPTION, a.PART_PRICE, a.SUMCNT
FROM (
	SELECT b.PART_TYPE_NAME, b.PART_CODE, b.PART_NAME, b.PART_DESCRIPTION, b.PART_PRICE, SUM(b.CNT) as SUMCNT
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_APPOINTMENT_PART b ON a.ID=b.APPOINTMENT_ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2014-06-20' AND '2015-06-21'
	GROUP BY b.PART_TYPE_NAME, b.PART_CODE, b.PART_NAME, b.PART_DESCRIPTION, b.PART_PRICE
) a
--Tailan NEW 3.
SELECT ROW_NUMBER() OVER(ORDER BY a.SUMCNT DESC, a.SERVICE_CODE ASC) AS RW, a.SERVICE_TYPE_NAME, a.SERVICE_CODE, a.SERVICE_NAME, a.SERVICE_DESCRIPTION, a.SERVICE_PRICE, a.SUMCNT
FROM (
	SELECT b.SERVICE_TYPE_NAME, b.SERVICE_CODE, b.SERVICE_NAME, b.SERVICE_DESCRIPTION, b.SERVICE_PRICE, SUM(b.CNT) as SUMCNT
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2014-06-20' AND '2015-06-21'
	GROUP BY b.SERVICE_TYPE_NAME, b.SERVICE_CODE, b.SERVICE_NAME, b.SERVICE_DESCRIPTION, b.SERVICE_PRICE
) a
--Tailan NEW 4.
SELECT ROW_NUMBER() OVER(ORDER BY a.CNT DESC, a.DIAGNOSTICTYPE_NAME ASC) AS RW, a.DIAGNOSTICTYPE_NAME, a.CNT
FROM (
	SELECT b.DIAGNOSTICTYPE_ID, c.NAME as DIAGNOSTICTYPE_NAME, COUNT(b.DIAGNOSTICTYPE_ID) as CNT
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID=b.APPOINTMENT_ID
	INNER JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID=c.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2014-06-20' AND '2015-06-21'
	GROUP BY b.DIAGNOSTICTYPE_ID, c.NAME
) a
--Tailan NEW 5.
SELECT ROW_NUMBER() OVER(ORDER BY a.CNT DESC, a.REQUESTTYPE_NAME ASC) AS RW, a.REQUESTTYPE_NAME, a.CNT
FROM (
	SELECT b.REQUESTTYPE_ID, c.NAME as REQUESTTYPE_NAME, COUNT(b.REQUESTTYPE_ID) as CNT
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_APPOINTMENT_REQUESTTYPE b ON a.ID=b.APPOINTMENT_ID
	INNER JOIN TBL_REQUESTTYPE c ON b.REQUESTTYPE_ID=c.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2014-06-20' AND '2015-06-21'
	GROUP BY b.REQUESTTYPE_ID, c.NAME
) a


SELECT a.ID, a.CODE, a.IDCARD, a.FNAME, a.LNAME, a.MNAME, CONVERT(char(10), a.BIRTHDATE,126) as BRITHDATE, CASE WHEN a.GENDER=1 THEN N'Эр' ELSE N'Эм' END AS GENDER, a.TEL, a.TEL2, a.ADDRESS, a.EMAIL, ISNULL(a.PICTURE,'male.jpg') as PICTURE, b.NAME as POSITIONNAME, CASE WHEN a.ISACTIVE=1 THEN '<span class=\"label label-success\">ACTIVE</span>' ELSE '<span class=\"label label-default\">OFF</span>' END as TYPE FROM TBL_STAFF a INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID WHERE a.CLINIC_ID=1 ORDER BY CODE


SELECT * FROM TBL_CLINIC

SELECT ID, CODE, NAME, ADDR, TEL, TEL2, EMAIL, WEB, FB, LOGO FROM TBL_CLINIC WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=" + Session["eBook_UserID"].ToString() + ")

DELETE FROM TBL_CLINIC WHERE ID=2


SELECT ISNULL(CAST(REPAIRTYPE_ID as VARCHAR),'')+'~'+ISNULL(CAST(MECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(SENIORMECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(SERVICECONSULTANT_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(ISADDITIONALREPAIR as VARCHAR),'') 
FROM TBL_APPOINTMENT_REPAIR WHERE APPOINTMENT_ID=4

SELECT * FROM TBL_USER
SELECT * FROM TBL_USER_ROLE
SELECT * FROM TBL_APPOINTMENT
	SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC
	SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_PART
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_APPOINTMENT_TYPE
SELECT * FROM TBL_REPAIRTYPE
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_CLINIC
SELECT * FROM TBL_DIAGNOSTICTYPE


SELECT a.CODE, a.NAME, CASE WHEN a.TYPE=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as TYPE, a.TEL, a.TEL2, a.EMAIL, a.ADDRESS, b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, a.VINNO, CASE WHEN a.FUELTYPE=1 THEN N'Бензин' ELSE N'Дизель' END as FUELTYPE, CASE WHEN a.TRANSMISSIONTYPE=1 THEN N'Автомат' ELSE N'Механик' END as TRANSMISSIONTYPE 
FROM TBL_PATIENT a 
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 
WHERE a.ID=

SELECT a.NUM as APPOINTMENT_NUM, b.CODE as PATIENT_CODE, b.NAME as PATIENT_NAME, b.AUTONO as PATIENT_AUTONO, a.DT as APPOINTMENT_DT,
	a.STARTTIME as APPOINTMENT_STARTTIME,
	a.ENDTIME as APPOINTMENT_ENDTIME,
	c.NAME as ROOM_NAME,
	a.CHAIRNUM, 
	d.ADDR as CLINIC_ADDR, 
	CASE WHEN d.TEL2 is not null THEN CAST(d.TEL as varchar)+', '+CAST(d.TEL2 as varchar) ELSE CAST(d.TEL as varchar) END as CLINIC_TEL,
	d.EMAIL as CLINIC_EMAIL,
	d.WEB as CLINIC_WEB
FROM TBL_APPOINTMENT a
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
INNER JOIN TBL_ROOM c ON a.ROOM_ID=c.ID
INNER JOIN TBL_CLINIC d ON a.CLINIC_ID=d.ID
WHERE a.ID=1

SELECT a.NAME as REQUESTTYPE_NAME, CASE WHEN b.REQUESTTYPE_ID is null THEN '[]' ELSE '[V]' END as ISCHECK
FROM TBL_REQUESTTYPE a
LEFT JOIN TBL_APPOINTMENT_REQUESTTYPE b ON a.ID=b.REQUESTTYPE_ID AND b.APPOINTMENT_ID=1
WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_APPOINTMENT WHERE ID=1)


SELECT a.NAME, a.PRICE, a.CNT, a.PRICE*CNT as TOTALPRICE
FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
WHERE a.APPOINTMENT_ID=1
ORDER BY a.DIAGNOSTICTYPE_ID

SELECT a.SERVICE_NAME, a.SERVICE_PRICE, a.CNT, a.SERVICE_PRICE*CNT as TOTALPRICE
FROM TBL_APPOINTMENT_SERVICE a
WHERE a.APPOINTMENT_ID=1

SELECT a.PART_NAME as NAME, a.PART_PRICE as PRICE, a.CNT, a.PART_PRICE*CNT as TOTALPRICE
FROM TBL_APPOINTMENT_PART a
WHERE a.APPOINTMENT_ID=1

SELECT ISNULL(SUM(a.TOTALPRICE),0) as TOTALPRICE
FROM (
	SELECT a.PRICE*CNT as TOTALPRICE
	FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
	WHERE a.APPOINTMENT_ID=1
	UNION ALL
	SELECT a.SERVICE_PRICE*CNT as TOTALPRICE
	FROM TBL_APPOINTMENT_SERVICE a
	WHERE a.APPOINTMENT_ID=1
	UNION ALL
	SELECT a.PART_PRICE*CNT as TOTALPRICE
	FROM TBL_APPOINTMENT_PART a
	WHERE a.APPOINTMENT_ID=1
) a

SELECT ISNULL(DISCOUNT,0) as DISCOUNT 
FROM TBL_APPOINTMENT
WHERE ID=1

SELECT ISNULL(SUM(a.ULDEGDEL),0) as ULDEGDEL
FROM (
	SELECT a.APPOINTMENT_ID, (a.TOTALPRICE-ISNULL(b.DISCOUNT,0))-ISNULL(b.PAID,0) as ULDEGDEL
	FROM (
		SELECT a.APPOINTMENT_ID, SUM(a.TOTALPRICE) as TOTALPRICE
		FROM (
			SELECT a.APPOINTMENT_ID, a.PRICE*CNT as TOTALPRICE
			FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
			WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
			UNION ALL
			SELECT a.APPOINTMENT_ID, a.SERVICE_PRICE*CNT as TOTALPRICE
			FROM TBL_APPOINTMENT_SERVICE a
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
			WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
			UNION ALL
			SELECT a.APPOINTMENT_ID, a.PART_PRICE*CNT as TOTALPRICE
			FROM TBL_APPOINTMENT_PART a
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
			WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
		) a
		GROUP BY a.APPOINTMENT_ID
	) a
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
) a

SELECT ISNULL(PAID,0) as PAID 
FROM TBL_APPOINTMENT
WHERE ID=1


SELECT CAST((
	SELECT ISNULL(SUM(a.TOTALPRICE),0) as TOTALPRICE
	FROM (
		SELECT a.PRICE*CNT as TOTALPRICE
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
		WHERE a.APPOINTMENT_ID=1
		UNION ALL
		SELECT a.SERVICE_PRICE*CNT as TOTALPRICE
		FROM TBL_APPOINTMENT_SERVICE a
		WHERE a.APPOINTMENT_ID=1
		UNION ALL
		SELECT a.PART_PRICE*CNT as TOTALPRICE
		FROM TBL_APPOINTMENT_PART a
		WHERE a.APPOINTMENT_ID=1
	) a
) as varchar)+'~'+CAST((
	SELECT ISNULL(DISCOUNT,0) as DISCOUNT 
	FROM TBL_APPOINTMENT
	WHERE ID=1
) as varchar)+'~'+CAST((
	SELECT ISNULL(SUM(a.ULDEGDEL),0) as ULDEGDEL
	FROM (
		SELECT a.APPOINTMENT_ID, (a.TOTALPRICE-ISNULL(b.DISCOUNT,0))-ISNULL(b.PAID,0) as ULDEGDEL
		FROM (
			SELECT a.APPOINTMENT_ID, SUM(a.TOTALPRICE) as TOTALPRICE
			FROM (
				SELECT a.APPOINTMENT_ID, a.PRICE*CNT as TOTALPRICE
				FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
				WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
				UNION ALL
				SELECT a.APPOINTMENT_ID, a.SERVICE_PRICE*CNT as TOTALPRICE
				FROM TBL_APPOINTMENT_SERVICE a
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
				WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
				UNION ALL
				SELECT a.APPOINTMENT_ID, a.PART_PRICE*CNT as TOTALPRICE
				FROM TBL_APPOINTMENT_PART a
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=3)
				WHERE a.APPOINTMENT_ID<>3 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=3))
			) a
			GROUP BY a.APPOINTMENT_ID
		) a
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
	) a
) as varchar)+'~'+CAST((
	SELECT ISNULL(PAID,0) as PAID 
	FROM TBL_APPOINTMENT
	WHERE ID=1
) as varchar)





SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=1

SELECT CONVERT(datetime, '2015-07-16')

SELECT * FROM TBL_USER
SELECT * FROM TBL_USER_ROLE
UPDATE TBL_USER SET EMAIL = 'gundsamba@gmail.com' WHERE ID=1



SELECT 
	a.ID,
	a.DT, a.STARTTIME, a.ENDTIME, 
	b.NAME as ROOM_NAME, 
	a.CHAIRNUM, 
	a.NUM as APPNO, 
	c.LISTDATA as REQUESTTYPELIST,
	a.REQUESTMEMO,
	ISNULL(d.DIAGNOSTICSUMPRICE,0) as DIAGNOSTICSUMPRICE,
	f.LISTDATA as DIAGNOSTICTYPELIST,
	g.DESCRIPTION as DIAGNOSTICDESCRIPTION,
	LEFT(h.LNAME,1)+'.'+h.FNAME as DIAGNOSTICSENIORMECHANICAL_STAFFNAME,
	LEFT(i.LNAME,1)+'.'+i.FNAME as DIAGNOSTICSERVICECONSULTANT_STAFFNAME,
	ISNULL(j.SERVICESUMPRICE,0) as SERVICESUMPRICE,
	p.NAME as REPAIRTYPENAME,
	LEFT(q.LNAME,1)+'.'+q.FNAME as REPAIRMECHANICAL_STAFFNAME,
	LEFT(r.LNAME,1)+'.'+r.FNAME as REPAIRSENIORMECHANICAL_STAFFNAME,
	LEFT(s.LNAME,1)+'.'+s.FNAME as REPAIRSERVICECONSULTANT_STAFFNAME,
	k.LISTDATA as SERVICELIST,
	ISNULL(l.PARTSUMPRICE,0) as PARTSUMPRICE,
	m.LISTDATA as PARTLIST,
	ISNULL(n.SUMPRICE,0) as SUMPRICE
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_ROOM b ON a.ROOM_ID=b.ID 
INNER JOIN ( 
	select APPOINTMENT_ID, ( 
		select ' <span class="label bg-color-blueDark">'+ b.NAME+'</span>' 
		from TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_REQUESTTYPE b ON a.REQUESTTYPE_ID=b.ID 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) c ON a.ID=c.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as DIAGNOSTICSUMPRICE 
	FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID 
) d ON a.ID=d.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID, ( 
		select ' <span class="label bg-color-blueDark">'+ b.NAME+N' <i>/₮'+REPLACE(CONVERT(varchar, CAST(b.PRICE AS money), 1),'.00','')+'/</i></span>' 
		from TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) f ON a.ID=f.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_DIAGNOSTIC g ON a.ID=g.APPOINTMENT_ID 
LEFT JOIN TBL_STAFF h ON g.SENIORMECHANICAL_STAFFID=h.ID 
LEFT JOIN TBL_STAFF i ON g.SERVICECONSULTANT_STAFFID = i.ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SERVICESUMPRICE 
	FROM TBL_APPOINTMENT_SERVICE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID 
) j ON a.ID=j.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID, ( 
		select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.SERVICE_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.SERVICE_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
		from TBL_APPOINTMENT_SERVICE a 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) k ON a.ID=k.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as PARTSUMPRICE 
	FROM TBL_APPOINTMENT_PART a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID 
) l ON a.ID=l.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID, ( 
		select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.PART_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.PART_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
		from TBL_APPOINTMENT_PART a 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) m ON a.ID=m.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM(a.SUMPRICE) as SUMPRICE 
	FROM ( 
		SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as SUMPRICE 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID 
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID 
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID 
	) a 
	GROUP BY a.APPOINTMENT_ID 
) n ON a.ID=n.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_REPAIR o ON a.ID=o.APPOINTMENT_ID 
LEFT JOIN TBL_REPAIRTYPE p ON o.REPAIRTYPE_ID=p.ID 
LEFT JOIN TBL_STAFF q ON o.MECHANICAL_STAFFID = q.ID 
LEFT JOIN TBL_STAFF r ON o.SENIORMECHANICAL_STAFFID = r.ID 
LEFT JOIN TBL_STAFF s ON o.SERVICECONSULTANT_STAFFID = s.ID 
WHERE a.PATIENT_ID=4 
ORDER BY a.DT DESC, a.STARTTIME DESC, a.ENDTIME DESC


SELECT 
	a.ID,
	a.DT, a.STARTTIME, a.ENDTIME, 
	b.NAME as ROOM_NAME, 
	a.CHAIRNUM, 
	a.NUM as APPNO, 
	c.LISTDATA as REQUESTTYPELIST,
	a.REQUESTMEMO,
	ISNULL(d.DIAGNOSTICSUMPRICE,0) as DIAGNOSTICSUMPRICE,
	f.LISTDATA as DIAGNOSTICTYPELIST,
	g.DESCRIPTION as DIAGNOSTICDESCRIPTION,
	LEFT(h.LNAME,1)+'.'+h.FNAME as DIAGNOSTICSENIORMECHANICAL_STAFFNAME,
	LEFT(i.LNAME,1)+'.'+i.FNAME as DIAGNOSTICSERVICECONSULTANT_STAFFNAME,
	ISNULL(j.SERVICESUMPRICE,0) as SERVICESUMPRICE,
	p.NAME as REPAIRTYPENAME,
	LEFT(q.LNAME,1)+'.'+q.FNAME as REPAIRMECHANICAL_STAFFNAME,
	LEFT(r.LNAME,1)+'.'+r.FNAME as REPAIRSENIORMECHANICAL_STAFFNAME,
	LEFT(s.LNAME,1)+'.'+s.FNAME as REPAIRSERVICECONSULTANT_STAFFNAME,
	k.LISTDATA as SERVICELIST,
	ISNULL(l.PARTSUMPRICE,0) as PARTSUMPRICE,
	m.LISTDATA as PARTLIST,
	ISNULL(n.SUMPRICE,0) as SUMPRICE
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_ROOM b ON a.ROOM_ID=b.ID 
INNER JOIN ( 
	select APPOINTMENT_ID, ( 
		select ' <span class="label bg-color-blueDark">'+ b.NAME+'</span>' 
		from TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_REQUESTTYPE b ON a.REQUESTTYPE_ID=b.ID 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) c ON a.ID=c.APPOINTMENT_ID 
LEFT JOIN ( 
	--SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as DIAGNOSTICSUMPRICE 
	--FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
	--INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	--INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID 
	--WHERE b.PATIENT_ID=4 
	--GROUP BY a.APPOINTMENT_ID 

	SELECT a.APPOINTMENT_ID, SUM((a.PRICE*CNT)) as DIAGNOSTICSUMPRICE
	FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID
) d ON a.ID=d.APPOINTMENT_ID 
LEFT JOIN ( 
	--select APPOINTMENT_ID, ( 
	--	select ' <span class="label bg-color-blueDark">'+ b.NAME+N' <i>/₮'+REPLACE(CONVERT(varchar, CAST(b.PRICE AS money), 1),'.00','')+'/</i></span>' 
	--	from TBL_APPOINTMENT_DIAGNOSTICTYPE a 
	--	INNER JOIN TBL_DIAGNOSTICTYPE b ON a.DIAGNOSTICTYPE_ID=b.ID 
	--	where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	--) as LISTDATA 
	--from ( 
	--	SELECT DISTINCT a.APPOINTMENT_ID 
	--	FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
	--	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	--	WHERE b.PATIENT_ID=4 
	--)t 
	select APPOINTMENT_ID, ( 
		select ' <span class="label bg-color-blueDark">'+ a.NAME+N' <i>/₮'+REPLACE(CONVERT(varchar, CAST(a.PRICE AS money), 1),'.00','')+'/</i></span>' 
		from TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) f ON a.ID=f.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_DIAGNOSTIC g ON a.ID=g.APPOINTMENT_ID 
LEFT JOIN TBL_STAFF h ON g.SENIORMECHANICAL_STAFFID=h.ID 
LEFT JOIN TBL_STAFF i ON g.SERVICECONSULTANT_STAFFID = i.ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SERVICESUMPRICE 
	FROM TBL_APPOINTMENT_SERVICE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID 
) j ON a.ID=j.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID, ( 
		select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.SERVICE_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.SERVICE_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
		from TBL_APPOINTMENT_SERVICE a 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) k ON a.ID=k.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as PARTSUMPRICE 
	FROM TBL_APPOINTMENT_PART a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=4 
	GROUP BY a.APPOINTMENT_ID 
) l ON a.ID=l.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID, ( 
		select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST(a.PART_PRICE AS money), 1),'.00','')+N'</td><td class="text-right">₮'+REPLACE(CONVERT(varchar, CAST((a.PART_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
		from TBL_APPOINTMENT_PART a 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
	)t 
) m ON a.ID=m.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM(a.SUMPRICE) as SUMPRICE 
	FROM ( 
		--SELECT a.APPOINTMENT_ID, SUM(c.PRICE) as SUMPRICE 
		--FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		--INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		--INNER JOIN TBL_DIAGNOSTICTYPE c ON a.DIAGNOSTICTYPE_ID=c.ID 
		--WHERE b.PATIENT_ID=4 
		--GROUP BY a.APPOINTMENT_ID 
		SELECT a.APPOINTMENT_ID, SUM((a.PRICE*CNT)) as SUMPRICE
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID 
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=4 
		GROUP BY a.APPOINTMENT_ID 
	) a 
	GROUP BY a.APPOINTMENT_ID 
) n ON a.ID=n.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_REPAIR o ON a.ID=o.APPOINTMENT_ID 
LEFT JOIN TBL_REPAIRTYPE p ON o.REPAIRTYPE_ID=p.ID 
LEFT JOIN TBL_STAFF q ON o.MECHANICAL_STAFFID = q.ID 
LEFT JOIN TBL_STAFF r ON o.SENIORMECHANICAL_STAFFID = r.ID 
LEFT JOIN TBL_STAFF s ON o.SERVICECONSULTANT_STAFFID = s.ID 
WHERE a.PATIENT_ID=4 
ORDER BY a.DT DESC, a.STARTTIME DESC, a.ENDTIME DESC

SELECT HASHBYTES('md5', 'gundee')

SELECT * FROM TBL_USER
SELECT * FROM TBL_STAFF

SELECT a.ID, a.CODE, a.IDCARD, a.FNAME, a.LNAME, CASE WHEN a.GENDER=1 THEN N'Эр' ELSE N'Эм' END AS GENDER, ISNULL(a.PICTURE,'male.jpg') as PICTURE, b.NAME as POSITIONNAME, CASE WHEN a.ISACTIVE=1 THEN '<span class="label label-success">ACTIVE</span>' ELSE '<span class="label label-default">OFF</span>' END as TYPE 
FROM TBL_STAFF a 
INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
WHERE a.ID=1 ORDER BY CODE


SELECT COUNT(1) FROM TBL_USER WHERE ID=1 AND convert(varchar(MAX),DecryptByPassPhrase('nirvana', PASSWORD))='Q8H9RLKP'

SELECT EncryptByPassPhrase('nirvana', 'Q8H9RLKP' )

SELECT USERNAME, EMAIL, convert(varchar(MAX),DecryptByPassPhrase('nirvana', PASSWORD)), [PASSWORD] FROM TBL_USER

UPDATE TBL_USER SET PASSWORD = EncryptByPassPhrase('nirvana', '" + oldpass + "' )



SELECT a.ID, a.CHAIRNUM, b.AUTONO, b.TEL, a.DT, a.STARTTIME, a.ENDTIME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_ID 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID 
WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.DT BETWEEN '2015-07-23' AND '2015-07-24' AND a.ROOM_ID=1


SELECT * FROM TBL_USER

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE
SELECT * FROM TBL_REQUESTTYPE

SELECT * FROM TBL_USER_ROLE


SELECT * FROM TBL_CLINIC
SELECT * FROM TBL_ROLE
SELECT * FROM TBL_USER
SELECT * FROM TBL_USER_ROLE


SELECT a.USERNAME, a.EMAIL, a.USERDESCRIPTION, '*****' as [PASSWORD], 
FROM TBL_USER a
INNER JOIN TBL_USER_ROLE b ON a.ID=b.[USER_ID]
INNER JOIN TBL_ROLE c ON b.ROLE_ID=c.ID

SELECT a.USER_ID, a.ROLEIDLIST, a.ROLENAMELIST, b.USERNAME, b.EMAIL, b.USERDESCRIPTION, '*****' as [PASSWORD]
FROM (
	select USER_ID,
	stuff(
	(
		select ','+ CAST(a.ROLE_ID as nvarchar)
		from TBL_USER_ROLE a
		where a.USER_ID = t.USER_ID for XML path('')

	),1,1,'') as ROLEIDLIST,
	stuff(
	(
		select ','+ CAST(b.NAME as nvarchar)
		from TBL_USER_ROLE a
		INNER JOIN TBL_ROLE b ON a.ROLE_ID=b.ID
		where a.USER_ID = t.USER_ID for XML path('')

	),1,1,'') as ROLENAMELIST
	from ( 
		SELECT DISTINCT ID as USER_ID FROM TBL_USER WHERE CLINIC_ID=1
	 )t
) a
INNER JOIN TBL_USER b ON a.[USER_ID]=b.ID





 select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+a.DESCRIPTION+'</td><td class="text-center">'+CAST(a.CNT as varchar)+N'</td><td class="text-right">₮'+CAST(a.PART_PRICE as varchar)+'</td><td class="text-right">'+CAST((a.PART_PRICE*a.CNT) as varchar)+'</td></tr>' 
 from TBL_APPOINTMENT_PART a
  where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 




  select 
		AAPP,
		stuff(
		(
			SELECT ','+CAST(PPAA as varchar)
			FROM (
				SELECT 1 as AAPP, 'gundee11' as PPAA
				UNION ALL
				SELECT 1 as AAPP, 'gundee12' as PPAA
				UNION ALL
				SELECT 2 as AAPP, 'gundee21' as PPAA
				UNION ALL
				SELECT 2 as AAPP, 'gundee22' as PPAA
				UNION ALL
				SELECT 3 as AAPP, 'gundee31' as PPAA
			) 
			WHERE AAPP = t.AAPP for XML path('')
		),1,1,'') as LISTDATA
	from ( 
		SELECT 1 as AAPP
		UNION ALL
		SELECT 2 as AAPP
		UNION ALL
		SELECT 3 as AAPP
	)t 


select USER_ID,
	stuff(
	(
		select ','+ CAST(ROLE_ID as varchar)
		from TBL_USER_ROLE 
		where USER_ID = t.USER_ID for XML path('')

	),1,1,'') as LISTDATA
	from ( 
		SELECT DISTINCT ID as USER_ID FROM TBL_USER WHERE CLINIC_ID=1
	 )t

	 select USER_ID, USERNAME,
	stuff(
	(
		select ','+ CAST(ROLE_ID as varchar)
		from TBL_USER_ROLE 
		where USER_ID = t.USER_ID for XML path('')

	),1,1,'') as LISTDATA
	from ( 
		SELECT DISTINCT ID as USER_ID, USERNAME FROM TBL_USER WHERE ID=3
	 )t
	 
	 SELECT * FROM TBL_PATIENT
	 SELECT * FROM TBL_APPOINTMENT

	 SELECT a.ID as APPOINTMENTID, a.NUM as APPOINTMENTNUM, b.TYPE as PATIENTTYPE, b.NAME as PATIENTNAME, c.NAME as MARKNAME, b.AUTONO, b.TRANSMISSIONTYPE, b.FUELTYPE, a.REQUESTMEMO
	 FROM TBL_APPOINTMENT a
	 INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
	 INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID
	 WHERE a.ID=10006

	 
	 SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE
	 SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE
	 SELECT * FROM TBL_APPOINTMENT_REPAIR
	 SELECT * FROM TBL_APPOINTMENT_PART
	 SELECT * FROM TBL_DIAGNOSTICTYPE
	 SELECT * FROM TBL_REPAIRTYPE
	 SELECT * FROM TBL_SERVICE_TYPE

	 SELECT LEFT('gundee',2)

	 SELECT DIAGNOSTICTYPE_ID FROM TBL_APPOINTMENT_DIAGNOSTICTYPE WHERE APPOINTMENT_ID=20011
	 SELECT a.DESCRIPTION, LEFT(b.LNAME,1)+'. '+b.FNAME as SENIORMECHNICAL_NAME,  LEFT(c.LNAME,1)+'. '+c.FNAME as SERVICECONSULTANT_NAME
	 FROM TBL_APPOINTMENT_DIAGNOSTIC a
	 INNER JOIN TBL_STAFF b ON a.SENIORMECHANICAL_STAFFID=b.ID
	 INNER JOIN TBL_STAFF c ON a.SERVICECONSULTANT_STAFFID=c.ID
	 WHERE a.APPOINTMENT_ID=1

	 SELECT a.REPAIRTYPE_ID, LEFT(b.LNAME,1)+'. '+b.FNAME as MECHNICAL_NAME, LEFT(c.LNAME,1)+'. '+c.FNAME as SENIORMECHNICAL_NAME,  LEFT(d.LNAME,1)+'. '+d.FNAME as SERVICECONSULTANT_NAME
	 FROM TBL_APPOINTMENT_REPAIR a
	 INNER JOIN TBL_STAFF b ON a.MECHANICAL_STAFFID=b.ID
	 INNER JOIN TBL_STAFF c ON a.SENIORMECHANICAL_STAFFID=c.ID
	 INNER JOIN TBL_STAFF d ON a.SERVICECONSULTANT_STAFFID=d.ID
	 WHERE a.APPOINTMENT_ID=1

	 SELECT PART_NAME, CNT, DESCRIPTION
	 FROM TBL_APPOINTMENT_PART
	 WHERE APPOINTMENT_ID=1



SELECT a.ID, a.CHAIRNUM, b.AUTONO, b.TEL, a.DT, a.STARTTIME, a.ENDTIME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_ID, a.APPOINTMENTTYPE FROM TBL_APPOINTMENT a INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.DT BETWEEN '2015-10-15' AND '2015-10-15' AND a.ROOM_ID=1

SELECT * FROM TBL_REQUESTTYPE 

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC

SELECT * FROM TBL_USER

SELECT a.ID as APPOINTMENTID, a.NUM as APPOINTMENTNUM, b.TYPE as PATIENTTYPE, b.NAME as PATIENTNAME, c.NAME as MARKNAME, b.AUTONO, b.TRANSMISSIONTYPE, b.FUELTYPE, a.REQUESTMEMO, a.CHAIRNUM, LEFT(a.STARTTIME,2) as STARTTIME, RIGHT(a.STARTTIME,2) as STARTMINUTE, LEFT(a.ENDTIME,2) as ENDTIME, RIGHT(a.ENDTIME,2) as ENDMINUTE 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
WHERE a.ID=20016

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_STAFF

SELECT 
	a.ID as APPOINTMENTID, 
	a.NUM as APPOINTMENTNUM, 
	a.APPOINTMENTTYPE, 
	a.DT,
	LEFT(a.STARTTIME,2) as STARTTIME, 
	RIGHT(a.STARTTIME,2) as STARTMINUTE,
	b.NAME as PATIENTNAME,
	CASE WHEN b.TEL2 IS NULL THEN b.TEL ELSE b.TEL+', '+b.TEL2 END as TEL,
	b.TYPE as PATIENTTYPE,
	b.ADDRESS,
	b.EMERGENCYTEL,
	b.EMERGENCYTELTYPE,
	b.EMERGENCYPERSONNAME,
	a.REQUESTMEMO,
	a.ISWASHING,
	a.ISGETPART,
	c.NAME as MARKNAME, 
	b.VINNO,
	b.TRANSMISSIONTYPE,
	b.AUTONO, 
	a.MILEAGE,
	b.PRODUCEDYEAR,
	b.FUELTYPE, 
	LEFT(d.LNAME,1)+'. '+d.FNAME as STAFFNAME
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
LEFT JOIN TBL_STAFF d ON a.SUBMIT_STAFFID=d.ID
WHERE a.ID=20016

SELECT * FROM TBL_PATIENT

SELECT ISNULL(CODE,'')+'~'+ISNULL(NAME,'')+'~'+CAST(TYPE as varchar)+'~'+ISNULL(TEL,'')+'~'+ISNULL(TEL2,'')+'~'+ISNULL(EMAIL,'')+'~'+ISNULL(ADDRESS,'')+'~'+CAST(MARK_ID as varchar)+'~'+CAST(PRODUCEDYEAR as varchar)+'~'+ISNULL(AUTONO,'')+'~'+ISNULL(VINNO,'')+'~'+CAST(FUELTYPE as varchar)+'~'+CAST(TRANSMISSIONTYPE as varchar)+'~'+ISNULL(CAST(EMERGENCYTEL as varchar),'')+'~'+ISNULL(CAST(EMERGENCYTELTYPE as varchar),'')+'~'+ISNULL(CAST(EMERGENCYPERSONNAME as varchar),'') FROM TBL_PATIENT WHERE ID=1



SELECT * FROM TBL_APPOINTMENT ORDER BY ID DESC
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_AUTOMARK
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE --ONOSHLOGOO
SELECT * FROM TBL_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_REPAIR --ЗАСВАР ҮЙЛЧИЛГЭЭНИЙ ТӨРӨЛ
SELECT * FROM TBL_APPOINTMENT_SERVICE --ЗАСВАРЫН БҮЛЭГ
SELECT * FROM TBL_APPOINTMENT_PART --СЭЛБЭГИЙН БҮЛЭГ

SELECT 
	c.ID as MARK_ID,
	c.NAME as MARK_NAME,
	a.ID as APPOINTMENT_ID,
	f.NAME as DIAGNOSTIC_NAME,
	ISNULL(d.PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
FROM TBL_APPOINTMENT a
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE d ON a.ID=d.APPOINTMENT_ID
LEFT JOIN TBL_DIAGNOSTICTYPE f ON d.DIAGNOSTICTYPE_ID=f.ID
WHERE a.DT BETWEEN '2015-10-15' AND '2015-10-16'

SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, a.DIAGNOSTIC_NAME, SUM(a.TOTALPRICE) as TOTALPRICE
FROM (
	SELECT 
		c.ID as MARK_ID,
		c.NAME as MARK_NAME,
		a.ID as APPOINTMENT_ID,
		f.NAME as DIAGNOSTIC_NAME,
		ISNULL(d.PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
	INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
	INNER JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE d ON a.ID=d.APPOINTMENT_ID
	INNER JOIN TBL_DIAGNOSTICTYPE f ON d.DIAGNOSTICTYPE_ID=f.ID
	WHERE a.DT BETWEEN '2015-10-15' AND '2015-10-16'
) a
GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, a.DIAGNOSTIC_NAME

SELECT NAME FROM TBL_DIAGNOSTICTYPE ORDER BY ID


-- rprt1tab5t1
DECLARE @cols AS NVARCHAR(MAX),
@cols2 AS NVARCHAR(MAX),
@cols3 AS NVARCHAR(MAX),
    @query  AS NVARCHAR(MAX);

SET @cols = STUFF((
				SELECT ',' + QUOTENAME(c.NAME)
				FROM TBL_DIAGNOSTICTYPE c
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols2 = STUFF((
				SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME)
				FROM TBL_DIAGNOSTICTYPE c
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols3 = STUFF((
				SELECT ',a.' + QUOTENAME(c.NAME)
				FROM TBL_DIAGNOSTICTYPE c
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

set @query = '
SELECT ROW_NUMBER() OVER(ORDER BY a.TOTALPRICE DESC) AS RW, a.MARK_ID, a.MARK_NAME, APPOINTMENT_CNT, '+@cols3+', TOTALPRICE
FROM (
SELECT a.MARK_ID, a.MARK_NAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
FROM (
	SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
	FROM (	
		SELECT MARK_ID, MARK_NAME, APPOINTMENT_ID, ' + @cols + ', TOTALPRICE 
		FROM (
			SELECT 
				c.ID as MARK_ID,
				c.NAME as MARK_NAME,
				a.ID as APPOINTMENT_ID,
				f.NAME as DIAGNOSTIC_NAME,
				ISNULL(d.PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
			FROM TBL_APPOINTMENT a
			INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
			INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
			LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE d ON a.ID=d.APPOINTMENT_ID
			LEFT JOIN TBL_DIAGNOSTICTYPE f ON d.DIAGNOSTICTYPE_ID=f.ID
			WHERE a.DT BETWEEN ''2015-10-15'' AND ''2015-10-16''
		) x
		pivot 
		(
				COUNT(DIAGNOSTIC_NAME)
			for DIAGNOSTIC_NAME in (' + @cols + ')
		) p
	) a
	GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID
) a
GROUP BY a.MARK_ID, a.MARK_NAME
) a
ORDER BY a.TOTALPRICE DESC'
execute(@query)

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_REPAIRTYPE

	SELECT 
		c.ID as MARK_ID,
		c.NAME as MARK_NAME,
		a.ID as APPOINTMENT_ID,
		f.NAME as REPAIR_NAME
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
	INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
	LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.ID=d.APPOINTMENT_ID
	LEFT JOIN TBL_REPAIRTYPE f ON d.REPAIRTYPE_ID=f.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-10-15' AND '2015-10-16'

-- rprt1tab5t2  type1
DECLARE @cols AS NVARCHAR(MAX),
@cols2 AS NVARCHAR(MAX),
@cols3 AS NVARCHAR(MAX),
    @query  AS NVARCHAR(MAX);

SET @cols = STUFF((
				SELECT ',' + QUOTENAME(c.NAME)
				FROM TBL_REPAIRTYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols2 = STUFF((
				SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME)
				FROM TBL_REPAIRTYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols3 = STUFF((
				SELECT ',a.' + QUOTENAME(c.NAME)
				FROM TBL_REPAIRTYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

set @query = '
SELECT ROW_NUMBER() OVER(ORDER BY a.MARK_NAME ASC) AS RW, a.MARK_ID, a.MARK_NAME, APPOINTMENT_CNT, '+@cols3+'
FROM (
SELECT a.MARK_ID, a.MARK_NAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, '+@cols2+'
FROM (
	SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, '+@cols2+'
	FROM (	
		SELECT MARK_ID, MARK_NAME, APPOINTMENT_ID, ' + @cols + ' 
		FROM (
			SELECT 
				c.ID as MARK_ID,
				c.NAME as MARK_NAME,
				a.ID as APPOINTMENT_ID,
				f.NAME as REPAIR_NAME
			FROM TBL_APPOINTMENT a
			INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
			INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
			LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.ID=d.APPOINTMENT_ID
			LEFT JOIN TBL_REPAIRTYPE f ON d.REPAIRTYPE_ID=f.ID
			WHERE a.CLINIC_ID=1 AND a.DT BETWEEN ''2015-10-15'' AND ''2015-10-16''
		) x
		pivot 
		(
				COUNT(REPAIR_NAME)
			for REPAIR_NAME in (' + @cols + ')
		) p
	) a
	GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID
) a
GROUP BY a.MARK_ID, a.MARK_NAME
) a
ORDER BY a.MARK_NAME ASC'
execute(@query)


SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_SERVICE
SELECT * FROM TBL_SERVICE_TYPE

	SELECT 
		c.ID as MARK_ID,
		c.NAME as MARK_NAME,
		a.ID as APPOINTMENT_ID,
		g.NAME as SERVICE_TYPE_NAME,
		ISNULL(d.SERVICE_PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
	INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
	LEFT JOIN TBL_APPOINTMENT_SERVICE d ON a.ID=d.APPOINTMENT_ID
	LEFT JOIN TBL_SERVICE f ON d.SERVICE_ID=f.ID
	LEFT JOIN TBL_SERVICE_TYPE g ON f.SERVICE_TYPE_ID=g.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-10-15' AND '2015-10-16'

-- rprt1tab5t2  type2
DECLARE @cols AS NVARCHAR(MAX),
@cols2 AS NVARCHAR(MAX),
@cols3 AS NVARCHAR(MAX),
    @query  AS NVARCHAR(MAX);

SET @cols = STUFF((
				SELECT ',' + QUOTENAME(c.NAME)
				FROM TBL_SERVICE_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols2 = STUFF((
				SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME)
				FROM TBL_SERVICE_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols3 = STUFF((
				SELECT ',a.' + QUOTENAME(c.NAME)
				FROM TBL_SERVICE_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

set @query = '
SELECT ROW_NUMBER() OVER(ORDER BY a.TOTALPRICE DESC) AS RW, a.MARK_ID, a.MARK_NAME, APPOINTMENT_CNT, '+@cols3+', TOTALPRICE
FROM (
SELECT a.MARK_ID, a.MARK_NAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
FROM (
	SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
	FROM (	
		SELECT MARK_ID, MARK_NAME, APPOINTMENT_ID, ' + @cols + ', TOTALPRICE 
		FROM (
			SELECT 
				c.ID as MARK_ID,
				c.NAME as MARK_NAME,
				a.ID as APPOINTMENT_ID,
				g.NAME as SERVICE_TYPE_NAME,
				ISNULL(d.SERVICE_PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
			FROM TBL_APPOINTMENT a
			INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
			INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
			LEFT JOIN TBL_APPOINTMENT_SERVICE d ON a.ID=d.APPOINTMENT_ID
			LEFT JOIN TBL_SERVICE f ON d.SERVICE_ID=f.ID
			LEFT JOIN TBL_SERVICE_TYPE g ON f.SERVICE_TYPE_ID=g.ID
			WHERE a.CLINIC_ID=1 AND a.DT BETWEEN ''2015-10-15'' AND ''2015-10-16''
		) x
		pivot 
		(
				COUNT(SERVICE_TYPE_NAME)
			for SERVICE_TYPE_NAME in (' + @cols + ')
		) p
	) a
	GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID
) a
GROUP BY a.MARK_ID, a.MARK_NAME
) a
ORDER BY a.TOTALPRICE DESC'
execute(@query)


SELECT * FROM TBL_APPOINTMENT_PART
SELECT * FROM TBL_PART_TYPE

	SELECT 
		c.ID as MARK_ID,
		c.NAME as MARK_NAME,
		a.ID as APPOINTMENT_ID,
		g.NAME as SERVICE_PART_NAME,
		ISNULL(d.PART_PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
	FROM TBL_APPOINTMENT a
	INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
	INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
	LEFT JOIN TBL_APPOINTMENT_PART d ON a.ID=d.APPOINTMENT_ID
	LEFT JOIN TBL_PART f ON d.PART_ID=f.ID
	LEFT JOIN TBL_PART_TYPE g ON f.PART_TYPE_ID=g.ID
	WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2015-10-15' AND '2015-10-16'

-- rprt1tab5t3
DECLARE @cols AS NVARCHAR(MAX),
@cols2 AS NVARCHAR(MAX),
@cols3 AS NVARCHAR(MAX),
    @query  AS NVARCHAR(MAX);

SET @cols = STUFF((
				SELECT ',' + QUOTENAME(c.NAME)
				FROM TBL_PART_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols2 = STUFF((
				SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME)
				FROM TBL_PART_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
SET @cols3 = STUFF((
				SELECT ',a.' + QUOTENAME(c.NAME)
				FROM TBL_PART_TYPE c
				WHERE c.CLINIC_ID=1
				ORDER BY c.ID
				FOR XML PATH(''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')

set @query = '
SELECT ROW_NUMBER() OVER(ORDER BY a.TOTALPRICE DESC) AS RW, a.MARK_ID, a.MARK_NAME, APPOINTMENT_CNT, '+@cols3+', TOTALPRICE
FROM (
SELECT a.MARK_ID, a.MARK_NAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
FROM (
	SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, '+@cols2+', SUM(a.TOTALPRICE) as TOTALPRICE
	FROM (	
		SELECT MARK_ID, MARK_NAME, APPOINTMENT_ID, ' + @cols + ', TOTALPRICE 
		FROM (
			SELECT 
				c.ID as MARK_ID,
				c.NAME as MARK_NAME,
				a.ID as APPOINTMENT_ID,
				g.NAME as SERVICE_PART_NAME,
				ISNULL(d.PART_PRICE,0)*ISNULL(d.CNT,0) as TOTALPRICE
			FROM TBL_APPOINTMENT a
			INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID 
			INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID 
			LEFT JOIN TBL_APPOINTMENT_PART d ON a.ID=d.APPOINTMENT_ID
			LEFT JOIN TBL_PART f ON d.PART_ID=f.ID
			LEFT JOIN TBL_PART_TYPE g ON f.PART_TYPE_ID=g.ID
			WHERE a.CLINIC_ID=1 AND a.DT BETWEEN ''2015-10-15'' AND ''2015-10-16''
		) x
		pivot 
		(
				COUNT(SERVICE_PART_NAME)
			for SERVICE_PART_NAME in (' + @cols + ')
		) p
	) a
	GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID
) a
GROUP BY a.MARK_ID, a.MARK_NAME
) a
ORDER BY a.TOTALPRICE DESC'
execute(@query)


SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_AUTOMARK
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE --ONOSHLOGOO
SELECT * FROM TBL_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_REPAIR --ЗАСВАР ҮЙЛЧИЛГЭЭНИЙ ТӨРӨЛ
SELECT * FROM TBL_APPOINTMENT_SERVICE --ЗАСВАРЫН БҮЛЭГ
SELECT * FROM TBL_APPOINTMENT_PART --СЭЛБЭГИЙН БҮЛЭГ

SELECT * FROM TBL_PART_TYPE

SELECT ID, CODE, NAME, [DESCRIPTION], PRICE, PART_TYPE_ID FROM TBL_PART WHERE CLINIC_ID=1 ORDER BY CODE

SELECT * FROM TBL_SERVICE_TYPE

SELECT * FROM TBL_AUTOMARK ORDER BY ID

SELECT * FROM TBL_PATIENT

DROP TABLE DEMO_DAVHAR_TBL_PATIENT;
CREATE TABLE DEMO_DAVHAR_TBL_PATIENT(
	CLINIC_ID numeric(18,0),
	CODE varchar(10),
	NAME nvarchar(255),
	[TYPE] numeric(1,0),
	TEL varchar(15),
	TEL2 varchar(15),
	EMAIL varchar(100),
	[ADDRESS] nvarchar(255),
	MARK_ID numeric(18,0),
	PRODUCEDYEAR numeric(4,0),
	AUTONO nvarchar(8),
	VINNO nvarchar(50),
	FUELTYPE numeric(1,0),
	TRANSMISSIONTYPE numeric(1,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime,
	EMERGENCYTEL numeric(15,0),
	EMERGENCYTELTYPE numeric(1,0),
	EMERGENCYPERSONNAME nvarchar(200),
	ZAALTTYPE numeric(1,0)
);

DROP TABLE DEMO_UNIQE_TBL_PATIENT;
CREATE TABLE DEMO_UNIQE_TBL_PATIENT(
	CLINIC_ID numeric(18,0),
	CODE varchar(10),
	NAME nvarchar(255),
	[TYPE] numeric(1,0),
	TEL varchar(15),
	TEL2 varchar(15),
	EMAIL varchar(100),
	[ADDRESS] nvarchar(255),
	MARK_ID numeric(18,0),
	PRODUCEDYEAR numeric(4,0),
	AUTONO nvarchar(8),
	VINNO nvarchar(50),
	FUELTYPE numeric(1,0),
	TRANSMISSIONTYPE numeric(1,0),
	CREATED_STAFFID numeric(18,0),
	CREATED_DATE datetime,
	UPDATED_STAFFID numeric(18,0),
	UPDATED_DATE datetime,
	EMERGENCYTEL numeric(15,0),
	EMERGENCYTELTYPE numeric(1,0),
	EMERGENCYPERSONNAME nvarchar(200),
	ZAALTTYPE numeric(1,0)
);

INSERT INTO DEMO_UNIQE_TBL_PATIENT (
	CLINIC_ID,
	CODE,
	NAME,
	[TYPE],
	TEL,
	TEL2,
	EMAIL,
	[ADDRESS],
	MARK_ID,
	PRODUCEDYEAR,
	AUTONO,
	VINNO,
	FUELTYPE,
	TRANSMISSIONTYPE,
	CREATED_STAFFID,
	CREATED_DATE,
	UPDATED_STAFFID,
	UPDATED_DATE,
	EMERGENCYTEL,
	EMERGENCYTELTYPE,
	EMERGENCYPERSONNAME,
	ZAALTTYPE
)
SELECT 
	a.CLINIC_ID,
	a.CODE,
	a.NAME,
	a.[TYPE],
	a.TEL,
	a.TEL2,
	a.EMAIL,
	a.[ADDRESS],
	a.MARK_ID,
	a.PRODUCEDYEAR,
	a.AUTONO,
	a.VINNO,
	a.FUELTYPE,
	a.TRANSMISSIONTYPE,
	a.CREATED_STAFFID,
	a.CREATED_DATE,
	a.UPDATED_STAFFID,
	a.UPDATED_DATE,
	a.EMERGENCYTEL,
	a.EMERGENCYTELTYPE,
	a.EMERGENCYPERSONNAME,
	a.ZAALTTYPE
FROM DEMO_DAVHAR_TBL_PATIENT a
INNER JOIN (
	SELECT MIN(CODE) as MINCODE, AUTONO FROM DEMO_DAVHAR_TBL_PATIENT GROUP BY AUTONO
) b ON a.CODE=b.MINCODE AND a.AUTONO=b.AUTONO;

INSERT INTO TBL_PATIENT (
	CLINIC_ID,
	CODE,
	NAME,
	[TYPE],
	TEL,
	TEL2,
	EMAIL,
	[ADDRESS],
	MARK_ID,
	PRODUCEDYEAR,
	AUTONO,
	VINNO,
	FUELTYPE,
	TRANSMISSIONTYPE,
	CREATED_STAFFID,
	CREATED_DATE,
	UPDATED_STAFFID,
	UPDATED_DATE,
	EMERGENCYTEL,
	EMERGENCYTELTYPE,
	EMERGENCYPERSONNAME,
	ZAALTTYPE
)
SELECT 
	b.CLINIC_ID,
	b.CODE,
	b.NAME,
	b.[TYPE],
	b.TEL,
	b.TEL2,
	b.EMAIL,
	b.[ADDRESS],
	b.MARK_ID,
	b.PRODUCEDYEAR,
	b.AUTONO,
	b.VINNO,
	b.FUELTYPE,
	b.TRANSMISSIONTYPE,
	b.CREATED_STAFFID,
	b.CREATED_DATE,
	b.UPDATED_STAFFID,
	b.UPDATED_DATE,
	b.EMERGENCYTEL,
	b.EMERGENCYTELTYPE,
	b.EMERGENCYPERSONNAME,
	b.ZAALTTYPE
FROM TBL_PATIENT a
RIGHT JOIN DEMO_UNIQE_TBL_PATIENT b ON a.AUTONO=b.AUTONO
WHERE a.AUTONO IS NULL







SELECT a.*
FROM TBL_PATIENT a
RIGHT JOIN DEMO_UNIQE_TBL_PATIENT b ON a.AUTONO=b.AUTONO
WHERE a.AUTONO IS NOT NULL


SELECT * FROM TBL_PATIENT

SELECT AUTONO FROM TBL_PATIENT ORDER BY AUTONO


SELECT AUTONO FROM DEMO_DAVHAR_TBL_PATIENT --ROWS-1804
SELECT MIN(CODE) as MINCODE, AUTONO FROM DEMO_DAVHAR_TBL_PATIENT GROUP BY AUTONO --ROWS-1661

SELECT * FROM DEMO_DAVHAR_TBL_PATIENT WHERE AUTONO = N'5275 УНА' ORDER BY CODE 

SELECT * FROM TBL_PATIENT

SELECT * FROM TBL_PATIENT WHERE AUTONO = N'0066 УБР'  ORDER BY AUTONO 

SELECT CAST(ID as varchar)+'~'+ISNULL(NAME,'')+'~'+CAST(TYPE as varchar)+'~'+ISNULL(TEL,'')+'~'+ISNULL(TEL2,'')+'~'+ISNULL(EMAIL,'')+'~'+ISNULL(ADDRESS,'')+'~'+CAST(MARK_ID as varchar)+'~'+ISNULL(CAST(PRODUCEDYEAR as varchar),'')+'~'+ISNULL(AUTONO,'')+'~'+ISNULL(VINNO,'')+'~'+CAST(FUELTYPE as varchar)+'~'+CAST(TRANSMISSIONTYPE as varchar)+'~'+ISNULL(CAST(EMERGENCYTEL as varchar),'')+'~'+ISNULL(CAST(EMERGENCYTELTYPE as varchar),'')+'~'+ISNULL(CAST(EMERGENCYPERSONNAME as varchar),'')+'~'+ISNULL(CAST(ZAALTTYPE as varchar),'') 
FROM TBL_PATIENT WHERE AUTONO = N'0066 УБР'


SELECT 
	CAST(ID as varchar)
	+'~'+ISNULL(NAME,'')
	+'~'+CAST(TYPE as varchar)
	+'~'+ISNULL(TEL,'')
	+'~'+ISNULL(TEL2,'')
	+'~'+ISNULL(EMAIL,'')
	+'~'+ISNULL(ADDRESS,'')
	+'~'+CAST(MARK_ID as varchar)
	+'~'+CAST(PRODUCEDYEAR as varchar)
FROM TBL_PATIENT WHERE AUTONO = N'0066 УБР'

SELECT * FROM TBL_APPOINTMENT

SELECT * FROM TBL_APPOINTMENT_TYPE

SELECT * FROM TBL_SERVICE
SELECT * FROM TBL_SERVICEDISC
SELECT * FROM TBL_SERVICE_TYPE

SELECT * FROM TBL_PART

SELECT
	a.SERVICE_ID, 
	b.SERVICE_TYPE_ID,
	c.NAME as SERVICE_TYPE,
	b.CODE+' | '+b.NAME as [SERVICE],
	b.PRICE,
	a.BEGINDATE+' - '+a.ENDDATE as [BETWEENDATE],
	a.PER,
	ROUND((ISNULL(b.PRICE,0)/100)*ISNULL(a.PER,0),0) as DISCPRICE,
	CASE WHEN d.SERVICE_ID is not null THEN 'class="danger"' ELSE null END as ISACTIVE
FROM TBL_SERVICEDISC a
INNER JOIN TBL_SERVICE b ON a.SERVICE_ID=b.ID
INNER JOIN TBL_SERVICE_TYPE c ON b.SERVICE_TYPE_ID=c.ID AND b.CLINIC_ID=c.CLINIC_ID
LEFT JOIN (
	SELECT SERVICE_ID FROM TBL_SERVICEDISC WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE)
) d ON a.SERVICE_ID=d.SERVICE_ID
WHERE b.CLINIC_ID=1
ORDER BY b.SERVICE_TYPE_ID, b.CODE

SELECT SERVICE_ID FROM TBL_SERVICEDISC WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE)


SELECT ID, CODE+' | '+NAME as [SERVICE] FROM TBL_SERVICE WHERE CLINIC_ID=1 AND SERVICE_TYPE_ID

SELECT a.PART_ID, b.PART_TYPE_ID, c.NAME as PART_TYPE, b.CODE + ' | ' + b.NAME as [PART], b.PRICE, a.BEGINDATE + ' - ' + a.ENDDATE as [BETWEENDATE], a.PER, ROUND((ISNULL(b.PRICE, 0) / 100) * ISNULL(a.PER, 0), 0) as DISCPRICE, 
CASE WHEN d.PART_ID is not null THEN 'class=\"danger\"' ELSE null END as ISACTIVE 
FROM TBL_PARTDISC a 
INNER JOIN TBL_PART b ON a.PART_ID = b.ID 
INNER JOIN TBL_PART_TYPE c ON b.PART_TYPE_ID = c.ID AND b.CLINIC_ID = c.CLINIC_ID 
LEFT JOIN ( 
	SELECT PART_ID 
	FROM TBL_PARTDISC 
	WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE) 
) d ON a.PART_ID = d.PART_ID 
WHERE b.CLINIC_ID = 1 
ORDER BY b.PART_TYPE_ID, b.CODE

SELECT * FROM TBL_PARTDISC

SELECT 
	CAST((SELECT ISNULL(SUM(a.TOTALPRICE),0) as TOTALPRICE 
	FROM ( 
		SELECT a.PRICE*CNT as TOTALPRICE 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		WHERE a.APPOINTMENT_ID=40015 
		UNION ALL 
		SELECT a.SERVICE_PRICE*CNT as TOTALPRICE 
		FROM TBL_APPOINTMENT_SERVICE a 
		WHERE a.APPOINTMENT_ID=40015 
		UNION ALL 
		SELECT a.PART_PRICE*CNT as TOTALPRICE 
		FROM TBL_APPOINTMENT_PART a 
		WHERE a.APPOINTMENT_ID=40015 
	) a 
	) as varchar)
	+'~'+CAST(( SELECT ISNULL(DISCOUNT,0) as DISCOUNT 
	FROM TBL_APPOINTMENT 
	WHERE ID=40015 
	) as varchar)
	+'~'+CAST(( SELECT ISNULL(SUM(a.ULDEGDEL),0) as ULDEGDEL 
	FROM ( 
		SELECT a.APPOINTMENT_ID, (a.TOTALPRICE-ISNULL(b.DISCOUNT,0))-ISNULL(b.PAID,0) as ULDEGDEL 
		FROM ( 
			SELECT a.APPOINTMENT_ID, SUM(a.TOTALPRICE) as TOTALPRICE 
			FROM ( 
				SELECT a.APPOINTMENT_ID, a.PRICE*CNT as TOTALPRICE 
				FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
				WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
				UNION ALL 
				SELECT a.APPOINTMENT_ID, a.SERVICE_PRICE*CNT as TOTALPRICE 
				FROM TBL_APPOINTMENT_SERVICE a 
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
				WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
				UNION ALL 
				SELECT a.APPOINTMENT_ID, a.PART_PRICE*CNT as TOTALPRICE 
				FROM TBL_APPOINTMENT_PART a 
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
				WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
			) a 
			GROUP BY a.APPOINTMENT_ID 
		) a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	) a ) as varchar)
	+'~'+CAST(( SELECT ISNULL(PAID,0) as PAID 
	FROM TBL_APPOINTMENT 
	WHERE ID=40015 ) as varchar)



	SELECT a.APPOINTMENT_ID, ((a.SERVICE_PRICE*a.CNT)/100)*a.DISCPER as DISCPRICE
	FROM TBL_APPOINTMENT_SERVICE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
	WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015))

	SELECT ISNULL(DISCOUNT,0) as DISCOUNT 
	FROM TBL_APPOINTMENT 
	WHERE ID=40015 


	SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE
	SELECT * FROM TBL_APPOINTMENT_SERVICE
	SELECT * FROM TBL_SERVICEDISC
	SELECT * FROM TBL_PARTDISC
	SELECT * FROM TBL_SERVICE

	SELECT ISNULL(b.PER,0) as DISCPER
	FROM TBL_SERVICE a
	LEFT JOIN (
		SELECT SERVICE_ID, PER 
		FROM TBL_SERVICEDISC 
		WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE) 
	) b ON a.ID=b.SERVICE_ID
	WHERE a.ID=2

	SELECT ISNULL(b.PER,0) as DISCPER
	FROM TBL_PART a
	LEFT JOIN (
		SELECT PART_ID, PER 
		FROM TBL_PARTDISC 
		WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE) 
	) b ON a.ID=b.PART_ID
	WHERE a.ID=259


	SELECT a.NAME, a.PRICE, a.CNT, a.PRICE*CNT as TOTALPRICE, ISNULL(a.DISCPER, 0) as DISCPER, ROUND(((a.PRICE*CNT)/100)*ISNULL(a.DISCPER, 0),0) as DISCPRICE, (a.PRICE*CNT)-(ROUND(((a.PRICE*CNT)/100)*ISNULL(a.DISCPER, 0),0)) as PAYPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a WHERE a.APPOINTMENT_ID=40015 ORDER BY a.DIAGNOSTICTYPE_ID
	SELECT a.SERVICE_NAME as NAME, a.SERVICE_PRICE as PRICE, a.CNT, a.SERVICE_PRICE*CNT as TOTALPRICE, ISNULL(a.DISCPER, 0) as DISCPER, ROUND(((a.PRICE*CNT)/100)*ISNULL(a.DISCPER, 0),0) as DISCPRICE, (a.PRICE*CNT)-(ROUND(((a.PRICE*CNT)/100)*ISNULL(a.DISCPER, 0),0)) as PAYPRICE 
	FROM TBL_APPOINTMENT_SERVICE a 
	WHERE a.APPOINTMENT_ID=40015


	SELECT ISNULL(SUM(a.TOTALPRICE),0) as TOTALPRICE FROM ( SELECT (a.PRICE*a.CNT)-(ROUND(((a.PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0),0)) as TOTALPRICE FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a WHERE a.APPOINTMENT_ID=40015 UNION ALL SELECT (a.SERVICE_PRICE*a.CNT)-(ROUND(((a.SERVICE_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0),0)) as TOTALPRICE FROM TBL_APPOINTMENT_SERVICE a WHERE a.APPOINTMENT_ID=40015 UNION ALL SELECT (a.PART_PRICE*a.CNT)-(ROUND(((a.PART_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0),0)) as TOTALPRICE FROM TBL_APPOINTMENT_PART a WHERE a.APPOINTMENT_ID=40015 ) a

	SELECT ISNULL(SUM(a.DISCOUNT),0) as DISCOUNT 
	FROM ( 
		SELECT CEILING(((a.PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0)) as DISCOUNT 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		WHERE a.APPOINTMENT_ID=40015 
		UNION ALL 
		SELECT (ROUND(((a.SERVICE_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0),0)) as DISCOUNT 
		FROM TBL_APPOINTMENT_SERVICE a 
		WHERE a.APPOINTMENT_ID=40015 
		UNION ALL 
		SELECT (ROUND(((a.PART_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0),0)) as DISCOUNT 
		FROM TBL_APPOINTMENT_PART a 
		WHERE a.APPOINTMENT_ID=40015 
		UNION ALL 
		SELECT ISNULL(DISCOUNT,0) as DISCOUNT 
		FROM TBL_APPOINTMENT 
		WHERE ID=40015 
	) a

	SELECT (CEILING(((a.SERVICE_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0))) as DISCOUNT 
		FROM TBL_APPOINTMENT_SERVICE a 
		WHERE a.APPOINTMENT_ID=40015 

		SELECT (a.SERVICE_PRICE*a.CNT) as DISCOUNT 
		FROM TBL_APPOINTMENT_SERVICE a 
		WHERE a.APPOINTMENT_ID=40015 



SELECT ISNULL(SUM(a.ULDEGDEL),0) as ULDEGDEL 
FROM ( 
	SELECT a.APPOINTMENT_ID, (a.TOTALPRICE-ISNULL(b.DISCOUNT,0))-ISNULL(b.PAID,0) as ULDEGDEL 
	FROM ( 
		SELECT a.APPOINTMENT_ID, SUM(a.TOTALPRICE) as TOTALPRICE 
		FROM ( 
			SELECT a.APPOINTMENT_ID, (a.PRICE*a.CNT)-(CEILING(((a.PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0))) as TOTALPRICE 
			FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
			WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
			UNION ALL 
			SELECT a.APPOINTMENT_ID, (a.SERVICE_PRICE*a.CNT)-(CEILING(((a.SERVICE_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0))) as TOTALPRICE 
			FROM TBL_APPOINTMENT_SERVICE a 
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
			WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
			UNION ALL 
			SELECT a.APPOINTMENT_ID, (a.PART_PRICE*a.CNT)-(CEILING(((a.PART_PRICE*a.CNT)/100)*ISNULL(a.DISCPER, 0))) as TOTALPRICE 
			FROM TBL_APPOINTMENT_PART a 
			INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID AND b.PATIENT_ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40015) 
			WHERE a.APPOINTMENT_ID<>40015 AND CONVERT(datetime, b.DT) < CONVERT(datetime, (SELECT DT FROM TBL_APPOINTMENT WHERE ID=40015)) 
		) a 
		GROUP BY a.APPOINTMENT_ID 
	) a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
) a

SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_APPOINTMENT_REPAIR

SELECT * FROM TBL_ROLE

INSERT INTO TBL_APPOINTMENT_SERVICE (APPOINTMENT_ID, SERVICE_TYPE_NAME, SERVICE_CODE, SERVICE_NAME, SERVICE_DESCRIPTION, DESCRIPTION, SERVICE_PRICE, CNT, SERVICE_ID, DISCPER) 
VALUES (
	999
	, (SELECT NAME FROM TBL_SERVICE_TYPE WHERE ID=(SELECT SERVICE_TYPE_ID FROM TBL_SERVICE WHERE ID=999))
	, (SELECT CODE FROM TBL_SERVICE WHERE ID=999)
	, (SELECT NAME FROM TBL_SERVICE WHERE ID=999)
	, (SELECT DESCRIPTION FROM TBL_SERVICE WHERE ID=999)
	, N'NNN'
	, (SELECT PRICE FROM TBL_SERVICE WHERE ID=999)
	, ' + $.trim($('#appmodaltab3AddServiceModalInputCnt').val()) + '
	, ' + $('#appmodaltab3ServiceID').text() + '
	, (SELECT ISNULL(b.PER,0) as DISCPER 
FROM TBL_SERVICE a 
LEFT JOIN ( 
	SELECT SERVICE_ID, PER 
	FROM TBL_SERVICEDISC 
	WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE) 
) b ON a.ID=b.SERVICE_ID 
WHERE a.ID=' + $('#appmodaltab3ServiceID').text() + '))


SELECT ISNULL(CAST(ID as VARCHAR),'')+'~'+ISNULL(CODE,'')+'~'+ISNULL(NAME,'')+'~'+CAST(TYPE as VARCHAR)+'~'+ISNULL(TEL,'')+'~'+ISNULL(TEL2,'')+'~'+ISNULL(EMAIL,'')+'~'+ISNULL(ADDRESS,'')+'~'+CAST(MARK_ID as VARCHAR)+'~'+CAST(PRODUCEDYEAR as VARCHAR)+'~'+ISNULL(AUTONO,'')+'~'+ISNULL(VINNO,'')+'~'+ISNULL(CAST(FUELTYPE as VARCHAR),'')+'~'+ISNULL(CAST(TRANSMISSIONTYPE as VARCHAR),'')+'~'+ISNULL(CAST(EMERGENCYTEL as varchar),'')+'~'+ISNULL(CAST(EMERGENCYTELTYPE as varchar),'')+'~'+ISNULL(CAST(EMERGENCYPERSONNAME as varchar),'')+'~'+ISNULL(CAST(ZAALTTYPE as varchar),'') 
FROM TBL_PATIENT 
WHERE ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40016)

SELECT 
	ISNULL(CAST(ID as VARCHAR),'')
	+'~'+ISNULL(CODE,'')
	+'~'+ISNULL(NAME,'')
	+'~'+CAST(TYPE as VARCHAR)
	+'~'+ISNULL(TEL,'')
	+'~'+ISNULL(TEL2,'')
	+'~'+ISNULL(EMAIL,'')
	+'~'+ISNULL(ADDRESS,'')
	+'~'+CAST(MARK_ID as VARCHAR)
	+'~'+ISNULL(CAST(PRODUCEDYEAR as VARCHAR),'')
	+'~'+ISNULL(AUTONO,'')
	+'~'+ISNULL(VINNO,'')
	+'~'+ISNULL(CAST(FUELTYPE as VARCHAR),'')
	+'~'+ISNULL(CAST(TRANSMISSIONTYPE as VARCHAR),'')
	+'~'+ISNULL(CAST(EMERGENCYTEL as varchar),'')
	+'~'+ISNULL(CAST(EMERGENCYTELTYPE as varchar),'')
	+'~'+ISNULL(CAST(EMERGENCYPERSONNAME as varchar),'')
	+'~'+ISNULL(CAST(ZAALTTYPE as varchar),'') 
FROM TBL_PATIENT 
WHERE ID=(SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID=40016)


SELECT * FROM TBL_APPOINTMENT

update TBL_APPOINTMENT SET DT='2015-10-30'




SELECT * FROM TBL_CLINIC

INSERT INTO TBL_APPOINTMENT_PART (
	APPOINTMENT_ID
	, PART_TYPE_NAME
	, PART_CODE
	, PART_NAME
	, PART_DESCRIPTION
	, DESCRIPTION
	, PART_PRICE
	, CNT
	, PART_ID
	, DISCPER) 
VALUES (
	50016
	, (SELECT NAME FROM TBL_PART_TYPE WHERE ID=(SELECT PART_TYPE_ID FROM TBL_PART WHERE ID=19))
	, (SELECT CODE FROM TBL_PART WHERE ID=19)
	, (SELECT NAME FROM TBL_PART WHERE ID=19)
	, (SELECT DESCRIPTION FROM TBL_PART WHERE ID=19)
	, NULL
	, (SELECT PRICE FROM TBL_PART WHERE ID=19)
	, 1
	, 19
	, (SELECT ISNULL(b.PER,0) as DISCPER FROM TBL_PART a LEFT JOIN ( SELECT PART_ID, PER FROM TBL_PARTDISC WHERE GETDATE() BETWEEN CONVERT(datetime, BEGINDATE) AND CONVERT(datetime, ENDDATE) ) b ON a.ID=b.PART_ID WHERE a.ID=19)
)

SELECT * FROM TBL_APPOINTMENT

UPDATE TBL_APPOINTMENT SET DT = '2015-12-22' WHERE DT='2015-10-30';

SELECT * FROM TBL_APPOINTMENT

SELECT a.ID, a.CHAIRNUM, b.AUTONO, b.TEL, a.DT, a.STARTTIME, a.ENDTIME, a.APPOINTMENT_TYPE_ID, c.COLORCLASS, a.PATIENT_ID, a.APPOINTMENTTYPE FROM TBL_APPOINTMENT a INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.DT BETWEEN '2016-01-05' AND '2016-01-05' AND a.ROOM_ID=1

SELECT * FROM TBL_PATIENT

SELECT 
	a.NAME
	, CASE WHEN a.TYPE=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as TYPENAME
	, TEL
	, TEL2
	, b.NAME 
FROM TBL_PATIENT a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 


DELETE FROM TBL_APPOINTMENT WHERE ID IN (60019)
SELECT * FROM TBL_APPOINTMENT WHERE ID IN (60019)


SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_TYPE


SELECT a.ID
	, a.DT
	, a.STARTTIME
	, a.ENDTIME
	, b.NAME as ROOM_NAME
	, a.CHAIRNUM
	, a.NUM as APPNO
	, c.LISTDATA as REQUESTTYPELIST
	, ISNULL(a.REQUESTMEMO,'-') as REQUESTMEMO
	, ISNULL(d.DIAGNOSTICSUMPRICE,0) as DIAGNOSTICSUMPRICE
	, f.LISTDATA as DIAGNOSTICTYPELIST
	, ISNULL(g.DESCRIPTION,'-') as DIAGNOSTICDESCRIPTION
	, ISNULL(LEFT(h.LNAME,1)+'.'+h.FNAME,'-') as DIAGNOSTICSENIORMECHANICAL_STAFFNAME
	, ISNULL(LEFT(i.LNAME,1)+'.'+i.FNAME,'-') as DIAGNOSTICSERVICECONSULTANT_STAFFNAME
	, ISNULL(j.SERVICESUMPRICE,0) as SERVICESUMPRICE
	, p.NAME as REPAIRTYPENAME
	, LEFT(q.LNAME,1)+'.'+q.FNAME as REPAIRMECHANICAL_STAFFNAME
	, LEFT(r.LNAME,1)+'.'+r.FNAME as REPAIRSENIORMECHANICAL_STAFFNAME
	, LEFT(s.LNAME,1)+'.'+s.FNAME as REPAIRSERVICECONSULTANT_STAFFNAME
	, k.LISTDATA as SERVICELIST
	, ISNULL(l.PARTSUMPRICE,0) as PARTSUMPRICE
	, m.LISTDATA as PARTLIST
	, ISNULL(n.SUMPRICE,0) as SUMPRICE 
FROM TBL_APPOINTMENT a 
INNER JOIN TBL_ROOM b ON a.ROOM_ID=b.ID 
INNER JOIN ( 
	select APPOINTMENT_ID
	, ( 
		select ' <span class=\"label bg-color-blueDark\">'+ b.NAME+'</span>' 
		from TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_REQUESTTYPE b ON a.REQUESTTYPE_ID=b.ID 
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
	) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
	)t 
) c ON a.ID=c.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.PRICE*CNT)) as DIAGNOSTICSUMPRICE 
	FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=35075 
	GROUP BY a.APPOINTMENT_ID 
) d ON a.ID=d.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID
		, ( 
			select ' <span class=\"label bg-color-blueDark\">'+ a.NAME+N' <i>/₮'+REPLACE(CONVERT(varchar, CAST(a.PRICE AS money), 1),'.00','')+'/</i></span>' 
			from TBL_APPOINTMENT_DIAGNOSTICTYPE a 
			where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
		) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
	)t 
) f ON a.ID=f.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_DIAGNOSTIC g ON a.ID=g.APPOINTMENT_ID 
LEFT JOIN TBL_STAFF h ON g.SENIORMECHANICAL_STAFFID=h.ID 
LEFT JOIN TBL_STAFF i ON g.SERVICECONSULTANT_STAFFID = i.ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SERVICESUMPRICE 
	FROM TBL_APPOINTMENT_SERVICE a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=35075 
	GROUP BY a.APPOINTMENT_ID 
) j ON a.ID=j.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID
		, ( 
			select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+ISNULL(a.DESCRIPTION,'')+'</td><td class=\"text-center\">'+CAST(a.CNT as varchar)+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST(a.SERVICE_PRICE AS money), 1),'.00','')+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST((a.SERVICE_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
			from TBL_APPOINTMENT_SERVICE a 
			where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
		) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
	)t 
) k ON a.ID=k.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as PARTSUMPRICE 
	FROM TBL_APPOINTMENT_PART a 
	INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
	WHERE b.PATIENT_ID=35075 
	GROUP BY a.APPOINTMENT_ID 
) l ON a.ID=l.APPOINTMENT_ID 
LEFT JOIN ( 
	select APPOINTMENT_ID
		, ( 
			select '<tr><td>'+ a.PART_CODE+'</td><td>'+a.PART_NAME+'</td><td>'+a.PART_DESCRIPTION+'</td><td>'+ISNULL(a.DESCRIPTION,'')+'</td><td class=\"text-center\">'+CAST(a.CNT as varchar)+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST(a.PART_PRICE AS money), 1),'.00','')+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST((a.PART_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
			from TBL_APPOINTMENT_PART a 
			where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 
		) as LISTDATA 
	from ( 
		SELECT DISTINCT a.APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
	)t 
) m ON a.ID=m.APPOINTMENT_ID 
LEFT JOIN ( 
	SELECT a.APPOINTMENT_ID, SUM(a.SUMPRICE) as SUMPRICE 
	FROM ( 
		SELECT a.APPOINTMENT_ID, SUM((a.PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
		GROUP BY a.APPOINTMENT_ID 
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.SERVICE_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_SERVICE a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
		GROUP BY a.APPOINTMENT_ID 
		UNION ALL 
		SELECT a.APPOINTMENT_ID, SUM((a.PART_PRICE*CNT)) as SUMPRICE 
		FROM TBL_APPOINTMENT_PART a 
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID 
		WHERE b.PATIENT_ID=35075 
		GROUP BY a.APPOINTMENT_ID 
	) a 
	GROUP BY a.APPOINTMENT_ID 
) n ON a.ID=n.APPOINTMENT_ID 
LEFT JOIN TBL_APPOINTMENT_REPAIR o ON a.ID=o.APPOINTMENT_ID 
LEFT JOIN TBL_REPAIRTYPE p ON o.REPAIRTYPE_ID=p.ID 
LEFT JOIN TBL_STAFF q ON o.MECHANICAL_STAFFID = q.ID 
LEFT JOIN TBL_STAFF r ON o.SENIORMECHANICAL_STAFFID = r.ID 
LEFT JOIN TBL_STAFF s ON o.SERVICECONSULTANT_STAFFID = s.ID 
WHERE a.PATIENT_ID=35075 
ORDER BY a.DT DESC, a.STARTTIME DESC, a.ENDTIME DESC



			select '<tr><td>'+ a.SERVICE_CODE+'</td><td>'+a.SERVICE_NAME+'</td><td>'+a.SERVICE_DESCRIPTION+'</td><td>'+ISNULLa.DESCRIPTION+'</td><td class=\"text-center\">'+CAST(a.CNT as varchar)+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST(a.SERVICE_PRICE AS money), 1),'.00','')+N'</td><td class=\"text-right\">₮'+REPLACE(CONVERT(varchar, CAST((a.SERVICE_PRICE*a.CNT) AS money), 1),'.00','')+'</td></tr>' 
			from TBL_APPOINTMENT_SERVICE a 
			where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') 

			select a.* 
			from TBL_APPOINTMENT_SERVICE a 
			where a.APPOINTMENT_ID IN (50016,60016) 

			select a.* 
			from TBL_APPOINTMENT_PART a 
			where a.APPOINTMENT_ID IN (50016,60016) 

SELECT * FROM TBL_APPOINTMENT WHERE ID=10006
SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC WHERE ID=10006

SELECT ISNULL(CAST(a.DESCRIPTION as NVARCHAR(2000)),'') 
FROM TBL_APPOINTMENT_DIAGNOSTIC a 
INNER JOIN( 
	select APPOINTMENT_ID
		, stuff( ( 
		select ','+ CAST(DIAGNOSTICTYPE_ID as varchar) 
		from TBL_APPOINTMENT_DIAGNOSTICTYPE 
		where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,''
		) as LISTDATA
	 from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE 
		WHERE APPOINTMENT_ID=10006 
	)t 
) b ON a.APPOINTMENT_ID=b.APPOINTMENT_ID 
WHERE a.APPOINTMENT_ID=10006

SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC WHERE APPOINTMENT_ID=10006

SELECT * FROM TBL_PATIENT WHERE AUTONO = N'6505 УНТ'

SELECT * FROM ( SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO FROM TBL_PATIENT a INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID WHERE a.CLINIC_ID=1  AND a.VINNO=N'gun' ) a WHERE RW>=1 AND RW<=100

SELECT AUTONO+'~'ISNULL(VINNO,'') FROM TBL_PATIENT WHERE CLINIC_ID=1 AND ID=10011


SELECT ROW_NUMBER() OVER(ORDER BY b.NUM) AS RW
	, b.NUM as 'Захиалгын дугаар'
	, CASE WHEN b.APPOINTMENTTYPE=1 THEN N'Биечлэн' ELSE N'Утсаар' END AS 'Захиалгын төрөл'
	, b.DT as 'Огноо'
	, b.STARTTIME as 'Эхлэх цаг'
	, b.ENDTIME as 'Дуусах цаг'
	, c.NAME as 'Заал'
	, b.CHAIRNUM as 'Өргөгч'
	, f.NAME as 'Захиалгын төлөв'
	, a.REQUESTTYPELIST as 'Үйлчлүүлэгчийн хүсэлт төрөл'
	, b.REQUESTMEMO as 'Үйлчүүлэгчийн хүсэлт'
	, d.CODE as 'Үйлчүүлэгчийн код'
	, d.AUTONO as 'Улсын дугаар'
	, h.NAME as 'Үйлдвэрлэгч'
	, g.NAME as 'Автомашины загвар'
	, d.PRODUCEDYEAR as 'Үйлдвэрлэсэн он'
	, d.VINNO as 'Аралын дугаар'
	, CASE WHEN d.FUELTYPE=1 THEN N'Бензин' ELSE N'Дизель' END AS 'Шатхууны төрөл'
	, d.VINNO as 'Аралын дугаар'
	, CASE WHEN d.TRANSMISSIONTYPE=1 THEN N'Автомат' ELSE N'Механик' END AS 'Хурдны хайрцаг'
	, CASE WHEN d.ZAALTTYPE=1 THEN N'Мил' ELSE N'Км' END AS 'Заалтын төрөл'
	, b.MILEAGE AS 'Заалт'
	, d.NAME as 'Эзэмшигчийн нэр'
	, d.TEL as 'Утас 1'
	, d.TEL2 as 'Утас 2'
	, CASE WHEN d.TYPE=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END AS 'Эзэмшигчийн төрөл'
	, d.ADDRESS as 'Хаяг'
	, d.EMERGENCYTEL as 'Яаралтай үед холбогдох утас'
	, CASE WHEN d.EMERGENCYTEL=1 THEN N'Ажил' ELSE CASE WHEN d.EMERGENCYTEL=2 THEN N'Гэр' ELSE N'Бусад' END END AS 'Яаралтай үед холбогдох утасны төрөл'
	, d.EMERGENCYPERSONNAME
	, d.EMAIL
FROM(
    SELECT a.ID as APPOINTMENT_ID
		, STUFF(ISNULL((
			SELECT ', ' + y.NAME 
			FROM TBL_APPOINTMENT_REQUESTTYPE x 
			INNER JOIN TBL_REQUESTTYPE y ON x.REQUESTTYPE_ID = y.ID 
			WHERE x.APPOINTMENT_ID = a.ID 
			GROUP BY y.NAME 
			ORDER BY y.NAME DESC FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(max)'), ''), 1, 2, '') as REQUESTTYPELIST
	FROM TBL_APPOINTMENT a
	WHERE a.CLINIC_ID = 1 AND a.DT BETWEEN '2016-01-15"' AND '2016-02-15'
    GROUP BY a.ID
) a
INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID = b.ID
INNER JOIN TBL_ROOM c ON b.ROOM_ID = c.ID
INNER JOIN TBL_PATIENT d ON b.PATIENT_ID = d.ID
INNER JOIN TBL_APPOINTMENT_TYPE f ON b.APPOINTMENT_TYPE_ID = f.ID
INNER JOIN TBL_AUTOMARK g ON d.MARK_ID=g.ID
INNER JOIN TBL_AUTOMARK_TYPE h ON g.AUTOMARK_TYPE_ID=h.ID
ORDER BY b.NUM

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_PATIENT

SELECT ROW_NUMBER() OVER(ORDER BY b.NUM) AS '#'
	, b.NUM as 'Захиалгын дугаар'
FROM(
    SELECT a.ID as APPOINTMENT_ID
		, STUFF(ISNULL((
			SELECT ', ' + y.NAME 
			FROM TBL_APPOINTMENT_REQUESTTYPE x 
			INNER JOIN TBL_REQUESTTYPE y ON x.REQUESTTYPE_ID = y.ID 
			WHERE x.APPOINTMENT_ID = a.ID 
			GROUP BY y.NAME 
			ORDER BY y.NAME DESC FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(max)'), ''), 1, 2, '') as REQUESTTYPELIST
	FROM TBL_APPOINTMENT a
	WHERE a.CLINIC_ID = 1 AND a.DT BETWEEN '2016-01-16' AND '2016-02-16'
    GROUP BY a.ID
) a
INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID = b.ID
INNER JOIN TBL_ROOM c ON b.ROOM_ID = c.ID
INNER JOIN TBL_PATIENT d ON b.PATIENT_ID = d.ID
INNER JOIN TBL_APPOINTMENT_TYPE f ON b.APPOINTMENT_TYPE_ID = f.ID
INNER JOIN TBL_AUTOMARK g ON d.MARK_ID = g.ID
INNER JOIN TBL_AUTOMARK_TYPE h ON g.AUTOMARK_TYPE_ID = h.ID
ORDER BY b.NUM



SELECT * 
FROM ( 
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, ISNULL(c.CNT,0) as APP_CNT 
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
	LEFT JOIN (
		SELECT a.PATIENT_ID, COUNT(a.ID) as CNT 
		FROM TBL_APPOINTMENT a 
		INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		WHERE a.CLINIC_ID=1 AND b.ISACTIVESHOW=1
		GROUP BY a.PATIENT_ID
	) c ON a.ID = c.PATIENT_ID
	WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) 
) a 
WHERE RW>=1 AND RW<=100

SELECT * 
FROM ( 
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, ISNULL(c.CNT,0) as APP_CNT 
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 
	LEFT JOIN (
		SELECT a.PATIENT_ID, COUNT(a.ID) as CNT 
		FROM TBL_APPOINTMENT a 
		INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		WHERE a.CLINIC_ID=1 AND b.ISACTIVESHOW=1
		GROUP BY a.PATIENT_ID
	) c ON a.ID = c.PATIENT_ID
	WHERE a.CLINIC_ID=" + clinicid + "  AND a.AUTONO=N'" + autono + "' 
) a 
WHERE RW>=1 AND RW<=100

SELECT * 
FROM ( 
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, ISNULL(c.CNT,0) as APP_CNT 
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 
	LEFT JOIN (
		SELECT a.PATIENT_ID, COUNT(a.ID) as CNT 
		FROM TBL_APPOINTMENT a 
		INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		WHERE a.CLINIC_ID=1 AND b.ISACTIVESHOW=1
		GROUP BY a.PATIENT_ID
	) c ON a.ID = c.PATIENT_ID
	WHERE a.CLINIC_ID=" + clinicid + "  AND a.VINNO=N'" + vinno + "' 
) a 
WHERE RW>=1 AND RW<=100


SELECT * 
FROM ( 
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, ISNULL(c.CNT,0) as APP_CNT 
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID 
	LEFT JOIN (
		SELECT a.PATIENT_ID, COUNT(a.ID) as CNT 
		FROM TBL_APPOINTMENT a 
		INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		WHERE a.CLINIC_ID=1 AND b.ISACTIVESHOW=1
		GROUP BY a.PATIENT_ID
	) c ON a.ID = c.PATIENT_ID
	WHERE a.CLINIC_ID=" + clinicid + " 
) a 
WHERE RW>=1 AND RW<=100


SELECT PATIENT_ID, COUNT(ID) as CNT FROM TBL_APPOINTMENT WHERE CLINIC_ID=1 GROUP BY PATIENT_ID

SELECT * FROM TBL_APPOINTMENT

SELECT * FROM TBL_APPOINTMENT_TYPE

SELECT * FROM TBL_APPOINTMENT WHERE PATIENT_ID=35075
DELETE FROM TBL_APPOINTMENT WHERE PATIENT_ID=35075

SELECT * FROM TBL_PATIENT

UPDATE TBL_APPOINTMENT SET DT='2016-10-24' WHERE DT='2016-10-18'

SELECT a.ID, a.NAME FROM ( SELECT null as ID, N'- Нийт -' as NAME UNION ALL SELECT ID, NAME FROM TBL_APPOINTMENT_TYPE ) a ORDER BY a.ID


SELECT * FROM TBL_PATIENT


SELECT * 
FROM(
    SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW
		, a.ID
		, a.CODE
		, a.NAME
		, CASE WHEN a.[TYPE] = 1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE]
		, b.NAME as MARK_NAME
		, a.PRODUCEDYEAR
		, a.AUTONO
		, a.VINNO
		, ISNULL(c.CNT, 0) as APP_CNT
    FROM TBL_PATIENT a
    INNER JOIN TBL_AUTOMARK b ON a.MARK_ID = b.ID
    LEFT JOIN(
        SELECT a.PATIENT_ID, COUNT(a.ID) as CNT
        FROM TBL_APPOINTMENT a
        INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID = b.ID
        WHERE a.CLINIC_ID = 1 AND b.ISACTIVESHOW = 1
        GROUP BY a.PATIENT_ID
    ) c ON a.ID = c.PATIENT_ID
    WHERE a.CLINIC_ID = 1  AND a.VINNO LIKE N'%JTJHY00W%'
) a
WHERE RW >= 1 AND RW <= 100

SELECT * FROM TBL_APPOINTMENT_PART


SELECT * FROM TBL_SELLCARS
SELECT * FROM TBL_SELLCARSPAYMENTTYPE
SELECT * FROM TBL_SOLDCARCUSTOMER
SELECT * FROM TBL_SOLDCARCUSTOMER_SELLCARS

SELECT * FROM TBL_CARCOLOR
SELECT * FROM TBL_CARCOLORTYPE



SELECT * FROM TBL_CUSTOMERTYPE
SELECT * FROM TBL_FUELTYPE
SELECT * FROM TBL_SPECTYPE
SELECT * FROM TBL_TRANSMISSIONTYPE

TBL_SOLDCARCUSTOMER

SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_STAFF



SELECT * FROM TBL_SPECTYPE
SELECT * FROM TBL_CARCOLORTYPE
SELECT * FROM TBL_CARCOLOR
SELECT * FROM TBL_SELLCARSPAYMENTTYPE



SELECT
	stuff( ( 
		select '<span class="badge badge-info">'+ CAST(a.MECHANICAL_STAFFNAME as nvarchar)+'</span>' 
		from (
			SELECT '2016-06-17' as DT, b.FNAME+'.'+LEFT(b.LNAME,1) as MECHANICAL_STAFFNAME
			FROM (
				SELECT DISTINCT a.MECHANICAL_STAFFID
				FROM TBL_APPOINTMENT_REPAIR a
				INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
				WHERE b.CLINIC_ID=1 AND a.MECHANICAL_STAFFID IS NOT NULL AND b.DT='2016-06-17'
				GROUP BY a.MECHANICAL_STAFFID
			) a
			INNER JOIN TBL_STAFF b ON a.MECHANICAL_STAFFID=b.ID
		) a
		where a.DT = t.DT for XML path('') ),1,1,''
		) as LISTDATA
FROM (
	SELECT '2016-06-17' as DT
) t

	SELECT '2016-06-17' as DT, b.FNAME+'.'+LEFT(b.LNAME,1) as MECHANICAL_STAFFNAME
	FROM (
		SELECT DISTINCT a.MECHANICAL_STAFFID
		FROM TBL_APPOINTMENT_REPAIR a
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
		WHERE b.CLINIC_ID=1 AND a.MECHANICAL_STAFFID IS NOT NULL AND b.DT='2016-06-17'
		GROUP BY a.MECHANICAL_STAFFID
	) a
	INNER JOIN TBL_STAFF b ON a.MECHANICAL_STAFFID=b.ID


	select APPOINTMENT_ID
		, stuff( ( 
		select ','+ CAST(DIAGNOSTICTYPE_ID as varchar) 
		from TBL_APPOINTMENT_DIAGNOSTICTYPE 
		where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,''
		) as LISTDATA
	 from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE 
		WHERE APPOINTMENT_ID=10006 
	)t 


	SELECT b.FNAME+'.'+LEFT(b.LNAME,1) as MECHANICAL_STAFFNAME
	FROM (
		SELECT DISTINCT a.MECHANICAL_STAFFID
		FROM TBL_APPOINTMENT_REPAIR a
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
		INNER JOIN TBL_APPOINTMENT_TYPE c ON b.APPOINTMENT_TYPE_ID=c.ID
		WHERE b.CLINIC_ID=1 AND a.MECHANICAL_STAFFID IS NOT NULL AND c.ISACTIVESHOW=0 AND b.DT='2016-06-18'
		GROUP BY a.MECHANICAL_STAFFID
	) a
	INNER JOIN TBL_STAFF b ON a.MECHANICAL_STAFFID=b.ID
	ORDER BY b.FNAME, b.LNAME

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_TYPE

	SELECT * FROM TBL_STAFF_POSITION
	SELECT * FROM TBL_JOBPOSITION


DROP TABLE TBL_JOBPOSITION;
CREATE TABLE TBL_JOBPOSITION(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	NAME nvarchar(50),
	STAFF_POSITION_ID numeric(18,0)
);
INSERT INTO TBL_JOBPOSITION (CLINIC_ID, NAME) VALUES (1, N'Ахлах механик');
INSERT INTO TBL_JOBPOSITION (CLINIC_ID, NAME) VALUES (1, N'Механик');
INSERT INTO TBL_JOBPOSITION (CLINIC_ID, NAME) VALUES (1, N'Үйлчилгээний зөвлөх');

DROP TABLE TBL_STAFFTRCDLOG
CREATE TABLE TBL_STAFFTRCDLOG(
	ID numeric(18,0) IDENTITY(1,1),
	CLINIC_ID numeric(18,0),
	STAFF_ID numeric(18,0),
	DT varchar(10)
);

SELECT b.FNAME+'.'+LEFT(b.LNAME,1) as MECHANICAL_STAFFNAME
FROM (
	SELECT DISTINCT a.STAFF_ID 
	FROM TBL_STAFFTRCDLOG a
	INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID 
	WHERE a.CLINIC_ID=1 AND b.STAFF_POSITION_ID IN (SELECT STAFF_POSITION_ID FROM TBL_JOBPOSITION WHERE ID=2) AND a.DT = '2016-06-19'
	GROUP BY a.STAFF_ID
) a
INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID
ORDER BY b.FNAME, b.LNAME

SELECT * FROM TBL_JOBPOSITION

SELECT * FROM TBL_STAFFTRCDLOG

SELECT ID, NAME FROM TBL_JOBPOSITION WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) ORDER BY ID
SELECT '' as ID, N'- Сонго -' as NAME UNION ALL SELECT  CAST(ID as varchar) as ID, NAME FROM TBL_STAFF_POSITION WHERE CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) ORDER BY NAME

5	1	Тэргүүн дэд захирал
2	1	Ахлах механик
3	1	Механик
4	1	Үйлчилгээний зөвлөх

SELECT a.ID, a.NAME 
FROM ( 
	SELECT '' as ID, N'- Сонго -' as NAME 
	UNION ALL 
	SELECT CAST(a.ID as varchar) as ID, a.FNAME+'.'+LEFT(a.LNAME,1)+' | '+b.NAME as NAME 
	FROM TBL_STAFF a 
	INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
	WHERE a.ISACTIVE=1 AND a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND a.STAFF_POSITION_ID IN (SELECT STAFF_POSITION_ID FROM TBL_JOBPOSITION WHERE ID=1)
) a 
ORDER BY a.NAME

SELECT STAFF_POSITION_ID FROM TBL_JOBPOSITION WHERE ID=1

SELECT 12, CAST(DATA as numeric) FROM dbo.FUNC_SPLIT(',','1,2,3')

SELECT * FROM TBL_STAFFTRCDLOG

SELECT * FROM TBL_PATIENT WHERE ID=55077 


SELECT * FROM TBL_TRANSMISSIONTYPE

SELECT * FROM TBL_SOLDCARCUSTOMER_SELLCARS

SELECT a.AUTOMARK_TYPE_ID, b.NAME as AUTOMARK_TYPE_NAME, a.ID, a.NAME 
FROM TBL_AUTOMARK a
INNER JOIN TBL_AUTOMARK_TYPE b ON a.AUTOMARK_TYPE_ID = b.ID AND a.CLINIC_ID = b.CLINIC_ID
WHERE a.CLINIC_ID = 1 AND a.AUTOMARK_TYPE_ID=1
ORDER BY b.NAME, a.NAME

SELECT * FROM TBL_AUTOMARK

SELECT MARK_ID, CLINIC_ID FROM TBL_SELLCARS WHERE CLINIC_ID=1 GROUP BY MARK_ID, CLINIC_ID

SELECT a.MARK_ID FROM TBL_SPECTYPE a WHERE a.CLINIC_ID=1 GROUP BY a.MARK_ID

SELECT b.AUTOMARK_TYPE_ID, c.NAME as AUTOMARK_TYPE_NAME, b.ID, b.NAME
FROM (
	SELECT a.MARK_ID FROM TBL_SPECTYPE a WHERE a.CLINIC_ID=1 GROUP BY a.MARK_ID
) a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
INNER JOIN TBL_AUTOMARK_TYPE c ON b.AUTOMARK_TYPE_ID=c.ID
WHERE b.AUTOMARK_TYPE_ID=1
ORDER BY c.NAME, b.NAME

SELECT 
	a.ID, 
	a.SELLCARS_ID, 
	g.NAME+' - '+f.NAME as AUTOMARK,
	d.NAME as SPECTYPE_NAME, 
	c.VINNO, 
	c.PRODUCEDYEAR, 
	i.NAME as FUELTYPE_NAME, 
	j.NAME as TRANSMISSIONTYPE_NAME, 
	k.NAME as ZAALTTYPE_NAME, 
	c.GETDT, 
	c.PRICE, 
	l.CODE as EXTCOLOR_CODE, 
	l.NAME as EXTCOLOR_NAME, 
	l.HTMLCODE as EXTCOLOR_HTMLCODE, 
	m.CODE as INTCOLOR_CODE, 
	m.NAME as INTCOLOR_NAME, 
	m.HTMLCODE as INTCOLOR_HTMLCODE, 
	b.RD as CUSTOMERRD, 
	b.NAME as CUSTOMERNAME, 
	b.TEL as CUSTOMERTEL, 
	b.TEL2 as CUSTOMERTEL2, 
	b.ADDRESS as CUSTOMERADDRESS, 
	b.EMAIL as CUSTOMEREMAIL, 
    b.CUSTOMERTYPE_ID, 
	n.NAME as CUSTOMERTYPENAME, 
	a.AGGREEMENTNO, 
	a.SELLCARSPAYMENTTYPE_ID, 
	a.PAYDT, 
	a.ISRESOLD,
	ISNULL(a.AGREEMENTATTACH, N'Файл хавсаргаагүй байна...') as AGREEMENTATTACH,
	a.SOLDCARCUSTOMER_ID
FROM TBL_SOLDCARCUSTOMER_SELLCARS a
INNER JOIN TBL_SOLDCARCUSTOMER b ON a.SOLDCARCUSTOMER_ID=b.ID
INNER JOIN TBL_SELLCARS c ON a.SELLCARS_ID=c.ID
INNER JOIN TBL_SPECTYPE d ON c.SPECTYPE_ID=d.ID
INNER JOIN TBL_AUTOMARK f ON d.MARK_ID=f.ID
INNER JOIN TBL_AUTOMARK_TYPE g ON f.AUTOMARK_TYPE_ID=g.ID
INNER JOIN TBL_SELLCARSPAYMENTTYPE h ON a.SELLCARSPAYMENTTYPE_ID=h.ID
INNER JOIN TBL_FUELTYPE i ON c.FUELTYPE_ID=i.ID
INNER JOIN TBL_TRANSMISSIONTYPE j ON c.TRANSMISSIONTYPE_ID=j.ID
INNER JOIN TBL_ZAALTTYPE k ON c.ZAALTTYPE_ID=k.ID
INNER JOIN TBL_CARCOLOR l ON c.EXTCOLOR_ID=l.ID
INNER JOIN TBL_CARCOLOR m ON c.INTCOLOR_ID=m.ID
INNER JOIN TBL_CUSTOMERTYPE n ON b.CUSTOMERTYPE_ID=n.ID
WHERE a.ID=2



SELECT * FROM TBL_APPOINTMENT_DIAGNOSTIC

ALTER TABLE TBL_APPOINTMENT_DIAGNOSTIC ADD MECHANICAL_STAFFID numeric(18,0);

SELECT 
	ISNULL(CAST(b.LISTDATA as VARCHAR),'')+'~'+ISNULL(CAST(a.DESCRIPTION as NVARCHAR(2000)),'')+'~'+ISNULL(CAST(a.SENIORMECHANICAL_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(a.SERVICECONSULTANT_STAFFID as VARCHAR),'')+'~'+ISNULL(CAST(a.MECHANICAL_STAFFID as VARCHAR),'') 
FROM TBL_APPOINTMENT_DIAGNOSTIC a 
INNER JOIN( 
	select APPOINTMENT_ID, stuff( ( select ','+ CAST(DIAGNOSTICTYPE_ID as varchar) from TBL_APPOINTMENT_DIAGNOSTICTYPE where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA 
	from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_DIAGNOSTICTYPE 
		WHERE APPOINTMENT_ID=10006 
	)t 
) b ON a.APPOINTMENT_ID=b.APPOINTMENT_ID 
WHERE a.APPOINTMENT_ID=10006


SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_TYPE
SELECT * FROM TBL_PATIENT

		SELECT DISTINCT a.MECHANICAL_STAFFID
		FROM TBL_APPOINTMENT_REPAIR a
		INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
		WHERE b.CLINIC_ID=1 AND a.MECHANICAL_STAFFID IS NOT NULL AND b.APPOINTMENT_TYPE_ID<>4 AND b.APPOINTMENT_TYPE_ID<>5 AND b.DT='2016-10-05'
		GROUP BY a.MECHANICAL_STAFFID

SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_REQUESTTYPE
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE
SELECT * FROM TBL_PATIENT


SELECT MARK_ID, [2016-10-01], [2016-10-02], [2016-10-03], [2016-10-04], [2016-10-05], [2016-10-06], [2016-10-07], [2016-10-08], [2016-10-09], [2016-10-10]
FROM (
	SELECT 
		a.ID, 
		b.MARK_ID, 
		c.REQUESTTYPE_ID, 
		datepart(day, datediff(day, 0, CONVERT(datetime, a.DT+' 00:00:01', 120))/7 * 7)/7 + 1 as NUMOFWK, 
		a.DT, 
		f.PRICESUM 
	FROM TBL_APPOINTMENT a 
	INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
	INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
	INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
	LEFT JOIN (
		SELECT a.ID, SUM(a.PRICESUM) as PRICESUM
		FROM(
			SELECT a.ID, ISNULL(SUM(c.PRICE), 0) as PRICESUM
			FROM TBL_APPOINTMENT a
			LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID = b.APPOINTMENT_ID
			LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID = c.ID
			WHERE a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
			GROUP BY a.ID
			UNION ALL
			SELECT a.ID, ISNULL(SUM(b.SERVICE_PRICE * b.CNT), 0) as PRICESUM
			FROM TBL_APPOINTMENT a
			LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID = b.APPOINTMENT_ID
			WHERE a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
			GROUP BY a.ID
			UNION ALL
			SELECT a.ID, ISNULL(SUM(b.PART_PRICE * b.CNT), 0) as PRICESUM
			FROM TBL_APPOINTMENT a
			LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID = b.APPOINTMENT_ID
			WHERE a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
			GROUP BY a.ID
		) a
		GROUP BY a.ID
	) f ON a.ID=f.ID
	WHERE d.ISACTIVESHOW=1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
) a
PIVOT (
	SUM(PRICESUM) 
	FOR DT IN ([2016-10-01], [2016-10-02], [2016-10-03], [2016-10-04], [2016-10-05], [2016-10-06], [2016-10-07], [2016-10-08], [2016-10-09], [2016-10-10])
) as SUMD



SELECT
	ROW_NUMBER() OVER(ORDER BY b.NAME ASC) AS RW, 
	a.MARK_ID, 
	b.NAME as MARK_NAME, 
	CASE WHEN ISNULL(a.[2016-10-01_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_1],0) as varchar) END AS [2016-10-01_1], CASE WHEN ISNULL(a.[2016-10-01_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_2],0) as varchar) END AS [2016-10-01_2], CASE WHEN ISNULL(a.[2016-10-01_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_3],0) as varchar) END AS [2016-10-01_3], CASE WHEN ISNULL(a.[2016-10-01_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_4],0) as varchar) END AS [2016-10-01_4], CASE WHEN ISNULL(a.[2016-10-01_5],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_5],0) as varchar) END AS [2016-10-01_5], CASE WHEN ISNULL(a.[2016-10-01_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_9911],0) as varchar) END AS [2016-10-01_9911], CASE WHEN ISNULL(a.[2016-10-01_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-01_9922],0) as varchar) END AS [2016-10-01_9922], 
	a.[2016-10-02_1], a.[2016-10-02_2], a.[2016-10-02_3], a.[2016-10-02_4], a.[2016-10-02_5], a.[2016-10-02_9911], a.[2016-10-02_9922], 
	a.[2016-10-03_1], a.[2016-10-03_2], a.[2016-10-03_3], a.[2016-10-03_4], a.[2016-10-03_5], a.[2016-10-03_9911], a.[2016-10-03_9922], 
	a.[2016-10-04_1], a.[2016-10-04_2], a.[2016-10-04_3], a.[2016-10-04_4], a.[2016-10-04_5], a.[2016-10-04_9911], a.[2016-10-04_9922], 
	a.[2016-10-05_1], a.[2016-10-05_2], a.[2016-10-05_3], a.[2016-10-05_4], a.[2016-10-05_5], a.[2016-10-05_9911], a.[2016-10-05_9922], 
	a.[2016-10-06_1], a.[2016-10-06_2], a.[2016-10-06_3], a.[2016-10-06_4], a.[2016-10-06_5], a.[2016-10-06_9911], a.[2016-10-06_9922], 
	a.[2016-10-07_1], a.[2016-10-07_2], a.[2016-10-07_3], a.[2016-10-07_4], a.[2016-10-07_5], a.[2016-10-07_9911], a.[2016-10-07_9922], 
	a.[2016-10-08_1], a.[2016-10-08_2], a.[2016-10-08_3], a.[2016-10-08_4], a.[2016-10-08_5], a.[2016-10-08_9911], a.[2016-10-08_9922], 
	a.[2016-10-09_1], a.[2016-10-09_2], a.[2016-10-09_3], a.[2016-10-09_4], a.[2016-10-09_5], a.[2016-10-09_9911], a.[2016-10-09_9922]
FROM (
	SELECT 
		MARK_ID, 
		[2016-10-01_1], [2016-10-01_2], [2016-10-01_3], [2016-10-01_4], [2016-10-01_5], [2016-10-01_9911], [2016-10-01_9922], 
		[2016-10-02_1], [2016-10-02_2], [2016-10-02_3], [2016-10-02_4], [2016-10-02_5], [2016-10-02_9911], [2016-10-02_9922], 
		[2016-10-03_1], [2016-10-03_2], [2016-10-03_3], [2016-10-03_4], [2016-10-03_5], [2016-10-03_9911], [2016-10-03_9922], 
		[2016-10-04_1], [2016-10-04_2], [2016-10-04_3], [2016-10-04_4], [2016-10-04_5], [2016-10-04_9911], [2016-10-04_9922], 
		[2016-10-05_1], [2016-10-05_2], [2016-10-05_3], [2016-10-05_4], [2016-10-05_5], [2016-10-05_9911], [2016-10-05_9922], 
		[2016-10-06_1], [2016-10-06_2], [2016-10-06_3], [2016-10-06_4], [2016-10-06_5], [2016-10-06_9911], [2016-10-06_9922], 
		[2016-10-07_1], [2016-10-07_2], [2016-10-07_3], [2016-10-07_4], [2016-10-07_5], [2016-10-07_9911], [2016-10-07_9922], 
		[2016-10-08_1], [2016-10-08_2], [2016-10-08_3], [2016-10-08_4], [2016-10-08_5], [2016-10-08_9911], [2016-10-08_9922], 
		[2016-10-09_1], [2016-10-09_2], [2016-10-09_3], [2016-10-09_4], [2016-10-09_5], [2016-10-09_9911], [2016-10-09_9922]
	FROM (
		SELECT 
			MARK_ID, 
			DT+'_'+COL as COL, 
			VALUE
		FROM (
			
			SELECT 
				a.MARK_ID, a.DT, a.[1], a.[2], a.[3], a.[4], a.[5], a.[9911], a.[9922]
			FROM (
				SELECT 
					MARK_ID, DT, [1], [2], [3], [4], [5], [9911], [9922]
				FROM (
					SELECT 
						a.MARK_ID, a.REQUESTTYPE_ID, a.DT, 1 as VAL
					FROM (
						SELECT 
							a.ID, 
							b.MARK_ID, 
							c.REQUESTTYPE_ID, 
							datepart(day, datediff(day, 0, CONVERT(datetime, a.DT+' 00:00:01', 120))/7 * 7)/7 + 1 as NUMOFWK, 
							a.DT
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9911 as REQUESTTYPE_ID, a.DT, a.PRICESUM as VAL
					FROM (
						SELECT
							c.MARK_ID, b.DT, SUM(a.PRICESUM) as PRICESUM
						FROM (
							SELECT a.ID, SUM(a.PRICESUM) as PRICESUM
							FROM(
								SELECT a.ID, ISNULL(SUM(c.PRICE), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID = b.APPOINTMENT_ID
								LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID = c.ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.SERVICE_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.PART_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
							) a
							GROUP BY a.ID
						) a 
						INNER JOIN TBL_APPOINTMENT b ON a.ID=b.ID
						INNER JOIN TBL_PATIENT c ON b.PATIENT_ID=c.ID
						GROUP BY c.MARK_ID, b.DT
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9922 as REQUESTTYPE_ID, a.DT, a.CNTTP as VAL
					FROM (
						SELECT 
							b.MARK_ID, 
							a.DT, 
							COUNT(c.REQUESTTYPE_ID) as CNTTP
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
						GROUP BY b.MARK_ID, a.DT
					) a

				) a
				PIVOT (
					SUM(VAL) 
					FOR REQUESTTYPE_ID IN ([1], [2], [3], [4], [5], [9911], [9922])
				) as SUMD
			) a
			
		) src
		UNPIVOT
		(
			VALUE FOR COL IN ([1], [2], [3], [4], [5], [9911], [9922])
		) unpiv
	) a
	PIVOT (
		SUM(VALUE)
		FOR COL IN ([2016-10-01_1], [2016-10-01_2], [2016-10-01_3], [2016-10-01_4], [2016-10-01_5], [2016-10-01_9911], [2016-10-01_9922], 
		[2016-10-02_1], [2016-10-02_2], [2016-10-02_3], [2016-10-02_4], [2016-10-02_5], [2016-10-02_9911], [2016-10-02_9922], 
		[2016-10-03_1], [2016-10-03_2], [2016-10-03_3], [2016-10-03_4], [2016-10-03_5], [2016-10-03_9911], [2016-10-03_9922], 
		[2016-10-04_1], [2016-10-04_2], [2016-10-04_3], [2016-10-04_4], [2016-10-04_5], [2016-10-04_9911], [2016-10-04_9922], 
		[2016-10-05_1], [2016-10-05_2], [2016-10-05_3], [2016-10-05_4], [2016-10-05_5], [2016-10-05_9911], [2016-10-05_9922], 
		[2016-10-06_1], [2016-10-06_2], [2016-10-06_3], [2016-10-06_4], [2016-10-06_5], [2016-10-06_9911], [2016-10-06_9922], 
		[2016-10-07_1], [2016-10-07_2], [2016-10-07_3], [2016-10-07_4], [2016-10-07_5], [2016-10-07_9911], [2016-10-07_9922], 
		[2016-10-08_1], [2016-10-08_2], [2016-10-08_3], [2016-10-08_4], [2016-10-08_5], [2016-10-08_9911], [2016-10-08_9922], 
		[2016-10-09_1], [2016-10-09_2], [2016-10-09_3], [2016-10-09_4], [2016-10-09_5], [2016-10-09_9911], [2016-10-09_9922])
	) as PIV
) a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
ORDER BY b.NAME


SELECT * FROM TBL_AUTOMARK








SELECT DATEPART(dw, CONVERT(datetime, '2016-09-10'+' 00:00:01', 120))
SELECT MONTH(CONVERT(datetime, '2016-09-10'+' 00:00:01', 120))

select datepart(day, datediff(day, 0, CONVERT(datetime, '2016-09-01'+' 00:00:01', 120))/7 * 7)/7 + 1


SELECT
	ROW_NUMBER() OVER(ORDER BY b.NAME ASC) AS RW, 
	a.MARK_ID, 
	b.NAME as MARK_NAME, 
	CASE WHEN ISNULL(a.[2016-10-1_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_1],0) as varchar) END AS [2016-10-1_1], 
	CASE WHEN ISNULL(a.[2016-10-1_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_2],0) as varchar) END AS [2016-10-1_2], 
	CASE WHEN ISNULL(a.[2016-10-1_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_3],0) as varchar) END AS [2016-10-1_3], 
	CASE WHEN ISNULL(a.[2016-10-1_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_4],0) as varchar) END AS [2016-10-1_4], 
	CASE WHEN ISNULL(a.[2016-10-1_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_9911],0) as varchar) END AS [2016-10-1_9911], 
	CASE WHEN ISNULL(a.[2016-10-1_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-1_9922],0) as varchar) END AS [2016-10-1_9922], 
	CASE WHEN ISNULL(a.[2016-10-2_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_1],0) as varchar) END AS [2016-10-2_1], 
	CASE WHEN ISNULL(a.[2016-10-2_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_2],0) as varchar) END AS [2016-10-2_2], 
	CASE WHEN ISNULL(a.[2016-10-2_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_3],0) as varchar) END AS [2016-10-2_3], 
	CASE WHEN ISNULL(a.[2016-10-2_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_4],0) as varchar) END AS [2016-10-2_4], 
	CASE WHEN ISNULL(a.[2016-10-2_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_9911],0) as varchar) END AS [2016-10-2_9911], 
	CASE WHEN ISNULL(a.[2016-10-2_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-2_9922],0) as varchar) END AS [2016-10-2_9922], 
	CASE WHEN ISNULL(a.[2016-10-3_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_1],0) as varchar) END AS [2016-10-3_1], 
	CASE WHEN ISNULL(a.[2016-10-3_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_2],0) as varchar) END AS [2016-10-3_2], 
	CASE WHEN ISNULL(a.[2016-10-3_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_3],0) as varchar) END AS [2016-10-3_3], 
	CASE WHEN ISNULL(a.[2016-10-3_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_4],0) as varchar) END AS [2016-10-3_4], 
	CASE WHEN ISNULL(a.[2016-10-3_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_9911],0) as varchar) END AS [2016-10-3_9911], 
	CASE WHEN ISNULL(a.[2016-10-3_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-3_9922],0) as varchar) END AS [2016-10-3_9922], 
	CASE WHEN ISNULL(a.[2016-10-4_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_1],0) as varchar) END AS [2016-10-4_1], 
	CASE WHEN ISNULL(a.[2016-10-4_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_2],0) as varchar) END AS [2016-10-4_2], CASE WHEN ISNULL(a.[2016-10-4_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_3],0) as varchar) END AS [2016-10-4_3], CASE WHEN ISNULL(a.[2016-10-4_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_4],0) as varchar) END AS [2016-10-4_4], CASE WHEN ISNULL(a.[2016-10-4_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_9911],0) as varchar) END AS [2016-10-4_9911], CASE WHEN ISNULL(a.[2016-10-4_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-4_9922],0) as varchar) END AS [2016-10-4_9922], CASE WHEN ISNULL(a.[2016-10-5_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_1],0) as varchar) END AS [2016-10-5_1], CASE WHEN ISNULL(a.[2016-10-5_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_2],0) as varchar) END AS [2016-10-5_2], CASE WHEN ISNULL(a.[2016-10-5_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_3],0) as varchar) END AS [2016-10-5_3], CASE WHEN ISNULL(a.[2016-10-5_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_4],0) as varchar) END AS [2016-10-5_4], CASE WHEN ISNULL(a.[2016-10-5_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_9911],0) as varchar) END AS [2016-10-5_9911], CASE WHEN ISNULL(a.[2016-10-5_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-5_9922],0) as varchar) END AS [2016-10-5_9922], CASE WHEN ISNULL(a.[2016-10-6_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_1],0) as varchar) END AS [2016-10-6_1], CASE WHEN ISNULL(a.[2016-10-6_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_2],0) as varchar) END AS [2016-10-6_2], CASE WHEN ISNULL(a.[2016-10-6_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_3],0) as varchar) END AS [2016-10-6_3], CASE WHEN ISNULL(a.[2016-10-6_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_4],0) as varchar) END AS [2016-10-6_4], CASE WHEN ISNULL(a.[2016-10-6_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_9911],0) as varchar) END AS [2016-10-6_9911], CASE WHEN ISNULL(a.[2016-10-6_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-6_9922],0) as varchar) END AS [2016-10-6_9922], CASE WHEN ISNULL(a.[2016-10-7_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_1],0) as varchar) END AS [2016-10-7_1], CASE WHEN ISNULL(a.[2016-10-7_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_2],0) as varchar) END AS [2016-10-7_2], CASE WHEN ISNULL(a.[2016-10-7_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_3],0) as varchar) END AS [2016-10-7_3], CASE WHEN ISNULL(a.[2016-10-7_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_4],0) as varchar) END AS [2016-10-7_4], CASE WHEN ISNULL(a.[2016-10-7_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_9911],0) as varchar) END AS [2016-10-7_9911], CASE WHEN ISNULL(a.[2016-10-7_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-7_9922],0) as varchar) END AS [2016-10-7_9922], CASE WHEN ISNULL(a.[2016-10-8_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_1],0) as varchar) END AS [2016-10-8_1], CASE WHEN ISNULL(a.[2016-10-8_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_2],0) as varchar) END AS [2016-10-8_2], CASE WHEN ISNULL(a.[2016-10-8_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_3],0) as varchar) END AS [2016-10-8_3], CASE WHEN ISNULL(a.[2016-10-8_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_4],0) as varchar) END AS [2016-10-8_4], CASE WHEN ISNULL(a.[2016-10-8_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_9911],0) as varchar) END AS [2016-10-8_9911], CASE WHEN ISNULL(a.[2016-10-8_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-8_9922],0) as varchar) END AS [2016-10-8_9922], CASE WHEN ISNULL(a.[2016-10-9_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_1],0) as varchar) END AS [2016-10-9_1], CASE WHEN ISNULL(a.[2016-10-9_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_2],0) as varchar) END AS [2016-10-9_2], CASE WHEN ISNULL(a.[2016-10-9_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_3],0) as varchar) END AS [2016-10-9_3], CASE WHEN ISNULL(a.[2016-10-9_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_4],0) as varchar) END AS [2016-10-9_4], CASE WHEN ISNULL(a.[2016-10-9_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_9911],0) as varchar) END AS [2016-10-9_9911], CASE WHEN ISNULL(a.[2016-10-9_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-9_9922],0) as varchar) END AS [2016-10-9_9922], CASE WHEN ISNULL(a.[2016-10-10_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_1],0) as varchar) END AS [2016-10-10_1], CASE WHEN ISNULL(a.[2016-10-10_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_2],0) as varchar) END AS [2016-10-10_2], CASE WHEN ISNULL(a.[2016-10-10_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_3],0) as varchar) END AS [2016-10-10_3], CASE WHEN ISNULL(a.[2016-10-10_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_4],0) as varchar) END AS [2016-10-10_4], CASE WHEN ISNULL(a.[2016-10-10_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_9911],0) as varchar) END AS [2016-10-10_9911], CASE WHEN ISNULL(a.[2016-10-10_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-10_9922],0) as varchar) END AS [2016-10-10_9922], CASE WHEN ISNULL(a.[2016-10-11_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_1],0) as varchar) END AS [2016-10-11_1], CASE WHEN ISNULL(a.[2016-10-11_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_2],0) as varchar) END AS [2016-10-11_2], CASE WHEN ISNULL(a.[2016-10-11_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_3],0) as varchar) END AS [2016-10-11_3], CASE WHEN ISNULL(a.[2016-10-11_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_4],0) as varchar) END AS [2016-10-11_4], CASE WHEN ISNULL(a.[2016-10-11_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_9911],0) as varchar) END AS [2016-10-11_9911], CASE WHEN ISNULL(a.[2016-10-11_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-11_9922],0) as varchar) END AS [2016-10-11_9922], CASE WHEN ISNULL(a.[2016-10-12_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_1],0) as varchar) END AS [2016-10-12_1], CASE WHEN ISNULL(a.[2016-10-12_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_2],0) as varchar) END AS [2016-10-12_2], CASE WHEN ISNULL(a.[2016-10-12_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_3],0) as varchar) END AS [2016-10-12_3], CASE WHEN ISNULL(a.[2016-10-12_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_4],0) as varchar) END AS [2016-10-12_4], CASE WHEN ISNULL(a.[2016-10-12_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_9911],0) as varchar) END AS [2016-10-12_9911], CASE WHEN ISNULL(a.[2016-10-12_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-12_9922],0) as varchar) END AS [2016-10-12_9922], CASE WHEN ISNULL(a.[2016-10-13_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_1],0) as varchar) END AS [2016-10-13_1], CASE WHEN ISNULL(a.[2016-10-13_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_2],0) as varchar) END AS [2016-10-13_2], CASE WHEN ISNULL(a.[2016-10-13_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_3],0) as varchar) END AS [2016-10-13_3], CASE WHEN ISNULL(a.[2016-10-13_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_4],0) as varchar) END AS [2016-10-13_4], CASE WHEN ISNULL(a.[2016-10-13_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_9911],0) as varchar) END AS [2016-10-13_9911], CASE WHEN ISNULL(a.[2016-10-13_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-13_9922],0) as varchar) END AS [2016-10-13_9922], CASE WHEN ISNULL(a.[2016-10-14_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_1],0) as varchar) END AS [2016-10-14_1], CASE WHEN ISNULL(a.[2016-10-14_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_2],0) as varchar) END AS [2016-10-14_2], CASE WHEN ISNULL(a.[2016-10-14_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_3],0) as varchar) END AS [2016-10-14_3], CASE WHEN ISNULL(a.[2016-10-14_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_4],0) as varchar) END AS [2016-10-14_4], CASE WHEN ISNULL(a.[2016-10-14_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_9911],0) as varchar) END AS [2016-10-14_9911], CASE WHEN ISNULL(a.[2016-10-14_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-14_9922],0) as varchar) END AS [2016-10-14_9922], CASE WHEN ISNULL(a.[2016-10-15_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_1],0) as varchar) END AS [2016-10-15_1], CASE WHEN ISNULL(a.[2016-10-15_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_2],0) as varchar) END AS [2016-10-15_2], CASE WHEN ISNULL(a.[2016-10-15_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_3],0) as varchar) END AS [2016-10-15_3], CASE WHEN ISNULL(a.[2016-10-15_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_4],0) as varchar) END AS [2016-10-15_4], CASE WHEN ISNULL(a.[2016-10-15_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_9911],0) as varchar) END AS [2016-10-15_9911], CASE WHEN ISNULL(a.[2016-10-15_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-15_9922],0) as varchar) END AS [2016-10-15_9922], CASE WHEN ISNULL(a.[2016-10-16_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_1],0) as varchar) END AS [2016-10-16_1], CASE WHEN ISNULL(a.[2016-10-16_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_2],0) as varchar) END AS [2016-10-16_2], CASE WHEN ISNULL(a.[2016-10-16_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_3],0) as varchar) END AS [2016-10-16_3], CASE WHEN ISNULL(a.[2016-10-16_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_4],0) as varchar) END AS [2016-10-16_4], CASE WHEN ISNULL(a.[2016-10-16_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_9911],0) as varchar) END AS [2016-10-16_9911], CASE WHEN ISNULL(a.[2016-10-16_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-16_9922],0) as varchar) END AS [2016-10-16_9922], CASE WHEN ISNULL(a.[2016-10-17_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_1],0) as varchar) END AS [2016-10-17_1], CASE WHEN ISNULL(a.[2016-10-17_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_2],0) as varchar) END AS [2016-10-17_2], CASE WHEN ISNULL(a.[2016-10-17_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_3],0) as varchar) END AS [2016-10-17_3], CASE WHEN ISNULL(a.[2016-10-17_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_4],0) as varchar) END AS [2016-10-17_4], CASE WHEN ISNULL(a.[2016-10-17_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_9911],0) as varchar) END AS [2016-10-17_9911], CASE WHEN ISNULL(a.[2016-10-17_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-17_9922],0) as varchar) END AS [2016-10-17_9922], CASE WHEN ISNULL(a.[2016-10-18_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_1],0) as varchar) END AS [2016-10-18_1], CASE WHEN ISNULL(a.[2016-10-18_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_2],0) as varchar) END AS [2016-10-18_2], CASE WHEN ISNULL(a.[2016-10-18_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_3],0) as varchar) END AS [2016-10-18_3], CASE WHEN ISNULL(a.[2016-10-18_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_4],0) as varchar) END AS [2016-10-18_4], CASE WHEN ISNULL(a.[2016-10-18_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_9911],0) as varchar) END AS [2016-10-18_9911], CASE WHEN ISNULL(a.[2016-10-18_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-18_9922],0) as varchar) END AS [2016-10-18_9922], CASE WHEN ISNULL(a.[2016-10-19_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_1],0) as varchar) END AS [2016-10-19_1], CASE WHEN ISNULL(a.[2016-10-19_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_2],0) as varchar) END AS [2016-10-19_2], CASE WHEN ISNULL(a.[2016-10-19_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_3],0) as varchar) END AS [2016-10-19_3], CASE WHEN ISNULL(a.[2016-10-19_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_4],0) as varchar) END AS [2016-10-19_4], CASE WHEN ISNULL(a.[2016-10-19_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_9911],0) as varchar) END AS [2016-10-19_9911], CASE WHEN ISNULL(a.[2016-10-19_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-19_9922],0) as varchar) END AS [2016-10-19_9922], CASE WHEN ISNULL(a.[2016-10-20_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_1],0) as varchar) END AS [2016-10-20_1], CASE WHEN ISNULL(a.[2016-10-20_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_2],0) as varchar) END AS [2016-10-20_2], CASE WHEN ISNULL(a.[2016-10-20_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_3],0) as varchar) END AS [2016-10-20_3], CASE WHEN ISNULL(a.[2016-10-20_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_4],0) as varchar) END AS [2016-10-20_4], CASE WHEN ISNULL(a.[2016-10-20_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_9911],0) as varchar) END AS [2016-10-20_9911], CASE WHEN ISNULL(a.[2016-10-20_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-20_9922],0) as varchar) END AS [2016-10-20_9922], CASE WHEN ISNULL(a.[2016-10-21_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_1],0) as varchar) END AS [2016-10-21_1], CASE WHEN ISNULL(a.[2016-10-21_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_2],0) as varchar) END AS [2016-10-21_2], CASE WHEN ISNULL(a.[2016-10-21_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_3],0) as varchar) END AS [2016-10-21_3], CASE WHEN ISNULL(a.[2016-10-21_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_4],0) as varchar) END AS [2016-10-21_4], CASE WHEN ISNULL(a.[2016-10-21_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_9911],0) as varchar) END AS [2016-10-21_9911], CASE WHEN ISNULL(a.[2016-10-21_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-21_9922],0) as varchar) END AS [2016-10-21_9922], CASE WHEN ISNULL(a.[2016-10-22_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_1],0) as varchar) END AS [2016-10-22_1], CASE WHEN ISNULL(a.[2016-10-22_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_2],0) as varchar) END AS [2016-10-22_2], CASE WHEN ISNULL(a.[2016-10-22_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_3],0) as varchar) END AS [2016-10-22_3], CASE WHEN ISNULL(a.[2016-10-22_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_4],0) as varchar) END AS [2016-10-22_4], CASE WHEN ISNULL(a.[2016-10-22_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_9911],0) as varchar) END AS [2016-10-22_9911], CASE WHEN ISNULL(a.[2016-10-22_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-22_9922],0) as varchar) END AS [2016-10-22_9922], CASE WHEN ISNULL(a.[2016-10-23_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_1],0) as varchar) END AS [2016-10-23_1], CASE WHEN ISNULL(a.[2016-10-23_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_2],0) as varch...2016-10-23_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_3],0) as varchar) END AS [2016-10-23_3], CASE WHEN ISNULL(a.[2016-10-23_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_4],0) as varchar) END AS [2016-10-23_4], CASE WHEN ISNULL(a.[2016-10-23_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_9911],0) as varchar) END AS [2016-10-23_9911], CASE WHEN ISNULL(a.[2016-10-23_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-23_9922],0) as varchar) END AS [2016-10-23_9922], CASE WHEN ISNULL(a.[2016-10-24_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_1],0) as varchar) END AS [2016-10-24_1], CASE WHEN ISNULL(a.[2016-10-24_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_2],0) as varchar) END AS [2016-10-24_2], CASE WHEN ISNULL(a.[2016-10-24_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_3],0) as varchar) END AS [2016-10-24_3], CASE WHEN ISNULL(a.[2016-10-24_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_4],0) as varchar) END AS [2016-10-24_4], CASE WHEN ISNULL(a.[2016-10-24_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_9911],0) as varchar) END AS [2016-10-24_9911], CASE WHEN ISNULL(a.[2016-10-24_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-24_9922],0) as varchar) END AS [2016-10-24_9922], CASE WHEN ISNULL(a.[2016-10-25_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_1],0) as varchar) END AS [2016-10-25_1], CASE WHEN ISNULL(a.[2016-10-25_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_2],0) as varchar) END AS [2016-10-25_2], CASE WHEN ISNULL(a.[2016-10-25_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_3],0) as varchar) END AS [2016-10-25_3], CASE WHEN ISNULL(a.[2016-10-25_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_4],0) as varchar) END AS [2016-10-25_4], CASE WHEN ISNULL(a.[2016-10-25_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_9911],0) as varchar) END AS [2016-10-25_9911], CASE WHEN ISNULL(a.[2016-10-25_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-25_9922],0) as varchar) END AS [2016-10-25_9922], CASE WHEN ISNULL(a.[2016-10-26_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_1],0) as varchar) END AS [2016-10-26_1], CASE WHEN ISNULL(a.[2016-10-26_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_2],0) as varchar) END AS [2016-10-26_2], CASE WHEN ISNULL(a.[2016-10-26_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_3],0) as varchar) END AS [2016-10-26_3], CASE WHEN ISNULL(a.[2016-10-26_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_4],0) as varchar) END AS [2016-10-26_4], CASE WHEN ISNULL(a.[2016-10-26_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_9911],0) as varchar) END AS [2016-10-26_9911], CASE WHEN ISNULL(a.[2016-10-26_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-26_9922],0) as varchar) END AS [2016-10-26_9922], CASE WHEN ISNULL(a.[2016-10-27_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_1],0) as varchar) END AS [2016-10-27_1], CASE WHEN ISNULL(a.[2016-10-27_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_2],0) as varchar) END AS [2016-10-27_2], CASE WHEN ISNULL(a.[2016-10-27_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_3],0) as varchar) END AS [2016-10-27_3], CASE WHEN ISNULL(a.[2016-10-27_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_4],0) as varchar) END AS [2016-10-27_4], CASE WHEN ISNULL(a.[2016-10-27_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_9911],0) as varchar) END AS [2016-10-27_9911], CASE WHEN ISNULL(a.[2016-10-27_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-27_9922],0) as varchar) END AS [2016-10-27_9922], CASE WHEN ISNULL(a.[2016-10-28_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_1],0) as varchar) END AS [2016-10-28_1], CASE WHEN ISNULL(a.[2016-10-28_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_2],0) as varchar) END AS [2016-10-28_2], CASE WHEN ISNULL(a.[2016-10-28_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_3],0) as varchar) END AS [2016-10-28_3], CASE WHEN ISNULL(a.[2016-10-28_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_4],0) as varchar) END AS [2016-10-28_4], CASE WHEN ISNULL(a.[2016-10-28_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_9911],0) as varchar) END AS [2016-10-28_9911], CASE WHEN ISNULL(a.[2016-10-28_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-28_9922],0) as varchar) END AS [2016-10-28_9922], CASE WHEN ISNULL(a.[2016-10-29_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_1],0) as varchar) END AS [2016-10-29_1], CASE WHEN ISNULL(a.[2016-10-29_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_2],0) as varchar) END AS [2016-10-29_2], CASE WHEN ISNULL(a.[2016-10-29_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_3],0) as varchar) END AS [2016-10-29_3], CASE WHEN ISNULL(a.[2016-10-29_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_4],0) as varchar) END AS [2016-10-29_4], CASE WHEN ISNULL(a.[2016-10-29_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_9911],0) as varchar) END AS [2016-10-29_9911], CASE WHEN ISNULL(a.[2016-10-29_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-29_9922],0) as varchar) END AS [2016-10-29_9922], CASE WHEN ISNULL(a.[2016-10-30_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_1],0) as varchar) END AS [2016-10-30_1], CASE WHEN ISNULL(a.[2016-10-30_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_2],0) as varchar) END AS [2016-10-30_2], CASE WHEN ISNULL(a.[2016-10-30_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_3],0) as varchar) END AS [2016-10-30_3], CASE WHEN ISNULL(a.[2016-10-30_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_4],0) as varchar) END AS [2016-10-30_4], CASE WHEN ISNULL(a.[2016-10-30_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_9911],0) as varchar) END AS [2016-10-30_9911], CASE WHEN ISNULL(a.[2016-10-30_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-30_9922],0) as varchar) END AS [2016-10-30_9922], CASE WHEN ISNULL(a.[2016-10-31_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_1],0) as varchar) END AS [2016-10-31_1], CASE WHEN ISNULL(a.[2016-10-31_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_2],0) as varchar) END AS [2016-10-31_2], CASE WHEN ISNULL(a.[2016-10-31_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_3],0) as varchar) END AS [2016-10-31_3], CASE WHEN ISNULL(a.[2016-10-31_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_4],0) as varchar) END AS [2016-10-31_4], 
	CASE WHEN ISNULL(a.[2016-10-31_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_9911],0) as varchar) END AS [2016-10-31_9911], 
	CASE WHEN ISNULL(a.[2016-10-31_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2016-10-31_9922],0) as varchar) END AS [2016-10-31_9922]
FROM (
	SELECT 
		MARK_ID, 
		[2016-10-1_1], [2016-10-1_2], [2016-10-1_3], [2016-10-1_4], [2016-10-1_9911], [2016-10-1_9922], [2016-10-2_1], [2016-10-2_2], [2016-10-2_3], [2016-10-2_4], [2016-10-2_9911], [2016-10-2_9922], [2016-10-3_1], [2016-10-3_2], [2016-10-3_3], [2016-10-3_4], [2016-10-3_9911], [2016-10-3_9922], [2016-10-4_1], [2016-10-4_2], [2016-10-4_3], [2016-10-4_4], [2016-10-4_9911], [2016-10-4_9922], [2016-10-5_1], [2016-10-5_2], [2016-10-5_3], [2016-10-5_4], [2016-10-5_9911], [2016-10-5_9922], [2016-10-6_1], [2016-10-6_2], [2016-10-6_3], [2016-10-6_4], [2016-10-6_9911], [2016-10-6_9922], [2016-10-7_1], [2016-10-7_2], [2016-10-7_3], [2016-10-7_4], [2016-10-7_9911], [2016-10-7_9922], [2016-10-8_1], [2016-10-8_2], [2016-10-8_3], [2016-10-8_4], [2016-10-8_9911], [2016-10-8_9922], [2016-10-9_1], [2016-10-9_2], [2016-10-9_3], [2016-10-9_4], [2016-10-9_9911], [2016-10-9_9922], [2016-10-10_1], [2016-10-10_2], [2016-10-10_3], [2016-10-10_4], [2016-10-10_9911], [2016-10-10_9922], [2016-10-11_1], [2016-10-11_2], [2016-10-11_3], [2016-10-11_4], [2016-10-11_9911], [2016-10-11_9922], [2016-10-12_1], [2016-10-12_2], [2016-10-12_3], [2016-10-12_4], [2016-10-12_9911], [2016-10-12_9922], [2016-10-13_1], [2016-10-13_2], [2016-10-13_3], [2016-10-13_4], [2016-10-13_9911], [2016-10-13_9922], [2016-10-14_1], [2016-10-14_2], [2016-10-14_3], [2016-10-14_4], [2016-10-14_9911], [2016-10-14_9922], [2016-10-15_1], [2016-10-15_2], [2016-10-15_3], [2016-10-15_4], [2016-10-15_9911], [2016-10-15_9922], [2016-10-16_1], [2016-10-16_2], [2016-10-16_3], [2016-10-16_4], [2016-10-16_9911], [2016-10-16_9922], [2016-10-17_1], [2016-10-17_2], [2016-10-17_3], [2016-10-17_4], [2016-10-17_9911], [2016-10-17_9922], [2016-10-18_1], [2016-10-18_2], [2016-10-18_3], [2016-10-18_4], [2016-10-18_9911], [2016-10-18_9922], [2016-10-19_1], [2016-10-19_2], [2016-10-19_3], [2016-10-19_4], [2016-10-19_9911], [2016-10-19_9922], [2016-10-20_1], [2016-10-20_2], [2016-10-20_3], [2016-10-20_4], [2016-10-20_9911], [2016-10-20_9922], [2016-10-21_1], [2016-10-21_2], [2016-10-21_3], [2016-10-21_4], [2016-10-21_9911], [2016-10-21_9922], [2016-10-22_1], [2016-10-22_2], [2016-10-22_3], [2016-10-22_4], [2016-10-22_9911], [2016-10-22_9922], [2016-10-23_1], [2016-10-23_2], [2016-10-23_3], [2016-10-23_4], [2016-10-23_9911], [2016-10-23_9922], [2016-10-24_1], [2016-10-24_2], [2016-10-24_3], [2016-10-24_4], [2016-10-24_9911], [2016-10-24_9922], [2016-10-25_1], [2016-10-25_2], [2016-10-25_3], [2016-10-25_4], [2016-10-25_9911], [2016-10-25_9922], [2016-10-26_1], [2016-10-26_2], [2016-10-26_3], [2016-10-26_4], [2016-10-26_9911], [2016-10-26_9922], [2016-10-27_1], [2016-10-27_2], [2016-10-27_3], [2016-10-27_4], [2016-10-27_9911], [2016-10-27_9922], [2016-10-28_1], [2016-10-28_2], [2016-10-28_3], [2016-10-28_4], [2016-10-28_9911], [2016-10-28_9922], [2016-10-29_1], [2016-10-29_2], [2016-10-29_3], [2016-10-29_4], [2016-10-29_9911], [2016-10-29_9922], [2016-10-30_1], [2016-10-30_2], [2016-10-30_3], [2016-10-30_4], [2016-10-30_9911], [2016-10-30_9922], [2016-10-31_1], [2016-10-31_2], [2016-10-31_3], [2016-10-31_4], [2016-10-31_9911], [2016-10-31_9922]
	FROM (
		SELECT 
			MARK_ID, 
			DT+'_'+COL as COL, 
			VALUE
		FROM (
			
			SELECT 
				a.MARK_ID, a.DT, a.[1], a.[2], a.[3], a.[4], a.[9911], a.[9922]
			FROM (
				SELECT 
					MARK_ID, DT, [1], [2], [3], [4], [9911], [9922]
				FROM (
					SELECT 
						a.MARK_ID, a.REQUESTTYPE_ID, a.DT, 1 as VAL
					FROM (
						SELECT 
							a.ID, 
							b.MARK_ID, 
							c.REQUESTTYPE_ID, 
							datepart(day, datediff(day, 0, CONVERT(datetime, a.DT+' 00:00:01', 120))/7 * 7)/7 + 1 as NUMOFWK, 
							a.DT
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9911 as REQUESTTYPE_ID, a.DT, a.PRICESUM as VAL
					FROM (
						SELECT
							c.MARK_ID, b.DT, SUM(a.PRICESUM) as PRICESUM
						FROM (
							SELECT a.ID, SUM(a.PRICESUM) as PRICESUM
							FROM(
								SELECT a.ID, ISNULL(SUM(c.PRICE), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID = b.APPOINTMENT_ID
								LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID = c.ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.SERVICE_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.PART_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
								GROUP BY a.ID
							) a
							GROUP BY a.ID
						) a 
						INNER JOIN TBL_APPOINTMENT b ON a.ID=b.ID
						INNER JOIN TBL_PATIENT c ON b.PATIENT_ID=c.ID
						GROUP BY c.MARK_ID, b.DT
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9922 as REQUESTTYPE_ID, a.DT, a.CNTTP as VAL
					FROM (
						SELECT 
							b.MARK_ID, 
							a.DT, 
							COUNT(c.REQUESTTYPE_ID) as CNTTP
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2016 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=10
						GROUP BY b.MARK_ID, a.DT
					) a

				) a
				PIVOT (
					SUM(VAL) 
					FOR REQUESTTYPE_ID IN ([1], [2], [3], [4], [9911], [9922])
				) as SUMD
			) a
			
		) src
		UNPIVOT
		(
			VALUE FOR COL IN ([1], [2], [3], [4], [9911], [9922])
		) unpiv
	) a
	PIVOT (
		SUM(VALUE)
		FOR COL IN ([2016-10-1_1], [2016-10-1_2], [2016-10-1_3], [2016-10-1_4], [2016-10-1_9911], [2016-10-1_9922], [2016-10-2_1], [2016-10-2_2], [2016-10-2_3], [2016-10-2_4], [2016-10-2_9911], [2016-10-2_9922], [2016-10-3_1], [2016-10-3_2], [2016-10-3_3], [2016-10-3_4], [2016-10-3_9911], [2016-10-3_9922], [2016-10-4_1], [2016-10-4_2], [2016-10-4_3], [2016-10-4_4], [2016-10-4_9911], [2016-10-4_9922], [2016-10-5_1], [2016-10-5_2], [2016-10-5_3], [2016-10-5_4], [2016-10-5_9911], [2016-10-5_9922], [2016-10-6_1], [2016-10-6_2], [2016-10-6_3], [2016-10-6_4], [2016-10-6_9911], [2016-10-6_9922], [2016-10-7_1], [2016-10-7_2], [2016-10-7_3], [2016-10-7_4], [2016-10-7_9911], [2016-10-7_9922], [2016-10-8_1], [2016-10-8_2], [2016-10-8_3], [2016-10-8_4], [2016-10-8_9911], [2016-10-8_9922], [2016-10-9_1], [2016-10-9_2], [2016-10-9_3], [2016-10-9_4], [2016-10-9_9911], [2016-10-9_9922], [2016-10-10_1], [2016-10-10_2], [2016-10-10_3], [2016-10-10_4], [2016-10-10_9911], [2016-10-10_9922], [2016-10-11_1], [2016-10-11_2], [2016-10-11_3], [2016-10-11_4], [2016-10-11_9911], [2016-10-11_9922], [2016-10-12_1], [2016-10-12_2], [2016-10-12_3], [2016-10-12_4], [2016-10-12_9911], [2016-10-12_9922], [2016-10-13_1], [2016-10-13_2], [2016-10-13_3], [2016-10-13_4], [2016-10-13_9911], [2016-10-13_9922], [2016-10-14_1], [2016-10-14_2], [2016-10-14_3], [2016-10-14_4], [2016-10-14_9911], [2016-10-14_9922], [2016-10-15_1], [2016-10-15_2], [2016-10-15_3], [2016-10-15_4], [2016-10-15_9911], [2016-10-15_9922], [2016-10-16_1], [2016-10-16_2], [2016-10-16_3], [2016-10-16_4], [2016-10-16_9911], [2016-10-16_9922], [2016-10-17_1], [2016-10-17_2], [2016-10-17_3], [2016-10-17_4], [2016-10-17_9911], [2016-10-17_9922], [2016-10-18_1], [2016-10-18_2], [2016-10-18_3], [2016-10-18_4], [2016-10-18_9911], [2016-10-18_9922], [2016-10-19_1], [2016-10-19_2], [2016-10-19_3], [2016-10-19_4], [2016-10-19_9911], [2016-10-19_9922], [2016-10-20_1], [2016-10-20_2], [2016-10-20_3], [2016-10-20_4], [2016-10-20_9911], [2016-10-20_9922], [2016-10-21_1], [2016-10-21_2], [2016-10-21_3], [2016-10-21_4], [2016-10-21_9911], [2016-10-21_9922], [2016-10-22_1], [2016-10-22_2], [2016-10-22_3], [2016-10-22_4], [2016-10-22_9911], [2016-10-22_9922], [2016-10-23_1], [2016-10-23_2], [2016-10-23_3], [2016-10-23_4], [2016-10-23_9911], [2016-10-23_9922], [2016-10-24_1], [2016-10-24_2], [2016-10-24_3], [2016-10-24_4], [2016-10-24_9911], [2016-10-24_9922], [2016-10-25_1], [2016-10-25_2], [2016-10-25_3], [2016-10-25_4], [2016-10-25_9911], [2016-10-25_9922], [2016-10-26_1], [2016-10-26_2], [2016-10-26_3], [2016-10-26_4], [2016-10-26_9911], [2016-10-26_9922], [2016-10-27_1], [2016-10-27_2], [2016-10-27_3], [2016-10-27_4], [2016-10-27_9911], [2016-10-27_9922], [2016-10-28_1], [2016-10-28_2], [2016-10-28_3], [2016-10-28_4], [2016-10-28_9911], [2016-10-28_9922], [2016-10-29_1], [2016-10-29_2], [2016-10-29_3], [2016-10-29_4], [2016-10-29_9911], [2016-10-29_9922], [2016-10-30_1], [2016-10-30_2], [2016-10-30_3], [2016-10-30_4], [2016-10-30_9911], [2016-10-30_9922], [2016-10-31_1], [2016-10-31_2], [2016-10-31_3], [2016-10-31_4], [2016-10-31_9911], [2016-10-31_9922])
	) as PIV
) a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
ORDER BY b.NAME

SELECT * FROM TBL_PATIENT

SELECT 
	ISNULL(CAST(ID as VARCHAR),\'\')+\'~\'+
	ISNULL(CODE,\'\')+\'~\'+
	ISNULL(NAME,\'\')+\'~\'+
	ISNULL(CAST(TYPE as VARCHAR),\'\')+\'~\'+
	ISNULL(TEL,\'\')+\'~\'+
	ISNULL(TEL2,\'\')+\'~\'+
	ISNULL(EMAIL,\'\')+\'~\'+
	ISNULL(ADDRESS,\'\')+\'~\'+
	ISNULL(CAST(MARK_ID as VARCHAR),\'\')+\'~\'+
	ISNULL(CAST(PRODUCEDYEAR as VARCHAR),\'\')+\'~\'+
	ISNULL(AUTONO,\'\')+\'~\'+
	ISNULL(VINNO,\'\')+\'~\'+
	ISNULL(CAST(FUELTYPE as VARCHAR),\'\')+\'~\'+
	ISNULL(CAST(TRANSMISSIONTYPE as VARCHAR),\'\')+\'~\'+
	ISNULL(CAST(EMERGENCYTEL as varchar),\'\')+\'~\'+
	ISNULL(CAST(EMERGENCYTELTYPE as varchar),\'\')+\'~\'+
	ISNULL(CAST(EMERGENCYPERSONNAME as varchar),\'\')+\'~\'+
	ISNULL(CAST(ZAALTTYPE as varchar),\'\')+\'~\'+
	ISNULL(CAST(ISMYSOLD as varchar),\'\') FROM TBL_PATIENT

SELECT * FROM TBL_APPOINTMENT

SELECT * 
FROM ( 
	SELECT ROW_NUMBER() OVER(ORDER BY a.CODE DESC) AS RW, a.ID, a.CODE, a.NAME, CASE WHEN a.[TYPE]=1 THEN N'Хувь хүн' ELSE N'Байгууллага' END as [TYPE], b.NAME as MARK_NAME, a.PRODUCEDYEAR, a.AUTONO, a.VINNO, ISNULL(c.CNT,0) as APP_CNT, CASE WHEN a.ISMYSOLD=1 THEN 'warning' ELSE null END AS ISMYSOLD, ISNULL(d.ZAALT,0) as ZAALT 
	FROM TBL_PATIENT a 
	INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
	LEFT JOIN (
		SELECT a.PATIENT_ID, COUNT(a.ID) as CNT 
		FROM TBL_APPOINTMENT a 
		INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND b.ISACTIVESHOW=1
		GROUP BY a.PATIENT_ID
	) c ON a.ID = c.PATIENT_ID
	LEFT JOIN (
        SELECT a.PATIENT_ID, b.MILEAGE as ZAALT
        FROM (
		    SELECT a.PATIENT_ID, MAX(a.ID) as APPID 
		    FROM TBL_APPOINTMENT a 
		    INNER JOIN TBL_APPOINTMENT_TYPE b ON a.APPOINTMENT_TYPE_ID=b.ID 
		    WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) AND b.ISACTIVESHOW=1
		    GROUP BY a.PATIENT_ID
        ) a
        INNER JOIN TBL_APPOINTMENT b ON a.APPID=b.ID
	) d ON a.ID = d.PATIENT_ID
	WHERE a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) 
) a 
WHERE RW>=1 AND RW<=100


SELECT dbo.FUNC_GETUSERNUM(1)

SELECT * FROM TBL_USER
SELECT * FROM TBL_ROLE

UPDATE TBL_USER SET USERNAME='770124' where ID=4


UPDATE TBL_APPOINTMENT SET DT='2016-11-14' WHERE DT='2016-11-13'

SELECT * FROM TBL_APPOINTMENT_PART WHERE APPOINTMENT_ID=10008

SELECT * FROM TBL_APPOINTMENT WHERE ID=70020

SELECT * FROM TBL_SELLCARS

SELECT * FROM TBL_SOLDCARCUSTOMER_SELLCARS

SELECT a.ID, a.NAME, a.POSNAME
FROM ( 
	SELECT '' as ID, N'- Сонго -' as NAME, null as POSNAME 
	UNION ALL 
	SELECT CAST(a.ID as varchar) as ID, a.FNAME+'.'+LEFT(a.LNAME,1)+' | '+b.NAME as NAME, b.NAME as POSNAME
	FROM TBL_STAFF a 
	INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
	WHERE a.ISACTIVE=1 AND a.CLINIC_ID=1
) a 
ORDER BY a.POSNAME, a.NAME

SELECT * FROM TBL_REQUESTTYPE


DECLARE @cols AS NVARCHAR(MAX), @cols2 AS NVARCHAR(MAX), @cols3 AS NVARCHAR(MAX), @query AS NVARCHAR(MAX); SET @cols = STUFF(( SELECT ',' + QUOTENAME(c.NAME) FROM TBL_REQUESTTYPE c WHERE c.CLINIC_ID=1 ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'') SET @cols2 = STUFF(( SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME) FROM TBL_REQUESTTYPE c WHERE c.CLINIC_ID = 1 ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'') SET @cols3 = STUFF(( SELECT ',a.' + QUOTENAME(c.NAME) FROM TBL_REQUESTTYPE c WHERE c.CLINIC_ID = 1 ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'') set @query = 'SELECT ROW_NUMBER() OVER(ORDER BY a.MARK_NAME DESC) AS RW, a.MARK_ID, a.MARK_NAME, APPOINTMENT_CNT, '+@cols3+' FROM ( SELECT a.MARK_ID, a.MARK_NAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, '+@cols2+' FROM ( SELECT a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID, '+@cols2+' FROM ( SELECT MARK_ID, MARK_NAME, APPOINTMENT_ID, ' + @cols + ' FROM ( SELECT c.ID as MARK_ID, c.NAME as MARK_NAME, a.ID as APPOINTMENT_ID, f.NAME as REQUEST_NAME FROM TBL_APPOINTMENT a INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID INNER JOIN TBL_AUTOMARK c ON b.MARK_ID=c.ID LEFT JOIN TBL_APPOINTMENT_REQUESTTYPE d ON a.ID=d.APPOINTMENT_ID LEFT JOIN TBL_REQUESTTYPE f ON d.REQUESTTYPE_ID=f.ID INNER JOIN TBL_APPOINTMENT_TYPE g ON a.APPOINTMENT_TYPE_ID=g.ID AND g.ISACTIVESHOW=1 WHERE a.CLINIC_ID=1 AND a.DT BETWEEN ''2016-10-01'' AND ''2016-11-01'' ) x pivot ( COUNT(REQUEST_NAME) for REQUEST_NAME in (' + @cols + ') ) p ) a GROUP BY a.MARK_ID, a.MARK_NAME, a.APPOINTMENT_ID ) a GROUP BY a.MARK_ID, a.MARK_NAME ) a ORDER BY a.MARK_NAME DESC' execute(@query)

SELECT * FROM TBL_APPOINTMENT

ALTER TABLE TBL_APPOINTMENT ADD APPCANCELINFO NVARCHAR(1500);

SELECT * FROM TBL_STAFF
SELECT * FROM TBL_STAFF_POSITION
SELECT * FROM TBL_JOBPOSITION
SELECT STAFF_POSITION_ID FROM TBL_JOBPOSITION WHERE STAFF_POSITION_ID IS NOT NULL

SELECT
	a.ID, a.STAFF_POSITION_ID, b.NAME as STAFF_POSITION_NAME, a.FNAME+'. '+LEFT(a.LNAME,1) as STAFFNAME
FROM TBL_STAFF a 
INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID
WHERE a.CLINIC_ID=1 AND a.STAFF_POSITION_ID IN (SELECT STAFF_POSITION_ID FROM TBL_JOBPOSITION WHERE STAFF_POSITION_ID IS NOT NULL)
ORDER BY b.NAME, a.FNAME+'. '+LEFT(a.LNAME,1)

SELECT * FROM TBL_APPOINTMENT_TYPE
SELECT * FROM TBL_APPOINTMENT
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_REPAIRTYPE

SELECT STUFF(( SELECT ',a.' + QUOTENAME(c.NAME) 
FROM TBL_REPAIRTYPE c 
WHERE c.CLINIC_ID= 1 
ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'')  

DECLARE @cols AS NVARCHAR(MAX), @cols2 AS NVARCHAR(MAX), @cols3 AS NVARCHAR(MAX), @query  AS NVARCHAR(MAX);  
SET @cols = STUFF(( SELECT ',' + QUOTENAME(c.NAME) 
FROM TBL_REPAIRTYPE c 
WHERE c.CLINIC_ID=1 
ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'') 
SET @cols2 = STUFF(( SELECT ',SUM(a.' + QUOTENAME(c.NAME)+') as '+QUOTENAME(c.NAME) 
FROM TBL_REPAIRTYPE c 
WHERE c.CLINIC_ID=1 
ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'') 
SET @cols3 = STUFF(( SELECT ',a.' + QUOTENAME(c.NAME) 
FROM TBL_REPAIRTYPE c 
WHERE c.CLINIC_ID= 1 
ORDER BY c.ID FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)') ,1,1,'')  
set @query = 'SELECT ROW_NUMBER() OVER(ORDER BY  a.STAFF_POSITION_NAME, a.STAFFNAME ASC) AS RW, a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_CNT, a.SUMPRICE, '+@cols3+' FROM ( SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, SUM(a.SUMPRICE) as SUMPRICE, '+@cols2+' FROM ( SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMPRICE, '+@cols2+' FROM ( SELECT STAFF_ID, STAFF_POSITION_ID, STAFF_POSITION_NAME, STAFFNAME, APPOINTMENT_ID, SUMPRICE, ' + @cols + ' FROM ( SELECT a.STAFF_ID, b.STAFF_POSITION_ID, c.NAME as STAFF_POSITION_NAME, b.FNAME+''. ''+LEFT(b.LNAME,1) as STAFFNAME, a.APPOINTMENT_ID, a.SUMPRICE, f.NAME as REPAIR_NAME FROM ( SELECT a.STAFF_ID, a.APPOINTMENT_ID, SUM((ISNULL(c.SERVICE_PRICE,0)*ISNULL(c.CNT,0))) as SUMPRICE FROM ( SELECT a.ID as APPOINTMENT_ID, 10 as STAFF_ID FROM TBL_APPOINTMENT a INNER JOIN TBL_APPOINTMENT_REPAIR b ON a.ID=b.APPOINTMENT_ID INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID AND c.ISACTIVESHOW=1 WHERE a.CLINIC_ID=1 AND a.DT BETWEEN ''2016-11-12'' AND ''2016-11-12'' AND (b.MECHANICAL_STAFFID=10 OR b.SENIORMECHANICAL_STAFFID=10 OR b.SERVICECONSULTANT_STAFFID=10) GROUP BY a.ID ) a INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID LEFT JOIN TBL_APPOINTMENT_SERVICE c ON a.APPOINTMENT_ID=c.APPOINTMENT_ID INNER JOIN TBL_APPOINTMENT_TYPE d ON b.APPOINTMENT_TYPE_ID=d.ID AND d.ISACTIVESHOW=1 GROUP BY a.STAFF_ID, a.APPOINTMENT_ID ) a INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID INNER JOIN TBL_STAFF_POSITION c ON b.STAFF_POSITION_ID=c.ID LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.APPOINTMENT_ID=d.APPOINTMENT_ID LEFT JOIN TBL_REPAIRTYPE f ON d.REPAIRTYPE_ID=f.ID ) x pivot ( COUNT(REPAIR_NAME) for REPAIR_NAME in (' + @cols + ') ) p ) a GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMPRICE ) a GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME ) a ORDER BY a.STAFF_POSITION_NAME, a.STAFFNAME ASC' execute(@query)


SELECT ROW_NUMBER() OVER(ORDER BY  a.STAFF_POSITION_NAME, a.STAFFNAME ASC) AS RW, a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_CNT, a.SUMPRICE, '+@cols3+' 
FROM ( 
	SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, SUM(a.SUMPRICE) as SUMPRICE, '+@cols2+' 
	FROM ( 
		SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMPRICE, '+@cols2+' 
		FROM ( 
			SELECT STAFF_ID, STAFF_POSITION_ID, STAFF_POSITION_NAME, STAFFNAME, APPOINTMENT_ID, SUMPRICE, ' + @cols + ' 
			FROM ( 

				SELECT a.STAFF_ID, b.STAFF_POSITION_ID, c.NAME as STAFF_POSITION_NAME, b.FNAME+'. '+LEFT(b.LNAME,1) as STAFFNAME, a.APPOINTMENT_ID, a.SUMCNT, a.SUMPRICE, f.NAME as REPAIR_NAME
				FROM (
					SELECT a.STAFF_ID, a.APPOINTMENT_ID, SUM(c.CNT) as SUMCNT, SUM((ISNULL(c.SERVICE_PRICE,0)*ISNULL(c.CNT,0))) as SUMPRICE 
					FROM (
						SELECT a.ID as APPOINTMENT_ID, 10 as STAFF_ID
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_APPOINTMENT_REPAIR b ON a.ID=b.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID AND c.ISACTIVESHOW=1 
						WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2016-11-12' AND '2016-11-12' AND (b.MECHANICAL_STAFFID=10 OR b.SENIORMECHANICAL_STAFFID=10 OR b.SERVICECONSULTANT_STAFFID=10)
						GROUP BY a.ID
					) a 
					INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
					LEFT JOIN TBL_APPOINTMENT_SERVICE c ON a.APPOINTMENT_ID=c.APPOINTMENT_ID
					INNER JOIN TBL_APPOINTMENT_TYPE d ON b.APPOINTMENT_TYPE_ID=d.ID AND d.ISACTIVESHOW=1 
					GROUP BY a.STAFF_ID, a.APPOINTMENT_ID
				) a
				INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID
				INNER JOIN TBL_STAFF_POSITION c ON b.STAFF_POSITION_ID=c.ID
				LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.APPOINTMENT_ID=d.APPOINTMENT_ID 
				LEFT JOIN TBL_REPAIRTYPE f ON d.REPAIRTYPE_ID=f.ID 

			) x pivot ( 
				COUNT(REPAIR_NAME) 
				for REPAIR_NAME in (' + @cols + ') 
			) p 
		) a 
		GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMPRICE 
	) a 
	GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME 
) a 
ORDER BY a.STAFF_POSITION_NAME, a.STAFFNAME ASC

SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE WHERE APPOINTMENT_ID=70020

SELECT ROW_NUMBER() OVER(ORDER BY  a.STAFF_POSITION_NAME, a.STAFFNAME ASC) AS RW, a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_CNT, a.SUMCNT, a.SUMPRICE, '+@cols3+' 
FROM ( 
	SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, COUNT(a.APPOINTMENT_ID) as APPOINTMENT_CNT, SUM(a.SUMCNT) as SUMCNT, SUM(a.SUMPRICE) as SUMPRICE, '+@cols2+' 
	FROM ( 
		SELECT a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMCNT, a.SUMPRICE, '+@cols2+' 
		FROM ( 
			SELECT STAFF_ID, STAFF_POSITION_ID, STAFF_POSITION_NAME, STAFFNAME, APPOINTMENT_ID, SUMCNT, SUMPRICE, ' + @cols + ' 
			FROM ( 

				SELECT a.STAFF_ID, b.STAFF_POSITION_ID, c.NAME as STAFF_POSITION_NAME, b.FNAME+'. '+LEFT(b.LNAME,1) as STAFFNAME, a.APPOINTMENT_ID, a.SUMCNT, a.SUMPRICE, f.NAME as DIAGNOSTICTYPE_NAME
				FROM (
					SELECT a.STAFF_ID, a.APPOINTMENT_ID, SUM(c.CNT) as SUMCNT, SUM((ISNULL(c.PRICE,0)*ISNULL(c.CNT,0))) as SUMPRICE 
					FROM (
						SELECT a.ID as APPOINTMENT_ID, 10 as STAFF_ID
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_APPOINTMENT_DIAGNOSTIC b ON a.ID=b.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID AND c.ISACTIVESHOW=1 
						WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2016-11-13' AND '2016-11-13' AND (b.MECHANICAL_STAFFID=10 OR b.SENIORMECHANICAL_STAFFID=10 OR b.SERVICECONSULTANT_STAFFID=10)
						GROUP BY a.ID
					) a 
					INNER JOIN TBL_APPOINTMENT b ON a.APPOINTMENT_ID=b.ID
					LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE c ON a.APPOINTMENT_ID=c.APPOINTMENT_ID
					INNER JOIN TBL_APPOINTMENT_TYPE d ON b.APPOINTMENT_TYPE_ID=d.ID AND d.ISACTIVESHOW=1 
					GROUP BY a.STAFF_ID, a.APPOINTMENT_ID
				) a
				INNER JOIN TBL_STAFF b ON a.STAFF_ID=b.ID
				INNER JOIN TBL_STAFF_POSITION c ON b.STAFF_POSITION_ID=c.ID
				LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE d ON a.APPOINTMENT_ID=d.APPOINTMENT_ID 
				LEFT JOIN TBL_DIAGNOSTICTYPE f ON d.DIAGNOSTICTYPE_ID=f.ID 

			) x pivot ( 
				COUNT(REPAIR_NAME) 
				for REPAIR_NAME in (' + @cols + ') 
			) p 
		) a 
		GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME, a.APPOINTMENT_ID, a.SUMCNT, a.SUMPRICE 
	) a 
	GROUP BY a.STAFF_ID, a.STAFF_POSITION_ID, a.STAFF_POSITION_NAME, a.STAFFNAME 
) a 
ORDER BY a.STAFF_POSITION_NAME, a.STAFFNAME ASC



SELECT a.ID as APPOINTMENT_ID, SUM((ISNULL(b.SERVICE_PRICE,0)*ISNULL(b.CNT,0))) as SUMPRICE 
FROM TBL_APPOINTMENT a 
LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID=b.APPOINTMENT_ID 
INNER JOIN TBL_APPOINTMENT_TYPE c ON a.APPOINTMENT_TYPE_ID=c.ID AND c.ISACTIVESHOW=1 
WHERE a.CLINIC_ID=1 AND a.DT BETWEEN '2016-11-12' AND '2016-11-12' 
GROUP BY a.ID

SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_SERVICE

SELECT * FROM TBL_SELLCARS

EXEC CheckLogin N'770101', N'gunnirvana'

SELECT * FROM TBL_PART
SELECT * FROM TBL_PART_TYPE


UPDATE TBL_APPOINTMENT SET DT='2018-09-13' WHERE DT='2018-06-04'
UPDATE TBL_APPOINTMENT SET DT='2018-03-14' WHERE DT<>'2018-03-14'

SELECT COUNT(1) as CNT FROM TBL_APPOINTMENT WHERE DT=N'2017-01-19'


SELECT * FROM TBL_APPOINTMENT ORDER BY DT      
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE

SELECT TOP 10 AUTONO FROM TBL_PATIENT WHERE AUTONO LIKE N'3%' ORDER BY AUTONO ASC 
SELECT TOP 10 VINNO FROM TBL_PATIENT WHERE VINNO LIKE N'3%' ORDER BY VINNO ASC 

SELECT
	ROW_NUMBER() OVER(ORDER BY b.NAME ASC) AS RW, 
	a.MARK_ID, 
	b.NAME as MARK_NAME, 
	CASE WHEN ISNULL(a.[2017-06-01_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_1],0) as varchar) END AS [2017-06-01_1], CASE WHEN ISNULL(a.[2017-06-01_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_2],0) as varchar) END AS [2017-06-01_2], CASE WHEN ISNULL(a.[2017-06-01_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_3],0) as varchar) END AS [2017-06-01_3], CASE WHEN ISNULL(a.[2017-06-01_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_4],0) as varchar) END AS [2017-06-01_4], CASE WHEN ISNULL(a.[2017-06-01_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_9911],0) as varchar) END AS [2017-06-01_9911], CASE WHEN ISNULL(a.[2017-06-01_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-01_9922],0) as varchar) END AS [2017-06-01_9922], CASE WHEN ISNULL(a.[2017-06-02_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_1],0) as varchar) END AS [2017-06-02_1], CASE WHEN ISNULL(a.[2017-06-02_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_2],0) as varchar) END AS [2017-06-02_2], CASE WHEN ISNULL(a.[2017-06-02_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_3],0) as varchar) END AS [2017-06-02_3], CASE WHEN ISNULL(a.[2017-06-02_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_4],0) as varchar) END AS [2017-06-02_4], CASE WHEN ISNULL(a.[2017-06-02_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_9911],0) as varchar) END AS [2017-06-02_9911], CASE WHEN ISNULL(a.[2017-06-02_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-02_9922],0) as varchar) END AS [2017-06-02_9922], CASE WHEN ISNULL(a.[2017-06-03_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_1],0) as varchar) END AS [2017-06-03_1], CASE WHEN ISNULL(a.[2017-06-03_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_2],0) as varchar) END AS [2017-06-03_2], CASE WHEN ISNULL(a.[2017-06-03_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_3],0) as varchar) END AS [2017-06-03_3], CASE WHEN ISNULL(a.[2017-06-03_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_4],0) as varchar) END AS [2017-06-03_4], CASE WHEN ISNULL(a.[2017-06-03_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_9911],0) as varchar) END AS [2017-06-03_9911], CASE WHEN ISNULL(a.[2017-06-03_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-03_9922],0) as varchar) END AS [2017-06-03_9922], CASE WHEN ISNULL(a.[2017-06-04_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_1],0) as varchar) END AS [2017-06-04_1], CASE WHEN ISNULL(a.[2017-06-04_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_2],0) as varchar) END AS [2017-06-04_2], CASE WHEN ISNULL(a.[2017-06-04_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_3],0) as varchar) END AS [2017-06-04_3], CASE WHEN ISNULL(a.[2017-06-04_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_4],0) as varchar) END AS [2017-06-04_4], CASE WHEN ISNULL(a.[2017-06-04_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_9911],0) as varchar) END AS [2017-06-04_9911], CASE WHEN ISNULL(a.[2017-06-04_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-04_9922],0) as varchar) END AS [2017-06-04_9922], CASE WHEN ISNULL(a.[2017-06-05_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_1],0) as varchar) END AS [2017-06-05_1], CASE WHEN ISNULL(a.[2017-06-05_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_2],0) as varchar) END AS [2017-06-05_2], CASE WHEN ISNULL(a.[2017-06-05_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_3],0) as varchar) END AS [2017-06-05_3], CASE WHEN ISNULL(a.[2017-06-05_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_4],0) as varchar) END AS [2017-06-05_4], CASE WHEN ISNULL(a.[2017-06-05_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_9911],0) as varchar) END AS [2017-06-05_9911], CASE WHEN ISNULL(a.[2017-06-05_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-05_9922],0) as varchar) END AS [2017-06-05_9922], CASE WHEN ISNULL(a.[2017-06-06_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_1],0) as varchar) END AS [2017-06-06_1], CASE WHEN ISNULL(a.[2017-06-06_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_2],0) as varchar) END AS [2017-06-06_2], CASE WHEN ISNULL(a.[2017-06-06_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_3],0) as varchar) END AS [2017-06-06_3], CASE WHEN ISNULL(a.[2017-06-06_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_4],0) as varchar) END AS [2017-06-06_4], CASE WHEN ISNULL(a.[2017-06-06_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_9911],0) as varchar) END AS [2017-06-06_9911], CASE WHEN ISNULL(a.[2017-06-06_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-06_9922],0) as varchar) END AS [2017-06-06_9922], CASE WHEN ISNULL(a.[2017-06-07_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_1],0) as varchar) END AS [2017-06-07_1], CASE WHEN ISNULL(a.[2017-06-07_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_2],0) as varchar) END AS [2017-06-07_2], CASE WHEN ISNULL(a.[2017-06-07_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_3],0) as varchar) END AS [2017-06-07_3], CASE WHEN ISNULL(a.[2017-06-07_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_4],0) as varchar) END AS [2017-06-07_4], CASE WHEN ISNULL(a.[2017-06-07_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_9911],0) as varchar) END AS [2017-06-07_9911], CASE WHEN ISNULL(a.[2017-06-07_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-07_9922],0) as varchar) END AS [2017-06-07_9922], CASE WHEN ISNULL(a.[2017-06-08_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_1],0) as varchar) END AS [2017-06-08_1], CASE WHEN ISNULL(a.[2017-06-08_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_2],0) as varchar) END AS [2017-06-08_2], CASE WHEN ISNULL(a.[2017-06-08_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_3],0) as varchar) END AS [2017-06-08_3], CASE WHEN ISNULL(a.[2017-06-08_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_4],0) as varchar) END AS [2017-06-08_4], CASE WHEN ISNULL(a.[2017-06-08_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_9911],0) as varchar) END AS [2017-06-08_9911], CASE WHEN ISNULL(a.[2017-06-08_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-08_9922],0) as varchar) END AS [2017-06-08_9922], CASE WHEN ISNULL(a.[2017-06-09_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_1],0) as varchar) END AS [2017-06-09_1], CASE WHEN ISNULL(a.[2017-06-09_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_2],0) as varchar) END AS [2017-06-09_2], CASE WHEN ISNULL(a.[2017-06-09_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_3],0) as varchar) END AS [2017-06-09_3], CASE WHEN ISNULL(a.[2017-06-09_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_4],0) as varchar) END AS [2017-06-09_4], CASE WHEN ISNULL(a.[2017-06-09_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_9911],0) as varchar) END AS [2017-06-09_9911], CASE WHEN ISNULL(a.[2017-06-09_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-09_9922],0) as varchar) END AS [2017-06-09_9922], CASE WHEN ISNULL(a.[2017-06-10_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_1],0) as varchar) END AS [2017-06-10_1], CASE WHEN ISNULL(a.[2017-06-10_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_2],0) as varchar) END AS [2017-06-10_2], CASE WHEN ISNULL(a.[2017-06-10_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_3],0) as varchar) END AS [2017-06-10_3], CASE WHEN ISNULL(a.[2017-06-10_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_4],0) as varchar) END AS [2017-06-10_4], CASE WHEN ISNULL(a.[2017-06-10_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_9911],0) as varchar) END AS [2017-06-10_9911], CASE WHEN ISNULL(a.[2017-06-10_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-10_9922],0) as varchar) END AS [2017-06-10_9922], CASE WHEN ISNULL(a.[2017-06-11_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_1],0) as varchar) END AS [2017-06-11_1], CASE WHEN ISNULL(a.[2017-06-11_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_2],0) as varchar) END AS [2017-06-11_2], CASE WHEN ISNULL(a.[2017-06-11_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_3],0) as varchar) END AS [2017-06-11_3], CASE WHEN ISNULL(a.[2017-06-11_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_4],0) as varchar) END AS [2017-06-11_4], CASE WHEN ISNULL(a.[2017-06-11_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_9911],0) as varchar) END AS [2017-06-11_9911], CASE WHEN ISNULL(a.[2017-06-11_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-11_9922],0) as varchar) END AS [2017-06-11_9922], CASE WHEN ISNULL(a.[2017-06-12_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_1],0) as varchar) END AS [2017-06-12_1], CASE WHEN ISNULL(a.[2017-06-12_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_2],0) as varchar) END AS [2017-06-12_2], CASE WHEN ISNULL(a.[2017-06-12_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_3],0) as varchar) END AS [2017-06-12_3], CASE WHEN ISNULL(a.[2017-06-12_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_4],0) as varchar) END AS [2017-06-12_4], CASE WHEN ISNULL(a.[2017-06-12_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_9911],0) as varchar) END AS [2017-06-12_9911], CASE WHEN ISNULL(a.[2017-06-12_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-12_9922],0) as varchar) END AS [2017-06-12_9922], CASE WHEN ISNULL(a.[2017-06-13_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_1],0) as varchar) END AS [2017-06-13_1], CASE WHEN ISNULL(a.[2017-06-13_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_2],0) as varchar) END AS [2017-06-13_2], CASE WHEN ISNULL(a.[2017-06-13_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_3],0) as varchar) END AS [2017-06-13_3], CASE WHEN ISNULL(a.[2017-06-13_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_4],0) as varchar) END AS [2017-06-13_4], CASE WHEN ISNULL(a.[2017-06-13_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_9911],0) as varchar) END AS [2017-06-13_9911], CASE WHEN ISNULL(a.[2017-06-13_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-13_9922],0) as varchar) END AS [2017-06-13_9922], CASE WHEN ISNULL(a.[2017-06-14_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_1],0) as varchar) END AS [2017-06-14_1], CASE WHEN ISNULL(a.[2017-06-14_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_2],0) as varchar) END AS [2017-06-14_2], CASE WHEN ISNULL(a.[2017-06-14_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_3],0) as varchar) END AS [2017-06-14_3], CASE WHEN ISNULL(a.[2017-06-14_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_4],0) as varchar) END AS [2017-06-14_4], CASE WHEN ISNULL(a.[2017-06-14_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_9911],0) as varchar) END AS [2017-06-14_9911], CASE WHEN ISNULL(a.[2017-06-14_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-14_9922],0) as varchar) END AS [2017-06-14_9922], CASE WHEN ISNULL(a.[2017-06-15_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_1],0) as varchar) END AS [2017-06-15_1], CASE WHEN ISNULL(a.[2017-06-15_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_2],0) as varchar) END AS [2017-06-15_2], CASE WHEN ISNULL(a.[2017-06-15_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_3],0) as varchar) END AS [2017-06-15_3], CASE WHEN ISNULL(a.[2017-06-15_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_4],0) as varchar) END AS [2017-06-15_4], CASE WHEN ISNULL(a.[2017-06-15_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_9911],0) as varchar) END AS [2017-06-15_9911], CASE WHEN ISNULL(a.[2017-06-15_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-15_9922],0) as varchar) END AS [2017-06-15_9922], CASE WHEN ISNULL(a.[2017-06-16_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_1],0) as varchar) END AS [2017-06-16_1], CASE WHEN ISNULL(a.[2017-06-16_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_2],0) as varchar) END AS [2017-06-16_2], CASE WHEN ISNULL(a.[2017-06-16_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_3],0) as varchar) END AS [2017-06-16_3], CASE WHEN ISNULL(a.[2017-06-16_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_4],0) as varchar) END AS [2017-06-16_4], CASE WHEN ISNULL(a.[2017-06-16_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_9911],0) as varchar) END AS [2017-06-16_9911], CASE WHEN ISNULL(a.[2017-06-16_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-16_9922],0) as varchar) END AS [2017-06-16_9922], CASE WHEN ISNULL(a.[2017-06-17_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_1],0) as varchar) END AS [2017-06-17_1], CASE WHEN ISNULL(a.[2017-06-17_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_2],0) as varchar) END AS [2017-06-17_2], CASE WHEN ISNULL(a.[2017-06-17_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_3],0) as varchar) END AS [2017-06-17_3], CASE WHEN ISNULL(a.[2017-06-17_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_4],0) as varchar) END AS [2017-06-17_4], CASE WHEN ISNULL(a.[2017-06-17_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_9911],0) as varchar) END AS [2017-06-17_9911], CASE WHEN ISNULL(a.[2017-06-17_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-17_9922],0) as varchar) END AS [2017-06-17_9922], CASE WHEN ISNULL(a.[2017-06-18_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_1],0) as varchar) END AS [2017-06-18_1], CASE WHEN ISNULL(a.[2017-06-18_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_2],0) as varchar) END AS [2017-06-18_2], CASE WHEN ISNULL(a.[2017-06-18_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_3],0) as varchar) END AS [2017-06-18_3], CASE WHEN ISNULL(a.[2017-06-18_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_4],0) as varchar) END AS [2017-06-18_4], CASE WHEN ISNULL(a.[2017-06-18_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_9911],0) as varchar) END AS [2017-06-18_9911], CASE WHEN ISNULL(a.[2017-06-18_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-18_9922],0) as varchar) END AS [2017-06-18_9922], CASE WHEN ISNULL(a.[2017-06-19_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_1],0) as varchar) END AS [2017-06-19_1], CASE WHEN ISNULL(a.[2017-06-19_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_2],0) as varchar) END AS [2017-06-19_2], CASE WHEN ISNULL(a.[2017-06-19_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_3],0) as varchar) END AS [2017-06-19_3], CASE WHEN ISNULL(a.[2017-06-19_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_4],0) as varchar) END AS [2017-06-19_4], CASE WHEN ISNULL(a.[2017-06-19_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_9911],0) as varchar) END AS [2017-06-19_9911], CASE WHEN ISNULL(a.[2017-06-19_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-19_9922],0) as varchar) END AS [2017-06-19_9922], CASE WHEN ISNULL(a.[2017-06-20_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_1],0) as varchar) END AS [2017-06-20_1], CASE WHEN ISNULL(a.[2017-06-20_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_2],0) as varchar) END AS [2017-06-20_2], CASE WHEN ISNULL(a.[2017-06-20_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_3],0) as varchar) END AS [2017-06-20_3], CASE WHEN ISNULL(a.[2017-06-20_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_4],0) as varchar) END AS [2017-06-20_4], CASE WHEN ISNULL(a.[2017-06-20_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_9911],0) as varchar) END AS [2017-06-20_9911], CASE WHEN ISNULL(a.[2017-06-20_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-20_9922],0) as varchar) END AS [2017-06-20_9922], CASE WHEN ISNULL(a.[2017-06-21_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_1],0) as varchar) END AS [2017-06-21_1], CASE WHEN ISNULL(a.[2017-06-21_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_2],0) as varchar) END AS [2017-06-21_2], CASE WHEN ISNULL(a.[2017-06-21_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_3],0) as varchar) END AS [2017-06-21_3], CASE WHEN ISNULL(a.[2017-06-21_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_4],0) as varchar) END AS [2017-06-21_4], CASE WHEN ISNULL(a.[2017-06-21_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_9911],0) as varchar) END AS [2017-06-21_9911], CASE WHEN ISNULL(a.[2017-06-21_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-21_9922],0) as varchar) END AS [2017-06-21_9922], CASE WHEN ISNULL(a.[2017-06-22_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_1],0) as varchar) END AS [2017-06-22_1], CASE WHEN ISNULL(a.[2017-06-22_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_2],0) as varchar) END AS [2017-06-22_2], CASE WHEN ISNULL(a.[2017-06-22_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_3],0) as varchar) END AS [2017-06-22_3], CASE WHEN ISNULL(a.[2017-06-22_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_4],0) as varchar) END AS [2017-06-22_4], CASE WHEN ISNULL(a.[2017-06-22_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_9911],0) as varchar) END AS [2017-06-22_9911], CASE WHEN ISNULL(a.[2017-06-22_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-22_9922],0) as varchar) END AS [2017-06-22_9922], CASE WHEN ISNULL(a.[2017-06-23_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_1],0) as varchar) END AS [2017-06-23_1], CASE WHEN ISNULL(a.[2017-06-23_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_2],0) as varchar) END AS [2017-06-23_2], CASE WHEN ISNULL(a.[2017-06-23_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_3],0) as varchar) END AS [2017-06-23_3], CASE WHEN ISNULL(a.[2017-06-23_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_4],0) as varchar) END AS [2017-06-23_4], CASE WHEN ISNULL(a.[2017-06-23_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_9911],0) as varchar) END AS [2017-06-23_9911], CASE WHEN ISNULL(a.[2017-06-23_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-23_9922],0) as varchar) END AS [2017-06-23_9922], CASE WHEN ISNULL(a.[2017-06-24_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_1],0) as varchar) END AS [2017-06-24_1], CASE WHEN ISNULL(a.[2017-06-24_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_2],0) as varchar) END AS [2017-06-24_2], CASE WHEN ISNULL(a.[2017-06-24_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_3],0) as varchar) END AS [2017-06-24_3], CASE WHEN ISNULL(a.[2017-06-24_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_4],0) as varchar) END AS [2017-06-24_4], CASE WHEN ISNULL(a.[2017-06-24_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_9911],0) as varchar) END AS [2017-06-24_9911], CASE WHEN ISNULL(a.[2017-06-24_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-24_9922],0) as varchar) END AS [2017-06-24_9922], CASE WHEN ISNULL(a.[2017-06-25_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_1],0) as varchar) END AS [2017-06-25_1], CASE WHEN ISNULL(a.[2017-06-25_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_2],0) as varchar) END AS [2017-06-25_2], CASE WHEN ISNULL(a.[2017-06-25_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_3],0) as varchar) END AS [2017-06-25_3], CASE WHEN ISNULL(a.[2017-06-25_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_4],0) as varchar) END AS [2017-06-25_4], CASE WHEN ISNULL(a.[2017-06-25_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_9911],0) as varchar) END AS [2017-06-25_9911], CASE WHEN ISNULL(a.[2017-06-25_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-25_9922],0) as varchar) END AS [2017-06-25_9922], CASE WHEN ISNULL(a.[2017-06-26_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_1],0) as varchar) END AS [2017-06-26_1], CASE WHEN ISNULL(a.[2017-06-26_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_2],0) as varchar) END AS [2017-06-26_2], CASE WHEN ISNULL(a.[2017-06-26_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_3],0) as varchar) END AS [2017-06-26_3], CASE WHEN ISNULL(a.[2017-06-26_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_4],0) as varchar) END AS [2017-06-26_4], CASE WHEN ISNULL(a.[2017-06-26_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_9911],0) as varchar) END AS [2017-06-26_9911], CASE WHEN ISNULL(a.[2017-06-26_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-26_9922],0) as varchar) END AS [2017-06-26_9922], CASE WHEN ISNULL(a.[2017-06-27_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_1],0) as varchar) END AS [2017-06-27_1], CASE WHEN ISNULL(a.[2017-06-27_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_2],0) as varchar) END AS [2017-06-27_2], CASE WHEN ISNULL(a.[2017-06-27_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_3],0) as varchar) END AS [2017-06-27_3], CASE WHEN ISNULL(a.[2017-06-27_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_4],0) as varchar) END AS [2017-06-27_4], CASE WHEN ISNULL(a.[2017-06-27_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_9911],0) as varchar) END AS [2017-06-27_9911], CASE WHEN ISNULL(a.[2017-06-27_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-27_9922],0) as varchar) END AS [2017-06-27_9922], CASE WHEN ISNULL(a.[2017-06-28_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_1],0) as varchar) END AS [2017-06-28_1], CASE WHEN ISNULL(a.[2017-06-28_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_2],0) as varchar) END AS [2017-06-28_2], CASE WHEN ISNULL(a.[2017-06-28_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_3],0) as varchar) END AS [2017-06-28_3], CASE WHEN ISNULL(a.[2017-06-28_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_4],0) as varchar) END AS [2017-06-28_4], CASE WHEN ISNULL(a.[2017-06-28_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_9911],0) as varchar) END AS [2017-06-28_9911], CASE WHEN ISNULL(a.[2017-06-28_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-28_9922],0) as varchar) END AS [2017-06-28_9922], CASE WHEN ISNULL(a.[2017-06-29_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_1],0) as varchar) END AS [2017-06-29_1], CASE WHEN ISNULL(a.[2017-06-29_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_2],0) as varchar) END AS [2017-06-29_2], CASE WHEN ISNULL(a.[2017-06-29_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_3],0) as varchar) END AS [2017-06-29_3], CASE WHEN ISNULL(a.[2017-06-29_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_4],0) as varchar) END AS [2017-06-29_4], CASE WHEN ISNULL(a.[2017-06-29_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_9911],0) as varchar) END AS [2017-06-29_9911], CASE WHEN ISNULL(a.[2017-06-29_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-29_9922],0) as varchar) END AS [2017-06-29_9922], CASE WHEN ISNULL(a.[2017-06-30_1],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_1],0) as varchar) END AS [2017-06-30_1], CASE WHEN ISNULL(a.[2017-06-30_2],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_2],0) as varchar) END AS [2017-06-30_2], CASE WHEN ISNULL(a.[2017-06-30_3],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_3],0) as varchar) END AS [2017-06-30_3], CASE WHEN ISNULL(a.[2017-06-30_4],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_4],0) as varchar) END AS [2017-06-30_4], CASE WHEN ISNULL(a.[2017-06-30_9911],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_9911],0) as varchar) END AS [2017-06-30_9911], CASE WHEN ISNULL(a.[2017-06-30_9922],0)=0 THEN '-' ELSE CAST(ISNULL(a.[2017-06-30_9922],0) as varchar) END AS [2017-06-30_9922]
FROM (
	SELECT 
		MARK_ID, 
		[2017-06-01_1], [2017-06-01_2], [2017-06-01_3], [2017-06-01_4], [2017-06-01_9911], [2017-06-01_9922], [2017-06-02_1], [2017-06-02_2], [2017-06-02_3], [2017-06-02_4], [2017-06-02_9911], [2017-06-02_9922], [2017-06-03_1], [2017-06-03_2], [2017-06-03_3], [2017-06-03_4], [2017-06-03_9911], [2017-06-03_9922], [2017-06-04_1], [2017-06-04_2], [2017-06-04_3], [2017-06-04_4], [2017-06-04_9911], [2017-06-04_9922], [2017-06-05_1], [2017-06-05_2], [2017-06-05_3], [2017-06-05_4], [2017-06-05_9911], [2017-06-05_9922], [2017-06-06_1], [2017-06-06_2], [2017-06-06_3], [2017-06-06_4], [2017-06-06_9911], [2017-06-06_9922], [2017-06-07_1], [2017-06-07_2], [2017-06-07_3], [2017-06-07_4], [2017-06-07_9911], [2017-06-07_9922], [2017-06-08_1], [2017-06-08_2], [2017-06-08_3], [2017-06-08_4], [2017-06-08_9911], [2017-06-08_9922], [2017-06-09_1], [2017-06-09_2], [2017-06-09_3], [2017-06-09_4], [2017-06-09_9911], [2017-06-09_9922], [2017-06-10_1], [2017-06-10_2], [2017-06-10_3], [2017-06-10_4], [2017-06-10_9911], [2017-06-10_9922], [2017-06-11_1], [2017-06-11_2], [2017-06-11_3], [2017-06-11_4], [2017-06-11_9911], [2017-06-11_9922], [2017-06-12_1], [2017-06-12_2], [2017-06-12_3], [2017-06-12_4], [2017-06-12_9911], [2017-06-12_9922], [2017-06-13_1], [2017-06-13_2], [2017-06-13_3], [2017-06-13_4], [2017-06-13_9911], [2017-06-13_9922], [2017-06-14_1], [2017-06-14_2], [2017-06-14_3], [2017-06-14_4], [2017-06-14_9911], [2017-06-14_9922], [2017-06-15_1], [2017-06-15_2], [2017-06-15_3], [2017-06-15_4], [2017-06-15_9911], [2017-06-15_9922], [2017-06-16_1], [2017-06-16_2], [2017-06-16_3], [2017-06-16_4], [2017-06-16_9911], [2017-06-16_9922], [2017-06-17_1], [2017-06-17_2], [2017-06-17_3], [2017-06-17_4], [2017-06-17_9911], [2017-06-17_9922], [2017-06-18_1], [2017-06-18_2], [2017-06-18_3], [2017-06-18_4], [2017-06-18_9911], [2017-06-18_9922], [2017-06-19_1], [2017-06-19_2], [2017-06-19_3], [2017-06-19_4], [2017-06-19_9911], [2017-06-19_9922], [2017-06-20_1], [2017-06-20_2], [2017-06-20_3], [2017-06-20_4], [2017-06-20_9911], [2017-06-20_9922], [2017-06-21_1], [2017-06-21_2], [2017-06-21_3], [2017-06-21_4], [2017-06-21_9911], [2017-06-21_9922], [2017-06-22_1], [2017-06-22_2], [2017-06-22_3], [2017-06-22_4], [2017-06-22_9911], [2017-06-22_9922], [2017-06-23_1], [2017-06-23_2], [2017-06-23_3], [2017-06-23_4], [2017-06-23_9911], [2017-06-23_9922], [2017-06-24_1], [2017-06-24_2], [2017-06-24_3], [2017-06-24_4], [2017-06-24_9911], [2017-06-24_9922], [2017-06-25_1], [2017-06-25_2], [2017-06-25_3], [2017-06-25_4], [2017-06-25_9911], [2017-06-25_9922], [2017-06-26_1], [2017-06-26_2], [2017-06-26_3], [2017-06-26_4], [2017-06-26_9911], [2017-06-26_9922], [2017-06-27_1], [2017-06-27_2], [2017-06-27_3], [2017-06-27_4], [2017-06-27_9911], [2017-06-27_9922], [2017-06-28_1], [2017-06-28_2], [2017-06-28_3], [2017-06-28_4], [2017-06-28_9911], [2017-06-28_9922], [2017-06-29_1], [2017-06-29_2], [2017-06-29_3], [2017-06-29_4], [2017-06-29_9911], [2017-06-29_9922], [2017-06-30_1], [2017-06-30_2], [2017-06-30_3], [2017-06-30_4], [2017-06-30_9911], [2017-06-30_9922]
	FROM (
		SELECT 
			MARK_ID, 
			DT+'_'+COL as COL, 
			VALUE
		FROM (
			
			SELECT 
				a.MARK_ID, a.DT, a.[1], a.[2], a.[3], a.[4], a.[9911], a.[9922]
			FROM (
				SELECT 
					MARK_ID, DT, [1], [2], [3], [4], [9911], [9922]
				FROM (
					SELECT 
						a.MARK_ID, a.REQUESTTYPE_ID, a.DT, 1 as VAL
					FROM (
						SELECT 
							a.ID, 
							b.MARK_ID, 
							c.REQUESTTYPE_ID, 
							datepart(day, datediff(day, 0, CONVERT(datetime, a.DT+' 00:00:01', 120))/7 * 7)/7 + 1 as NUMOFWK, 
							a.DT
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2017 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=6  AND b.ISMYSOLD 
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9911 as REQUESTTYPE_ID, a.DT, a.PRICESUM as VAL
					FROM (
						SELECT
							c.MARK_ID, b.DT, SUM(a.PRICESUM) as PRICESUM
						FROM (
							SELECT a.ID, SUM(a.PRICESUM) as PRICESUM
							FROM(
								SELECT a.ID, ISNULL(SUM(c.PRICE), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_DIAGNOSTICTYPE b ON a.ID = b.APPOINTMENT_ID
								LEFT JOIN TBL_DIAGNOSTICTYPE c ON b.DIAGNOSTICTYPE_ID = c.ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2017 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=6
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.SERVICE_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_SERVICE b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2017 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=6
								GROUP BY a.ID
								UNION ALL
								SELECT a.ID, ISNULL(SUM(b.PART_PRICE * b.CNT), 0) as PRICESUM
								FROM TBL_APPOINTMENT a
								INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
								LEFT JOIN TBL_APPOINTMENT_PART b ON a.ID = b.APPOINTMENT_ID
								WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2017 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=6
								GROUP BY a.ID
							) a
							GROUP BY a.ID
						) a 
						INNER JOIN TBL_APPOINTMENT b ON a.ID=b.ID
						INNER JOIN TBL_PATIENT c ON b.PATIENT_ID=c.ID  WHERE b.ISMYSOLD=1
						GROUP BY c.MARK_ID, b.DT
					) a
					UNION ALL
					SELECT
						a.MARK_ID, 9922 as REQUESTTYPE_ID, a.DT, a.CNTTP as VAL
					FROM (
						SELECT 
							b.MARK_ID, 
							a.DT, 
							COUNT(c.REQUESTTYPE_ID) as CNTTP
						FROM TBL_APPOINTMENT a 
						INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
						INNER JOIN TBL_APPOINTMENT_REQUESTTYPE c ON a.ID=c.APPOINTMENT_ID 
						INNER JOIN TBL_APPOINTMENT_TYPE d ON a.APPOINTMENT_TYPE_ID=d.ID
						WHERE d.ISACTIVESHOW=1 AND a.CLINIC_ID = 1 AND YEAR(CONVERT(datetime, a.DT+' 00:00:01', 120))=2017 AND MONTH(CONVERT(datetime, a.DT+' 00:00:01', 120))=6  AND b.ISMYSOLD=1
						GROUP BY b.MARK_ID, a.DT
					) a

				) a
				PIVOT (
					SUM(VAL) 
					FOR REQUESTTYPE_ID IN ([1], [2], [3], [4], [9911], [9922])
				) as SUMD
			) a
			
		) src
		UNPIVOT
		(
			VALUE FOR COL IN ([1], [2], [3], [4], [9911], [9922])
		) unpiv
	) a
	PIVOT (
		SUM(VALUE)
		FOR COL IN ([2017-06-01_1], [2017-06-01_2], [2017-06-01_3], [2017-06-01_4], [2017-06-01_9911], [2017-06-01_9922], [2017-06-02_1], [2017-06-02_2], [2017-06-02_3], [2017-06-02_4], [2017-06-02_9911], [2017-06-02_9922], [2017-06-03_1], [2017-06-03_2], [2017-06-03_3], [2017-06-03_4], [2017-06-03_9911], [2017-06-03_9922], [2017-06-04_1], [2017-06-04_2], [2017-06-04_3], [2017-06-04_4], [2017-06-04_9911], [2017-06-04_9922], [2017-06-05_1], [2017-06-05_2], [2017-06-05_3], [2017-06-05_4], [2017-06-05_9911], [2017-06-05_9922], [2017-06-06_1], [2017-06-06_2], [2017-06-06_3], [2017-06-06_4], [2017-06-06_9911], [2017-06-06_9922], [2017-06-07_1], [2017-06-07_2], [2017-06-07_3], [2017-06-07_4], [2017-06-07_9911], [2017-06-07_9922], [2017-06-08_1], [2017-06-08_2], [2017-06-08_3], [2017-06-08_4], [2017-06-08_9911], [2017-06-08_9922], [2017-06-09_1], [2017-06-09_2], [2017-06-09_3], [2017-06-09_4], [2017-06-09_9911], [2017-06-09_9922], [2017-06-10_1], [2017-06-10_2], [2017-06-10_3], [2017-06-10_4], [2017-06-10_9911], [2017-06-10_9922], [2017-06-11_1], [2017-06-11_2], [2017-06-11_3], [2017-06-11_4], [2017-06-11_9911], [2017-06-11_9922], [2017-06-12_1], [2017-06-12_2], [2017-06-12_3], [2017-06-12_4], [2017-06-12_9911], [2017-06-12_9922], [2017-06-13_1], [2017-06-13_2], [2017-06-13_3], [2017-06-13_4], [2017-06-13_9911], [2017-06-13_9922], [2017-06-14_1], [2017-06-14_2], [2017-06-14_3], [2017-06-14_4], [2017-06-14_9911], [2017-06-14_9922], [2017-06-15_1], [2017-06-15_2], [2017-06-15_3], [2017-06-15_4], [2017-06-15_9911], [2017-06-15_9922], [2017-06-16_1], [2017-06-16_2], [2017-06-16_3], [2017-06-16_4], [2017-06-16_9911], [2017-06-16_9922], [2017-06-17_1], [2017-06-17_2], [2017-06-17_3], [2017-06-17_4], [2017-06-17_9911], [2017-06-17_9922], [2017-06-18_1], [2017-06-18_2], [2017-06-18_3], [2017-06-18_4], [2017-06-18_9911], [2017-06-18_9922], [2017-06-19_1], [2017-06-19_2], [2017-06-19_3], [2017-06-19_4], [2017-06-19_9911], [2017-06-19_9922], [2017-06-20_1], [2017-06-20_2], [2017-06-20_3], [2017-06-20_4], [2017-06-20_9911], [2017-06-20_9922], [2017-06-21_1], [2017-06-21_2], [2017-06-21_3], [2017-06-21_4], [2017-06-21_9911], [2017-06-21_9922], [2017-06-22_1], [2017-06-22_2], [2017-06-22_3], [2017-06-22_4], [2017-06-22_9911], [2017-06-22_9922], [2017-06-23_1], [2017-06-23_2], [2017-06-23_3], [2017-06-23_4], [2017-06-23_9911], [2017-06-23_9922], [2017-06-24_1], [2017-06-24_2], [2017-06-24_3], [2017-06-24_4], [2017-06-24_9911], [2017-06-24_9922], [2017-06-25_1], [2017-06-25_2], [2017-06-25_3], [2017-06-25_4], [2017-06-25_9911], [2017-06-25_9922], [2017-06-26_1], [2017-06-26_2], [2017-06-26_3], [2017-06-26_4], [2017-06-26_9911], [2017-06-26_9922], [2017-06-27_1], [2017-06-27_2], [2017-06-27_3], [2017-06-27_4], [2017-06-27_9911], [2017-06-27_9922], [2017-06-28_1], [2017-06-28_2], [2017-06-28_3], [2017-06-28_4], [2017-06-28_9911], [2017-06-28_9922], [2017-06-29_1], [2017-06-29_2], [2017-06-29_3], [2017-06-29_4], [2017-06-29_9911], [2017-06-29_9922], [2017-06-30_1], [2017-06-30_2], [2017-06-30_3], [2017-06-30_4], [2017-06-30_9911], [2017-06-30_9922])
	) as PIV
) a
INNER JOIN TBL_AUTOMARK b ON a.MARK_ID=b.ID
ORDER BY b.NAME



SELECT * FROM TBL_APPOINTMENT_DIAGNOSTICTYPE
SELECT * FROM TBL_DIAGNOSTICTYPE
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_REPAIRTYPE
SELECT * FROM TBL_ROLE
SELECT * FROM TBL_USER_ROLE
                      
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT CONVERT(VARCHAR(19),CREATED_DATE, 120) FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_STAFF
SELECT * FROM TBL_PATIENT WHERE ID = 75075
SELECT * FROM TBL_REQUESTTYPE ORDER BY ID
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE WHERE APPOINTMENT_ID = 10010 ORDER BY REQUESTTYPE_ID

SELECT a.ID, a.NAME 
FROM ( 
	SELECT '' as ID, N'- Сонго -' as NAME 
	UNION ALL 
	SELECT CAST(a.ID as varchar) as ID, a.FNAME+'.'+LEFT(a.LNAME,1)+' | '+b.NAME as NAME 
	FROM TBL_STAFF a 
	INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
	INNER JOIN TBL_
	WHERE a.ISACTIVE=1 AND a.CLINIC_ID=(SELECT CLINIC_ID FROM TBL_USER WHERE ID=1) 
) a ORDER BY a.NAME


SELECT b.LISTDATA+'~'+ISNULL(a.REQUESTMEMO,'')+'~'+ISNULL(CAST(a.MILEAGE as NVARCHAR(18)),'') 
FROM TBL_APPOINTMENT a 
INNER JOIN( 
	select APPOINTMENT_ID, stuff( ( 
		select ','+ CAST(REQUESTTYPE_ID as varchar) 
		from TBL_APPOINTMENT_REQUESTTYPE 
		where APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA 
	from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE 
		WHERE APPOINTMENT_ID=70020 
	)t 
) b ON a.ID=b.APPOINTMENT_ID 
WHERE a.ID=70020

SELECT ID, VALUE, NAME, PER FROM TBL_PATIENTDISCOUNT ORDER BY PER


SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 20015

SELECT MAX(ID) AS APPOINTMENT_ID FROM TBL_APPOINTMENT
WHERE PATIENT_ID = (SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 20014) AND
	ID < 20014

SELECT 
	a.ID, a.DT, a.MILEAGE, ISNULL(c.NAME,N'Км') as MILEAGE_NAME, a.REQUESTMEMO, d.MEMO as REPAIR_MEMO, 
	f.LISTDATA
FROM TBL_APPOINTMENT a
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
LEFT JOIN TBL_ZAALTTYPE c ON b.ZAALTTYPE=c.ID
LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.ID=d.APPOINTMENT_ID
LEFT JOIN (
	select t.APPOINTMENT_ID, stuff( ( 
		select ','+ CAST(b.NAME as nvarchar) 
		from TBL_APPOINTMENT_REQUESTTYPE a
		inner join TBL_REQUESTTYPE b on a.REQUESTTYPE_ID = b.ID
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA 
	from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE 
		WHERE APPOINTMENT_ID=(SELECT MAX(ID) AS APPOINTMENT_ID FROM TBL_APPOINTMENT
WHERE PATIENT_ID = (SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 20014) AND ID < 20014)
	)t 
) f ON a.ID = f.APPOINTMENT_ID
WHERE a.ID = (SELECT MAX(ID) AS APPOINTMENT_ID FROM TBL_APPOINTMENT
WHERE PATIENT_ID = (SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 20014) AND ID < 20014)



SELECT * FROM TBL_APPOINTMENT_SERVICE
SELECT * FROM TBL_APPOINTMENT_REPAIR
SELECT * FROM TBL_APPOINTMENT_REQUESTTYPE
SELECT * FROM TBL_REQUESTTYPE
SELECT * FROM TBL_PATIENT
SELECT * FROM TBL_ZAALTTYPE


SELECT CAST(STARTDATETIME as varchar) FROM TBL_APPOINTMENT
SELECT CONVERT(varchar, STARTDATETIME, 120) as STARTDATETIME, CONVERT(varchar, ENDDATETIME, 120) as ENDDATETIME, CONVERT(varchar, FIRST_STARTDATETIME, 120) as FIRST_STARTDATETIME, CONVERT(varchar, FIRST_ENDDATETIME, 120) as FIRST_ENDDATETIME FROM TBL_APPOINTMENT


SELECT 
	a.ID, a.DT, a.MILEAGE, ISNULL(c.NAME,N'Км') as MILEAGE_NAME, a.REQUESTMEMO, d.MEMO as REPAIR_MEMO, f.LISTDATA
FROM TBL_APPOINTMENT a
INNER JOIN TBL_PATIENT b ON a.PATIENT_ID=b.ID
LEFT JOIN TBL_ZAALTTYPE c ON b.ZAALTTYPE=c.ID
LEFT JOIN TBL_APPOINTMENT_REPAIR d ON a.ID=d.APPOINTMENT_ID
LEFT JOIN (
	select t.APPOINTMENT_ID, stuff( ( 
		select ','+ CAST(b.NAME as nvarchar) 
		from TBL_APPOINTMENT_REQUESTTYPE a
		inner join TBL_REQUESTTYPE b on a.REQUESTTYPE_ID = b.ID
		where a.APPOINTMENT_ID = t.APPOINTMENT_ID for XML path('') ),1,1,'') as LISTDATA 
	from ( 
		SELECT DISTINCT APPOINTMENT_ID 
		FROM TBL_APPOINTMENT_REQUESTTYPE 
		WHERE APPOINTMENT_ID=(SELECT MAX(ID) AS APPOINTMENT_ID FROM TBL_APPOINTMENT
WHERE PATIENT_ID = (SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 100020) AND ID < 100020)
	)t 
) f ON a.ID = f.APPOINTMENT_ID
WHERE a.ID = (SELECT MAX(ID) AS APPOINTMENT_ID FROM TBL_APPOINTMENT
WHERE PATIENT_ID = (SELECT PATIENT_ID FROM TBL_APPOINTMENT WHERE ID = 100020) AND ID < 100020)


SELECT * FROM TBL_APPOINTMENT ORDER BY ID DESC

SELECT 
	a.ID,
	CASE 
		WHEN a.FIRST_ENDDATETIME < a.ENDDATETIME AND a.STARTDATETIME < a.FIRST_ENDDATETIME 
		THEN 100-(100*ROUND(CAST(DATEDIFF(MINUTE, a.STARTDATETIME, a.FIRST_ENDDATETIME) as float)/CAST(DATEDIFF(MINUTE, a.STARTDATETIME, a.ENDDATETIME) as float),4)) 
		ELSE 0 
	END as EXTEND_PER
FROM TBL_APPOINTMENT a
ORDER BY a.ID DESC


SELECT * FROM TBL_USER_ROLE

SELECT DATEDIFF(MINUTE, DATEADD(DAY, DATEDIFF(DAY, 0, @dt), 0), @dt)

DATEDIFF(MINUTE, @FromDate, @ToDate)


SELECT CAST(a.ID as varchar) as ID, a.FNAME+'.'+LEFT(a.LNAME,1)+' | '+b.NAME as NAME 
FROM TBL_STAFF a 
INNER JOIN TBL_STAFF_POSITION b ON a.STAFF_POSITION_ID=b.ID 
WHERE a.ISACTIVE=1 AND a.ID NOT IN (SELECT STAFF_ID FROM TBL_USER_STAFF WHERE [USER_ID] IN (SELECT ID FROM TBL_USER WHERE CLINIC_ID = 1))
ORDER BY a.FNAME+'.'+LEFT(a.LNAME,1)

SELECT * FROM TBL_USER_STAFF
SELECT * FROM TBL_USER_ROLE
SELECT * FROM TBL_PATIENT

SELECT a.STAFF_ID
FROM TBL_USER_STAFF a 
INNER JOIN TBL_USER b ON a.[USER_ID]=b.ID
INNER JOIN TBL_USER_ROLE c ON b.ID=c.[USER_ID]
WHERE c.ROLE_ID = 2